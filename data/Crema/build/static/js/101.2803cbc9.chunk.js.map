{"version":3,"sources":["modules/auth/ForgetPassword/ForgetPasswordFirebase.js","modules/auth/ForgetPassword/ForgetPasswordAwsCognito.js","modules/auth/ForgetPassword/ForgetPasswordJwtAuth.js","modules/auth/ForgetPassword/index.js"],"names":["MyTextField","props","useField","field","meta","errorText","error","touched","TextField","helperText","validationSchema","yup","email","IntlMessages","id","required","ForgetPasswordFirebase","dispatch","useDispatch","classes","makeStyles","theme","image","display","cursor","card","maxWidth","width","textAlign","padding","overflow","boxShadow","breakpoints","up","paddingLeft","paddingRight","form","textField","button","fontFamily","Fonts","BOLD","textTransform","fontSize","paddingTop","paddingBottom","borderRadius","textSecondary","color","palette","primary","main","marginLeft","underlineNone","textDecoration","useStyles","Box","pb","px","md","flex","flexDirection","mb","mt","xl","xs","sm","className","src","require","alt","justifyContent","alignItems","component","Card","Typography","validateOnChange","initialValues","onSubmit","data","setSubmitting","resetForm","onForgetPasswordFirebaseUser","isSubmitting","lg","placeholder","name","label","variant","Button","disabled","type","to","clsx","InfoView","ForgetPasswordAwsCognito","history","useHistory","onResetCognitoPassword","ForgetPasswordJwtAuth","ForgetPassword","tab","useLocation","state"],"mappings":"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","file":"static/js/101.2803cbc9.chunk.js","sourcesContent":["import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Form, Formik, useField} from 'formik';\r\nimport * as yup from 'yup';\r\nimport {useDispatch} from 'react-redux';\r\nimport InfoView from '@crema/core/InfoView';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {onForgetPasswordFirebaseUser} from '../../../redux/actions';\r\nimport IntlMessages from '../../../@crema/utility/IntlMessages';\r\nimport {makeStyles} from '@material-ui/core';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\nimport {Link} from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n\r\nconst MyTextField = props => {\r\n  const [field, meta] = useField(props);\r\n  const errorText = meta.error && meta.touched ? meta.error : '';\r\n  return (\r\n    <TextField\r\n      {...props}\r\n      {...field}\r\n      helperText={errorText}\r\n      error={!!errorText}\r\n    />\r\n  );\r\n};\r\n\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string()\r\n    .email(<IntlMessages id='validation.emailFormat' />)\r\n    .required(<IntlMessages id='validation.emailRequired' />),\r\n});\r\n\r\nconst ForgetPasswordFirebase = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    image: {\r\n      display: 'inline-block',\r\n      cursor: 'pointer',\r\n    },\r\n    card: {\r\n      maxWidth: 576,\r\n      width: '100%',\r\n      textAlign: 'center',\r\n      padding: 24,\r\n      overflow: 'hidden',\r\n      boxShadow: '0 10px 15px -3px rgba(0, 0, 0, 0.1)',\r\n      [theme.breakpoints.up('sm')]: {\r\n        padding: 40,\r\n      },\r\n      [theme.breakpoints.up('md')]: {\r\n        padding: 48,\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        paddingLeft: 48,\r\n        paddingRight: 48,\r\n      },\r\n    },\r\n    form: {\r\n      textAlign: 'left',\r\n    },\r\n    textField: {\r\n      width: '100%',\r\n    },\r\n    button: {\r\n      width: '100%',\r\n      fontFamily: Fonts.BOLD,\r\n      textTransform: 'capitalize',\r\n      fontSize: 16,\r\n      paddingTop: 12,\r\n      paddingBottom: 12,\r\n      borderRadius: '30px',\r\n      [theme.breakpoints.up('xl')]: {\r\n        fontSize: 20,\r\n      },\r\n      [theme.breakpoints.up('sm')]: {\r\n        fontSize: 18,\r\n      },\r\n    },\r\n    textSecondary: {\r\n      color: theme.palette.primary.main,\r\n      marginLeft: 10,\r\n    },\r\n    underlineNone: {\r\n      textDecoration: 'none',\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box pb={8} px={{md: 6}} display='flex' flex={1} flexDirection='column'>\r\n      <Box mb={4} mt={{xl: 4}} textAlign={{xs: 'center', sm: 'left'}}>\r\n        <img\r\n          className={classes.image}\r\n          src={require('assets/images/logo-white-with-name.png')}\r\n          alt='crema-logo'\r\n        />\r\n      </Box>\r\n\r\n      <Box\r\n        display='flex'\r\n        flex={1}\r\n        flexDirection='column'\r\n        justifyContent='center'\r\n        alignItems='center'>\r\n        <Box\r\n          component='h2'\r\n          mb={{xs: 6, xl: 8}}\r\n          color='text.white'\r\n          fontFamily={Fonts.BOLD}\r\n          fontSize={{xs: 24, sm: 30}}\r\n          textTransform='uppercase'>\r\n          <IntlMessages id='common.forgetPassword' />\r\n        </Box>\r\n\r\n        <Card className={classes.card}>\r\n          <Box mb={{xs: 6, xl: 12}} fontSize={18}>\r\n            <Typography>\r\n              <IntlMessages id='common.forgetPasswordTextOne' /> <br />\r\n              <IntlMessages id='common.forgetPasswordTextTwo' />\r\n            </Typography>\r\n          </Box>\r\n\r\n          <Formik\r\n            validateOnChange={true}\r\n            initialValues={{\r\n              email: '',\r\n            }}\r\n            validationSchema={validationSchema}\r\n            onSubmit={(data, {setSubmitting, resetForm}) => {\r\n              setSubmitting(true);\r\n              dispatch(onForgetPasswordFirebaseUser(data.email));\r\n              setSubmitting(false);\r\n              resetForm();\r\n            }}>\r\n            {({isSubmitting}) => (\r\n              <Form className={classes.form}>\r\n                <Box mb={{xs: 5, lg: 8}}>\r\n                  <MyTextField\r\n                    placeholder='Email'\r\n                    name='email'\r\n                    label={<IntlMessages id='common.emailAddress' />}\r\n                    className={classes.textField}\r\n                    variant='outlined'\r\n                  />\r\n                </Box>\r\n                <Box mb={4}>\r\n                  <Button\r\n                    variant='contained'\r\n                    color='primary'\r\n                    disabled={isSubmitting}\r\n                    className={classes.button}\r\n                    type='submit'>\r\n                    <IntlMessages id='common.sendNewPassword' />\r\n                  </Button>\r\n                </Box>\r\n\r\n                <Box textAlign='center' fontSize={16} color='text.secondary'>\r\n                  <IntlMessages id='common.alreadyHavePassword' />\r\n                  <Link\r\n                    to='/signin'\r\n                    className={clsx(\r\n                      classes.underlineNone,\r\n                      classes.textSecondary,\r\n                    )}>\r\n                    <IntlMessages id='common.signIn' />\r\n                  </Link>\r\n                </Box>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n\r\n          <InfoView />\r\n        </Card>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ForgetPasswordFirebase;\r\n","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Form, Formik, useField} from 'formik';\r\nimport * as yup from 'yup';\r\nimport {useDispatch} from 'react-redux';\r\nimport {onResetCognitoPassword} from '../../../redux/actions';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport InfoView from '@crema/core/InfoView';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IntlMessages from '../../../@crema/utility/IntlMessages';\r\nimport {makeStyles} from '@material-ui/core';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\nimport clsx from 'clsx';\r\n\r\nconst MyTextField = props => {\r\n  const [field, meta] = useField(props);\r\n  const errorText = meta.error && meta.touched ? meta.error : '';\r\n  return (\r\n    <TextField\r\n      {...props}\r\n      {...field}\r\n      helperText={errorText}\r\n      error={!!errorText}\r\n    />\r\n  );\r\n};\r\n\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string()\r\n    .email(<IntlMessages id='validation.emailFormat' />)\r\n    .required(<IntlMessages id='validation.emailRequired' />),\r\n});\r\n\r\nconst ForgetPasswordAwsCognito = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    image: {\r\n      display: 'inline-block',\r\n      cursor: 'pointer',\r\n    },\r\n    card: {\r\n      maxWidth: 576,\r\n      width: '100%',\r\n      textAlign: 'center',\r\n      padding: 24,\r\n      overflow: 'hidden',\r\n      boxShadow: '0 10px 15px -3px rgba(0, 0, 0, 0.1)',\r\n      [theme.breakpoints.up('sm')]: {\r\n        padding: 40,\r\n      },\r\n      [theme.breakpoints.up('md')]: {\r\n        padding: 48,\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        paddingLeft: 48,\r\n        paddingRight: 48,\r\n      },\r\n    },\r\n    form: {\r\n      textAlign: 'left',\r\n    },\r\n    textField: {\r\n      width: '100%',\r\n    },\r\n    button: {\r\n      width: '100%',\r\n      fontFamily: Fonts.BOLD,\r\n      textTransform: 'capitalize',\r\n      fontSize: 16,\r\n      paddingTop: 12,\r\n      paddingBottom: 12,\r\n      borderRadius: '30px',\r\n      [theme.breakpoints.up('xl')]: {\r\n        fontSize: 20,\r\n      },\r\n      [theme.breakpoints.up('sm')]: {\r\n        fontSize: 18,\r\n      },\r\n    },\r\n    textSecondary: {\r\n      color: theme.palette.primary.main,\r\n      marginLeft: 10,\r\n    },\r\n    underlineNone: {\r\n      textDecoration: 'none',\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box pb={8} px={{md: 6}} display='flex' flex={1} flexDirection='column'>\r\n      <Box mb={4} mt={{xl: 4}} textAlign={{xs: 'center', sm: 'left'}}>\r\n        <img\r\n          className={classes.image}\r\n          src={require('assets/images/logo-white-with-name.png')}\r\n          alt='crema-logo'\r\n        />\r\n      </Box>\r\n\r\n      <Box\r\n        display='flex'\r\n        flex={1}\r\n        flexDirection='column'\r\n        justifyContent='center'\r\n        alignItems='center'>\r\n        <Box\r\n          component='h2'\r\n          mb={{xs: 6, xl: 8}}\r\n          color='text.white'\r\n          fontFamily={Fonts.BOLD}\r\n          fontSize={{xs: 24, sm: 30}}\r\n          textTransform='uppercase'>\r\n          <IntlMessages id='common.forgetPassword' />\r\n        </Box>\r\n\r\n        <Card className={classes.card}>\r\n          <Box mb={{xs: 6, xl: 12}} fontSize={18}>\r\n            <Typography>\r\n              <IntlMessages id='common.forgetPasswordTextOne' /> <br />\r\n              <IntlMessages id='common.forgetPasswordTextTwo' />\r\n            </Typography>\r\n          </Box>\r\n\r\n          <Formik\r\n            validateOnChange={true}\r\n            initialValues={{\r\n              email: '',\r\n            }}\r\n            validationSchema={validationSchema}\r\n            onSubmit={(data, {setSubmitting, resetForm}) => {\r\n              setSubmitting(true);\r\n              dispatch(onResetCognitoPassword(data.email, history));\r\n              setSubmitting(false);\r\n              resetForm();\r\n            }}>\r\n            {({isSubmitting}) => (\r\n              <Form className={classes.form}>\r\n                <Box mb={{xs: 5, lg: 8}}>\r\n                  <MyTextField\r\n                    placeholder='Email'\r\n                    name='email'\r\n                    label={<IntlMessages id='common.emailAddress' />}\r\n                    className={classes.textField}\r\n                    variant='outlined'\r\n                  />\r\n                </Box>\r\n\r\n                <Box mb={4}>\r\n                  <Button\r\n                    variant='contained'\r\n                    color='primary'\r\n                    disabled={isSubmitting}\r\n                    className={classes.button}\r\n                    type='submit'>\r\n                    <IntlMessages id='common.sendNewPassword' />\r\n                  </Button>\r\n                </Box>\r\n\r\n                <Box textAlign='center' fontSize={16} color='text.secondary'>\r\n                  <IntlMessages id='common.alreadyHavePassword' />\r\n                  <Link\r\n                    to='/signin'\r\n                    className={clsx(\r\n                      classes.underlineNone,\r\n                      classes.textSecondary,\r\n                    )}>\r\n                    <IntlMessages id='common.signIn' />\r\n                  </Link>\r\n                </Box>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n\r\n          <InfoView />\r\n        </Card>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ForgetPasswordAwsCognito;\r\n","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Form, Formik, useField} from 'formik';\r\nimport * as yup from 'yup';\r\nimport {useDispatch} from 'react-redux';\r\nimport {onResetCognitoPassword} from '../../../redux/actions';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport InfoView from '@crema/core/InfoView';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IntlMessages from '../../../@crema/utility/IntlMessages';\r\nimport {makeStyles} from '@material-ui/core';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\nimport clsx from 'clsx';\r\n\r\nconst MyTextField = props => {\r\n  const [field, meta] = useField(props);\r\n  const errorText = meta.error && meta.touched ? meta.error : '';\r\n  return (\r\n    <TextField\r\n      {...props}\r\n      {...field}\r\n      helperText={errorText}\r\n      error={!!errorText}\r\n    />\r\n  );\r\n};\r\n\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string()\r\n    .email(<IntlMessages id='validation.emailFormat' />)\r\n    .required(<IntlMessages id='validation.emailRequired' />),\r\n});\r\n\r\nconst ForgetPasswordJwtAuth = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    image: {\r\n      display: 'inline-block',\r\n      cursor: 'pointer',\r\n    },\r\n    card: {\r\n      maxWidth: 576,\r\n      width: '100%',\r\n      textAlign: 'center',\r\n      padding: 24,\r\n      overflow: 'hidden',\r\n      boxShadow: '0 10px 15px -3px rgba(0, 0, 0, 0.1)',\r\n      [theme.breakpoints.up('sm')]: {\r\n        padding: 40,\r\n      },\r\n      [theme.breakpoints.up('md')]: {\r\n        padding: 48,\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        paddingLeft: 48,\r\n        paddingRight: 48,\r\n      },\r\n    },\r\n    form: {\r\n      textAlign: 'left',\r\n    },\r\n    textField: {\r\n      width: '100%',\r\n    },\r\n    button: {\r\n      width: '100%',\r\n      fontFamily: Fonts.BOLD,\r\n      textTransform: 'capitalize',\r\n      fontSize: 16,\r\n      paddingTop: 12,\r\n      paddingBottom: 12,\r\n      borderRadius: '30px',\r\n      [theme.breakpoints.up('xl')]: {\r\n        fontSize: 20,\r\n      },\r\n      [theme.breakpoints.up('sm')]: {\r\n        fontSize: 18,\r\n      },\r\n    },\r\n    textSecondary: {\r\n      color: theme.palette.primary.main,\r\n      marginLeft: 10,\r\n    },\r\n    underlineNone: {\r\n      textDecoration: 'none',\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box pb={8} px={{md: 6}} display='flex' flex={1} flexDirection='column'>\r\n      <Box mb={4} mt={{xl: 4}} textAlign={{xs: 'center', sm: 'left'}}>\r\n        <img\r\n          className={classes.image}\r\n          src={require('assets/images/logo-white-with-name.png')}\r\n          alt='crema-logo'\r\n        />\r\n      </Box>\r\n\r\n      <Box\r\n        display='flex'\r\n        flex={1}\r\n        flexDirection='column'\r\n        justifyContent='center'\r\n        alignItems='center'>\r\n        <Box\r\n          component='h2'\r\n          mb={{xs: 6, xl: 8}}\r\n          color='text.white'\r\n          fontFamily={Fonts.BOLD}\r\n          fontSize={{xs: 24, sm: 30}}\r\n          textTransform='uppercase'>\r\n          <IntlMessages id='common.forgetPassword' />\r\n        </Box>\r\n\r\n        <Card className={classes.card}>\r\n          <Box mb={{xs: 6, xl: 12}} fontSize={18}>\r\n            <Typography>\r\n              <IntlMessages id='common.forgetPasswordTextOne' /> <br />\r\n              <IntlMessages id='common.forgetPasswordTextTwo' />\r\n            </Typography>\r\n          </Box>\r\n\r\n          <Formik\r\n            validateOnChange={true}\r\n            initialValues={{\r\n              email: '',\r\n            }}\r\n            validationSchema={validationSchema}\r\n            onSubmit={(data, {setSubmitting, resetForm}) => {\r\n              setSubmitting(true);\r\n              dispatch(onResetCognitoPassword(data.email, history));\r\n              setSubmitting(false);\r\n              resetForm();\r\n            }}>\r\n            {({isSubmitting}) => (\r\n              <Form className={classes.form}>\r\n                <Box mb={{xs: 5, lg: 8}}>\r\n                  <MyTextField\r\n                    placeholder='Email'\r\n                    name='email'\r\n                    label={<IntlMessages id='common.emailAddress' />}\r\n                    className={classes.textField}\r\n                    variant='outlined'\r\n                  />\r\n                </Box>\r\n\r\n                <Box mb={4}>\r\n                  <Button\r\n                    variant='contained'\r\n                    color='primary'\r\n                    disabled={isSubmitting}\r\n                    className={classes.button}\r\n                    type='submit'>\r\n                    <IntlMessages id='common.sendNewPassword' />\r\n                  </Button>\r\n                </Box>\r\n\r\n                <Box textAlign='center' fontSize={16} color='text.secondary'>\r\n                  <IntlMessages id='common.alreadyHavePassword' />\r\n                  <Link\r\n                    to='/signin'\r\n                    className={clsx(\r\n                      classes.underlineNone,\r\n                      classes.textSecondary,\r\n                    )}>\r\n                    <IntlMessages id='common.signIn' />\r\n                  </Link>\r\n                </Box>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n\r\n          <InfoView />\r\n        </Card>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ForgetPasswordJwtAuth;\r\n","import React from 'react';\r\nimport {useLocation} from 'react-router-dom';\r\nimport ForgetPasswordFirebase from './ForgetPasswordFirebase';\r\nimport ForgetPasswordAwsCognito from './ForgetPasswordAwsCognito';\r\nimport ForgetPasswordJwtAuth from './ForgetPasswordJwtAuth';\r\n\r\nconst ForgetPassword = () => {\r\n  const location = useLocation();\r\n\r\n  const {tab} = location.state;\r\n\r\n  return (\r\n    <>\r\n      {tab === 'firebase' && <ForgetPasswordFirebase />}\r\n      {tab === 'awsCognito' && <ForgetPasswordAwsCognito />}\r\n      {tab === 'jwtAuth' && <ForgetPasswordJwtAuth />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ForgetPassword;\r\n"],"sourceRoot":""}