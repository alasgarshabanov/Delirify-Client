{"version":3,"sources":["@crema/core/AppsPagination/index.js","@crema/core/AppsStarredIcon/index.js","@crema/core/AppsSideBarFolderItem/index.js","@crema/core/EmptyResult/index.js","modules/apps/Mail/ComposeMail/index.js","modules/apps/Mail/MailSideBar/SideBarContent/ConnectionListHoverPopUp.js","modules/apps/Mail/MailSideBar/SideBarContent/ChatWindow.js","modules/apps/Mail/MailSideBar/SideBarContent/ConnectionListItem.js","modules/apps/Mail/MailSideBar/SideBarContent/LabelItem.js","modules/apps/Mail/MailSideBar/SideBarContent/index.js","modules/apps/Mail/MailSideBar/index.style.js","modules/apps/Mail/MailSideBar/index.js","modules/apps/Mail/MailsList/MailContentHeader/CheckedMailActions.js","modules/apps/Mail/MailsList/MailContentHeader/MoreOptions.js","modules/apps/Mail/MailsList/MailContentHeader/index.js","modules/apps/Mail/MailsList/MailListItem/index.js","modules/apps/Mail/MailsList/index.js","modules/apps/Mail/MailDetail/MailDetailHeader/index.js","modules/apps/Mail/MailDetail/MailDetailBody/ReplyMail.js","modules/apps/Mail/MailDetail/MailDetailBody/ForwardMail/index.js","modules/apps/Mail/MailDetail/MailDetailBody/index.js","modules/apps/Mail/MailDetail/index.js","modules/apps/Mail/index.js"],"names":["AppsPagination","count","page","onPageChange","className","component","rowsPerPage","backIconButtonProps","nextIconButtonProps","onChangePage","rowsPerPageOptions","defaultProps","prototype","PropTypes","number","isRequired","func","string","AppsStarredIcon","item","onChange","icon","checkedIcon","checked","isStarred","event","target","WrappedIcon","props","muiName","AppsSideBarFolderItem","path","classes","makeStyles","theme","listItem","paddingLeft","paddingRight","paddingTop","paddingBottom","breakpoints","down","marginTop","marginBottom","fontSize","color","up","backgroundColor","palette","primary","main","fontFamily","Fonts","BOLD","listItemIcon","minWidth","listItemText","useStyle","button","key","id","to","NavLink","activeClassName","mr","xs","xl","name","EmptyResult","title","description","actionTitle","onAction","btn","display","flexDirection","flex","justifyContent","width","height","alignItems","p","mb","REGULAR","variant","onClick","action","Transition","React","forwardRef","ref","Slide","direction","MyTextField","useField","field","meta","errorText","error","touched","TextField","helperText","onBlur","handleBlur","validationSchema","yup","email","IntlMessages","required","cc","bcc","ComposeMail","isComposeMail","onCloseComposeMail","dispatch","useDispatch","pathname","useLocation","useState","isShowBcc","onShowBcc","isShowCC","onShowCC","isShowChip","onShowChip","user","useAuthUser","messages","useIntl","dialogBox","position","maxWidth","formRoot","fontBold","MEDIUM","pointer","cursor","textareaAutosizeRoot","border","background","paper","text","btnRoot","scrollRoot","useStyles","Dialog","open","onClose","aria-labelledby","TransitionComponent","aria-describedby","Box","py","px","borderBottom","grey","Scrollbar","initialValues","subject","content","onSubmit","data","setSubmitting","resetForm","mail","Math","floor","random","isChecked","isReplied","label","alias","red","sentBy","displayName","isAttachment","isRead","folderValue","sentOn","moment","format","senderMailId","onComposeMail","value","isSubmitting","values","handleChange","noValidate","autoComplete","Chip","test","onDelete","fullWidth","margin","InputProps","startAdornment","InputAdornment","ml","placeholder","multiline","rows","bgcolor","Button","type","disabled","connection","bool","ConnectionListHoverPopUp","anchorEl","handlePopoverClose","useContext","AppContext","popperRoot","boxShadow","toolTip","marginLeft","divider","Popper","placement","style","zIndex","borderRadius","overrides","MuiCard","root","ListItem","ListItemAvatar","Avatar","alt","src","image","ListItemText","secondary","pt","pb","Tooltip","address","designation","Divider","object","ChatWindow","isOpenChat","setOpenChat","messageList","setMessageList","agentProfile","teamName","imageUrl","onMessageWasSent","message","onFilesSelected","fileList","objectURL","window","URL","createObjectURL","author","url","fileName","handleClick","isOpen","showEmoji","ConnectionListItem","setAnchorEl","Boolean","avatar","marginTop0","marginY","aria-owns","undefined","onMouseEnter","currentTarget","onMouseLeave","status","LabelItem","my","clone","SideBarContent","labelList","useSelector","mailApp","connectionList","folderList","setComposeMail","textTransform","listRoot","md","lg","clsx","scLauncher","List","aria-label","map","mt","appSidebarDrawer","MailSideBar","mailDrawer","Hidden","lgUp","Drawer","ev","onToggleMailDrawer","appSidebar","leftSidebar","rightSidebar","BackdropProps","backdrop","mdDown","Card","CheckedMailActions","checkedMails","setCheckedMails","isLabelOpen","onOpenLabel","isMoveToOpen","onOpenMoveToIcon","onChangeMailFolder","onUpdateMailFolders","onSelectLabel","labelType","find","onUpdateMailLabels","sm","Menu","MenuItem","folder","array","MoreOptions","unReadOption","readOption","starredOption","unStarredOption","mailList","isMoreIcon","onOpenMoreIcon","includes","onViewMoreOpen","onViewMoreClose","onChangeReadStatus","statusValue","onUpdateReadStatus","onChangeAllReadStatus","onChangeAllStarred","onUpdateStarredStatus","length","onChangeStarredStatus","moreVertIconRoot","any","MailContentHeader","history","useHistory","totalMails","appHeader","checkboxRoot","marginRight","indeterminate","mailIds","push","xsDown","pagination","withRouter","MailListItem","date","onChangeCheckedMails","onChangeStarred","onViewMailDetail","borderColor","crMailTitle","crMailInfo","padding","crMailTime","appsStarredRoot","truncate","overflow","textOverflow","whiteSpace","whitespacePre","dense","pr","stopPropagation","Typography","pl","split","MailsList","params","useParams","setPage","loading","common","useEffect","onGetMailList","concat","filter","mailId","changedMailList","selectedIdList","paginationRoot","borderTop","paddingY","smUp","MailDetailHeader","selectedMail","onUpdateSelectedMail","goBack","mx","ReplyMail","onSubmitMail","textField","textareaAutosize","contrastText","MailForward","onSubmitForwardedMail","onShowCcInput","validateOnChange","sentAt","MailDetailBody","isReply","onReplyMail","isForward","onForward","breakAll","wordBreak","onGetMailTime","ForwardMail","MailDetail","onGetSelectedMail","onNullifyMail","Mail","onGetLabelList","onGetFolderList","onGetConnectionList","appsContainer","appsSidebar","appsMainContent","menuButton","spacing","menuIcon","IconButton","edge","match","InfoView","node"],"mappings":"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","file":"static/js/52.78693a90.chunk.js","sourcesContent":["import React from 'react';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AppsPagination = ({count, page, onPageChange, className}) => {\r\n  return (\r\n    <TablePagination\r\n      component='div'\r\n      count={count}\r\n      rowsPerPage={15}\r\n      className={className}\r\n      page={page}\r\n      backIconButtonProps={{'aria-label': 'Previous Page'}}\r\n      nextIconButtonProps={{'aria-label': 'Next Page'}}\r\n      onChangePage={onPageChange}\r\n      rowsPerPageOptions={[]}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AppsPagination;\r\n\r\nAppsPagination.defaultProps = {\r\n  className: '',\r\n};\r\n\r\nAppsPagination.prototype = {\r\n  count: PropTypes.number.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func,\r\n  className: PropTypes.string,\r\n};\r\n","import React from 'react';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport {Checkbox} from '@material-ui/core';\r\n\r\nconst AppsStarredIcon = ({item, onChange}) => {\r\n  return (\r\n    <Checkbox\r\n      icon={<StarBorderIcon />}\r\n      checkedIcon={<StarIcon />}\r\n      checked={item.isStarred}\r\n      onChange={event => onChange(event.target.checked, item)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AppsStarredIcon;\r\n","import React from 'react';\r\nimport {NavLink} from '../../index';\r\nimport Box from '@material-ui/core/Box';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport {makeStyles} from '@material-ui/styles';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\nconst WrappedIcon = props => <Icon {...props} />;\r\nWrappedIcon.muiName = 'Icon';\r\n\r\nconst AppsSideBarFolderItem = ({item, path}) => {\r\n  const useStyle = makeStyles(theme => ({\r\n    listItem: {\r\n      paddingLeft: '10px',\r\n      paddingRight: '0',\r\n      paddingTop: '5px',\r\n      paddingBottom: '5px',\r\n\r\n      '& .MuiListItemText-root': {\r\n        [theme.breakpoints.down('lg')]: {\r\n          marginTop: 0,\r\n          marginBottom: 0,\r\n        },\r\n      },\r\n\r\n      '& .MuiTypography-body1': {\r\n        fontSize: '16px',\r\n        color: '#A8A8A8',\r\n        [theme.breakpoints.up('xl')]: {\r\n          fontSize: '18px',\r\n        },\r\n      },\r\n\r\n      '& svg': {\r\n        fontSize: '18px',\r\n        color: '#A8A8A8',\r\n        [theme.breakpoints.up('xl')]: {\r\n          fontSize: '20px',\r\n        },\r\n      },\r\n\r\n      '&:hover,&:focus,&.active': {\r\n        backgroundColor: 'transparent',\r\n        color: theme.palette.primary.main,\r\n\r\n        '& svg': {\r\n          fontSize: '18px',\r\n          color: theme.palette.primary.main,\r\n          [theme.breakpoints.up('xl')]: {\r\n            fontSize: '20px',\r\n          },\r\n        },\r\n\r\n        '& .MuiTypography-root': {\r\n          color: theme.palette.primary.main,\r\n        },\r\n      },\r\n\r\n      '&.active': {\r\n        color: theme.palette.primary.main,\r\n        fontFamily: Fonts.BOLD,\r\n\r\n        '& svg, & .MuiTypography-root': {\r\n          fontFamily: Fonts.BOLD,\r\n          color: theme.palette.primary.main,\r\n        },\r\n      },\r\n    },\r\n    listItemIcon: {\r\n      minWidth: 10,\r\n      paddingTop: 4,\r\n    },\r\n    listItemText: {\r\n      fontFamily: 'inherit',\r\n    },\r\n  }));\r\n\r\n  const classes = useStyle();\r\n  return (\r\n    <ListItem\r\n      button\r\n      key={item.id}\r\n      to={path}\r\n      component={NavLink}\r\n      className={classes.listItem}\r\n      activeClassName='active'>\r\n      <Box component='span' mr={{xs: 4, xl: 7}}>\r\n        <ListItemIcon className={classes.listItemIcon}>\r\n          <WrappedIcon>{item.icon}</WrappedIcon>\r\n        </ListItemIcon>\r\n      </Box>\r\n      <ListItemText primary={item.name} className={classes.listItemText} />\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default AppsSideBarFolderItem;\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport PropTypes from 'prop-types';\r\nimport IntlMessages from '../../utility/IntlMessages';\r\nimport {makeStyles} from '@material-ui/styles';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\n\r\nconst EmptyResult = ({title, description, actionTitle, onAction}) => {\r\n  const useStyle = makeStyles({\r\n    btn: {\r\n      marginBottom: 8,\r\n    },\r\n  });\r\n  const classes = useStyle();\r\n  return (\r\n    <Box\r\n      display='flex'\r\n      flexDirection='column'\r\n      flex={1}\r\n      justifyContent='center'\r\n      width={1}\r\n      height={1}\r\n      alignItems='center'\r\n      p={5}>\r\n      <Box component='h4' mb={4} fontFamily={Fonts.REGULAR} color='text.hint'>\r\n        {title}\r\n      </Box>\r\n      {description ? (\r\n        <Box component='p' mb={5} color='text.hint'>\r\n          {description}\r\n        </Box>\r\n      ) : null}\r\n      {actionTitle ? (\r\n        <Button\r\n          className={classes.btn}\r\n          variant='contained'\r\n          color='primary'\r\n          onClick={onAction}>\r\n          {actionTitle}\r\n        </Button>\r\n      ) : null}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default EmptyResult;\r\n\r\nEmptyResult.defaultProps = {\r\n  title: <IntlMessages id='common.noRecordFound' />,\r\n  description: '',\r\n};\r\n\r\nEmptyResult.prototype = {\r\n  title: PropTypes.string,\r\n  description: PropTypes.string,\r\n  actionTitle: PropTypes.string,\r\n  action: PropTypes.func,\r\n};\r\n","import React, {useState} from 'react';\r\nimport {Form, Formik, useField} from 'formik';\r\nimport * as yup from 'yup';\r\nimport Scrollbar from '@crema/core/Scrollbar';\r\nimport {onComposeMail} from '../../../../redux/actions';\r\nimport {useDispatch} from 'react-redux';\r\nimport moment from 'moment';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport {useLocation} from 'react-router-dom';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport IntlMessages from '../../../../@crema/utility/IntlMessages';\r\nimport {useIntl} from 'react-intl';\r\nimport Box from '@material-ui/core/Box';\r\nimport PropTypes from 'prop-types';\r\nimport {useAuthUser} from '../../../../@crema/utility/AppHooks';\r\nimport {InfoView} from '../../../../@crema';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {grey, red} from '@material-ui/core/colors';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport WorkIcon from '@material-ui/core/SvgIcon/SvgIcon';\r\n\r\nexport const isValidEmail = value => {\r\n  return value && /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value);\r\n};\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction='down' ref={ref} {...props} />;\r\n});\r\n\r\nconst MyTextField = props => {\r\n  const [field, meta] = useField(props);\r\n  const errorText = meta.error && meta.touched ? meta.error : '';\r\n  return (\r\n    <TextField\r\n      {...props}\r\n      {...field}\r\n      helperText={errorText}\r\n      error={!!errorText}\r\n      onBlur={props.handleBlur}\r\n    />\r\n  );\r\n};\r\n\r\nconst validationSchema = yup.object({\r\n  to: yup\r\n    .string()\r\n    .email(<IntlMessages id='validation.emailFormat' />)\r\n    .required(<IntlMessages id='validation.emailRequired' />),\r\n  cc: yup.string().email(<IntlMessages id='validation.emailFormat' />),\r\n  bcc: yup.string().email(<IntlMessages id='validation.emailFormat' />),\r\n});\r\n\r\nconst ComposeMail = props => {\r\n  const {isComposeMail, onCloseComposeMail} = props;\r\n  const dispatch = useDispatch();\r\n\r\n  const {pathname} = useLocation();\r\n\r\n  const [isShowBcc, onShowBcc] = useState(false);\r\n\r\n  const [isShowCC, onShowCC] = useState(false);\r\n\r\n  const [isShowChip, onShowChip] = useState(false);\r\n\r\n  const handleBlur = to => {\r\n    if (to !== '') {\r\n      onShowChip(true);\r\n    }\r\n  };\r\n\r\n  const user = useAuthUser();\r\n\r\n  const {messages} = useIntl();\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    dialogBox: {\r\n      position: 'relative',\r\n      '& .MuiDialog-paperWidthSm': {\r\n        maxWidth: 600,\r\n        width: '100%',\r\n      },\r\n      '& .MuiTypography-h6': {\r\n        fontFamily: Fonts.BOLD,\r\n      },\r\n    },\r\n    formRoot: {\r\n      width: '100%',\r\n      height: '100%',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      paddingTop: 20,\r\n      [theme.breakpoints.up('xl')]: {},\r\n    },\r\n    fontBold: {\r\n      fontFamily: Fonts.MEDIUM,\r\n    },\r\n    pointer: {\r\n      cursor: 'pointer',\r\n    },\r\n    textareaAutosizeRoot: {\r\n      width: '100%',\r\n      border: '0 none',\r\n      fontFamily: 'Gilroy-Regular',\r\n      backgroundColor: theme.palette.background.paper,\r\n      color: theme.palette.text.primary,\r\n    },\r\n    btnRoot: {\r\n      paddingLeft: 32,\r\n      paddingRight: 32,\r\n    },\r\n    scrollRoot: {\r\n      height: 595,\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <Dialog\r\n      open={isComposeMail}\r\n      onClose={() => onCloseComposeMail(false)}\r\n      aria-labelledby='simple-modal-title'\r\n      TransitionComponent={Transition}\r\n      aria-describedby='simple-modal-description'\r\n      className={classes.dialogBox}>\r\n      <Box\r\n        py={6}\r\n        px={8}\r\n        display='flex'\r\n        flexDirection='row'\r\n        alignItems='center'\r\n        borderBottom={`1px solid ${grey[300]}`}>\r\n        <Box component='h5' mb={0} fontFamily={Fonts.BOLD}>\r\n          <IntlMessages id='mailApp.compose' />\r\n        </Box>\r\n      </Box>\r\n      <Scrollbar className={classes.scrollRoot}>\r\n        <Formik\r\n          initialValues={{\r\n            to: '',\r\n            cc: '',\r\n            bcc: '',\r\n            subject: '',\r\n            content: '',\r\n          }}\r\n          validationSchema={validationSchema}\r\n          onSubmit={(data, {setSubmitting, resetForm}) => {\r\n            const mail = {\r\n              id: Math.floor(Math.random()) * 1000,\r\n              isChecked: false,\r\n              isStarred: false,\r\n              isReplied: false,\r\n              label: {\r\n                id: 211,\r\n                name: 'Crema',\r\n                alias: 'crema',\r\n                color: red[500],\r\n                icon: <WorkIcon />,\r\n              },\r\n              sentBy: user.displayName ? user.displayName : user.email,\r\n              isAttachment: false,\r\n              isRead: true,\r\n              folderValue: 122,\r\n              sentOn: moment().format('llll'),\r\n              senderMailId: user.email,\r\n              ...data,\r\n              subject: data.subject !== '' ? data.subject : 'No Subject',\r\n            };\r\n            dispatch(onComposeMail(mail, pathname));\r\n            onCloseComposeMail();\r\n            resetForm();\r\n            setSubmitting(false);\r\n          }}>\r\n          {({isSubmitting, values, handleChange}) => (\r\n            <Form className={classes.formRoot} noValidate autoComplete='off'>\r\n              <Box px={8} flex={1}>\r\n                <Box display='flex' alignItems='center'>\r\n                  {!isShowChip ? (\r\n                    <MyTextField\r\n                      fullWidth\r\n                      margin='normal'\r\n                      InputProps={{\r\n                        startAdornment: (\r\n                          <InputAdornment\r\n                            position='start'\r\n                            className={classes.fontBold}>\r\n                            To\r\n                          </InputAdornment>\r\n                        ),\r\n                      }}\r\n                      name='to'\r\n                      handleBlur={() => handleBlur(values.to)}\r\n                    />\r\n                  ) : (\r\n                    <Chip\r\n                      label={values.to}\r\n                      color={isValidEmail(values.to) ? '' : 'secondary'}\r\n                      onDelete={() => onShowChip(false)}\r\n                      variant='outlined'\r\n                    />\r\n                  )}\r\n\r\n                  <Box\r\n                    component='span'\r\n                    ml={4}\r\n                    className={classes.pointer}\r\n                    onClick={() => onShowCC(!isShowCC)}>\r\n                    <IntlMessages id='common.cc' />\r\n                  </Box>\r\n\r\n                  <Box\r\n                    component='span'\r\n                    ml={4}\r\n                    className={classes.pointer}\r\n                    onClick={() => onShowBcc(!isShowBcc)}>\r\n                    <IntlMessages id='common.bcc' />\r\n                  </Box>\r\n                </Box>\r\n\r\n                {isShowCC ? (\r\n                  <Box width='1'>\r\n                    <MyTextField\r\n                      placeholder={messages['common.cc']}\r\n                      fullWidth\r\n                      margin='normal'\r\n                      name='cc'\r\n                    />\r\n                  </Box>\r\n                ) : null}\r\n\r\n                {isShowBcc ? (\r\n                  <Box width='1'>\r\n                    <MyTextField\r\n                      placeholder={messages['common.bcc']}\r\n                      fullWidth\r\n                      margin='normal'\r\n                      name='bcc'\r\n                    />\r\n                  </Box>\r\n                ) : null}\r\n                <Box mb={3}>\r\n                  <MyTextField\r\n                    placeholder={messages['common.subject']}\r\n                    fullWidth\r\n                    margin='normal'\r\n                    name='subject'\r\n                  />\r\n                </Box>\r\n\r\n                <Box mb={3}>\r\n                  <TextField\r\n                    multiline\r\n                    className={classes.textareaAutosizeRoot}\r\n                    rows={15}\r\n                    name='content'\r\n                    placeholder={messages['common.writeContent']}\r\n                    value={values.content}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Box>\r\n              </Box>\r\n\r\n              <Box px={8} py={4} bgcolor='grey.300'>\r\n                <Button\r\n                  className={classes.btnRoot}\r\n                  variant='contained'\r\n                  color='secondary'\r\n                  type='submit'\r\n                  disabled={isSubmitting}>\r\n                  <IntlMessages id='common.send' />\r\n                </Button>\r\n              </Box>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n        <InfoView />\r\n      </Scrollbar>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ComposeMail;\r\n\r\nComposeMail.defaultProps = {\r\n  connection: null,\r\n};\r\n\r\nComposeMail.prototype = {\r\n  isComposeMail: PropTypes.bool.isRequired,\r\n  onCloseComposeMail: PropTypes.func.isRequired,\r\n};\r\n","import React, {useContext} from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport BusinessIcon from '@material-ui/icons/Business';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport QuestionAnswerIcon from '@material-ui/icons/QuestionAnswer';\r\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\r\nimport {Link} from 'react-router-dom';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport AppContext from '../../../../../@crema/utility/AppContext';\r\nimport IntlMessages from '../../../../../@crema/utility/IntlMessages';\r\nimport Box from '@material-ui/core/Box';\r\nimport PropTypes from 'prop-types';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {Fonts} from '../../../../../shared/constants/AppEnums';\r\n\r\nconst ConnectionListHoverPopUp = props => {\r\n  const {anchorEl, open, handlePopoverClose, connection} = props;\r\n  const {theme} = useContext(AppContext);\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    popperRoot: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      cursor: 'pointer',\r\n      boxShadow:\r\n        '0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)',\r\n    },\r\n    toolTip: {\r\n      cursor: 'pointer',\r\n      marginLeft: 12,\r\n    },\r\n    marginLeft: {\r\n      marginLeft: 12,\r\n    },\r\n    divider: {\r\n      marginTop: 8,\r\n      marginBottom: 8,\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <Popper\r\n      id='mouse-over-popover'\r\n      open={open}\r\n      anchorEl={anchorEl}\r\n      placement='right'\r\n      onClose={handlePopoverClose}\r\n      className={classes.popperRoot}\r\n      style={{\r\n        marginLeft: '-15px',\r\n        zIndex: 1305,\r\n        borderRadius: theme.overrides.MuiCard.root.borderRadius,\r\n      }}>\r\n      <ListItem key={connection.id} alignItems='flex-start'>\r\n        <ListItemAvatar>\r\n          <Avatar alt='Remy Sharp' src={connection.image} />\r\n        </ListItemAvatar>\r\n        <ListItemText\r\n          primary={\r\n            <Box component='span' fontFamily={Fonts.BOLD}>\r\n              {connection.name}\r\n            </Box>\r\n          }\r\n          secondary={\r\n            <Box component='span' display='block'>\r\n              {connection.email}\r\n            </Box>\r\n          }\r\n        />\r\n      </ListItem>\r\n\r\n      <Box pt={4} pb={2} px={5} display='flex' alignItems='center'>\r\n        <Tooltip title={<IntlMessages id='common.address' />}>\r\n          <BusinessIcon />\r\n        </Tooltip>\r\n        <Box ml={4}>\r\n          {connection.address ? (\r\n            connection.address\r\n          ) : (\r\n            <IntlMessages id='common.na' />\r\n          )}\r\n        </Box>\r\n      </Box>\r\n\r\n      <Box py={3} px={5} display='flex' alignItems='center'>\r\n        <Tooltip title={<IntlMessages id='common.designation' />}>\r\n          <WorkIcon />\r\n        </Tooltip>\r\n        <Box ml={4}>\r\n          {connection.designation ? (\r\n            connection.designation\r\n          ) : (\r\n            <IntlMessages id='common.na' />\r\n          )}\r\n        </Box>\r\n      </Box>\r\n\r\n      <Divider className={classes.divider} />\r\n\r\n      <Box pt={3} pb={3} px={5} display='flex' alignItems='center'>\r\n        <Box>\r\n          <IntlMessages id='mailApp.addToContacts' />\r\n        </Box>\r\n        <Box ml='auto'>\r\n          <Link className={classes.marginLeft} to='/apps/mail/compose'>\r\n            <Tooltip title={<IntlMessages id='mailApp.sendMail' />}>\r\n              <MailIcon />\r\n            </Tooltip>\r\n          </Link>\r\n          <Tooltip\r\n            className={classes.toolTip}\r\n            title={<IntlMessages id='mailApp.chat' />}>\r\n            <QuestionAnswerIcon />\r\n          </Tooltip>\r\n          <Tooltip\r\n            className={classes.toolTip}\r\n            title={<IntlMessages id='mailApp.remove' />}>\r\n            <NotInterestedIcon />\r\n          </Tooltip>\r\n        </Box>\r\n      </Box>\r\n    </Popper>\r\n  );\r\n};\r\n\r\nexport default ConnectionListHoverPopUp;\r\n\r\nConnectionListHoverPopUp.defaultProps = {\r\n  connection: null,\r\n};\r\n\r\nConnectionListHoverPopUp.prototype = {\r\n  anchorEl: PropTypes.object,\r\n  open: PropTypes.bool.isRequired,\r\n  handlePopoverClose: PropTypes.func.isRequired,\r\n  connection: PropTypes.object,\r\n};\r\n","import React, {useState} from 'react';\r\nimport {Launcher} from 'react-chat-window';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ChatWindow = ({isOpenChat, setOpenChat, connection}) => {\r\n  const [messageList, setMessageList] = useState([]);\r\n\r\n  const onMessageWasSent = message => {\r\n    setMessageList([...messageList, message]);\r\n  };\r\n\r\n  const onFilesSelected = fileList => {\r\n    const objectURL = window.URL.createObjectURL(fileList[0]);\r\n    setMessageList([\r\n      messageList,\r\n      {\r\n        type: 'file',\r\n        author: 'me',\r\n        data: {\r\n          url: objectURL,\r\n          fileName: fileList[0].name,\r\n        },\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    setOpenChat(false);\r\n  };\r\n\r\n  return (\r\n    <Launcher\r\n      agentProfile={{\r\n        teamName: connection.name,\r\n        imageUrl: connection.image,\r\n      }}\r\n      onMessageWasSent={onMessageWasSent}\r\n      onFilesSelected={onFilesSelected}\r\n      messageList={messageList}\r\n      handleClick={handleClick}\r\n      isOpen={isOpenChat}\r\n      showEmoji\r\n    />\r\n  );\r\n};\r\n\r\nexport default ChatWindow;\r\n\r\nChatWindow.defaultProps = {\r\n  connection: null,\r\n};\r\n\r\nChatWindow.prototype = {\r\n  isOpenChat: PropTypes.bool.isRequired,\r\n  setOpenChat: PropTypes.func.isRequired,\r\n  connection: PropTypes.object,\r\n};\r\n","import React, {useState} from 'react';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ConnectionListHoverPopUp from './ConnectionListHoverPopUp';\r\nimport ChatWindow from './ChatWindow';\r\nimport {Box, makeStyles} from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport {Fonts} from '../../../../../shared/constants/AppEnums';\r\n\r\nconst ConnectionListItem = props => {\r\n  const {connection} = props;\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const [isOpenChat, setOpenChat] = useState(false);\r\n\r\n  const handlePopoverOpen = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handlePopoverClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    listItem: {\r\n      paddingLeft: 0,\r\n      paddingRight: 0,\r\n      cursor: 'pointer',\r\n      [theme.breakpoints.up('xl')]: {\r\n        paddingLeft: 16,\r\n        paddingRight: 16,\r\n      },\r\n    },\r\n    avatar: {\r\n      width: 50,\r\n      height: 50,\r\n    },\r\n    marginTop0: {\r\n      marginTop: 0,\r\n    },\r\n    marginY: {\r\n      marginTop: 0,\r\n      marginBottom: 0,\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <ListItem\r\n        aria-owns={open ? 'mouse-over-popover' : undefined}\r\n        onMouseEnter={handlePopoverOpen}\r\n        onMouseLeave={handlePopoverClose}\r\n        onClick={() => setOpenChat(true)}\r\n        key={connection.id}\r\n        className={classes.listItem}\r\n        alignItems='flex-start'>\r\n        <Box mr={{xs: 2, xl: 3}} component='span'>\r\n          <ListItemAvatar className={classes.marginTop0}>\r\n            <Avatar\r\n              className={classes.avatar}\r\n              alt='Remy Sharp'\r\n              src={connection.image}\r\n            />\r\n          </ListItemAvatar>\r\n        </Box>\r\n        <ListItemText\r\n          className={classes.marginY}\r\n          primary={\r\n            <Box component='span' fontFamily={Fonts.BOLD}>\r\n              {connection.name}\r\n            </Box>\r\n          }\r\n          secondary={\r\n            <Box component='span' display='block' color='text.primary'>\r\n              {connection.status}\r\n            </Box>\r\n          }\r\n        />\r\n        <ConnectionListHoverPopUp\r\n          anchorEl={anchorEl}\r\n          open={open}\r\n          connection={connection}\r\n          handlePopoverClose={handlePopoverClose}\r\n        />\r\n      </ListItem>\r\n\r\n      {isOpenChat ? (\r\n        <ChatWindow\r\n          setOpenChat={setOpenChat}\r\n          isOpenChat={isOpenChat}\r\n          connection={connection}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ConnectionListItem;\r\n\r\nConnectionListItem.defaultProps = {\r\n  connection: null,\r\n};\r\n\r\nConnectionListItem.prototype = {\r\n  connection: PropTypes.object,\r\n};\r\n","import React from 'react';\r\nimport {NavLink} from '../../../../../@crema';\r\nimport Box from '@material-ui/core/Box';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst LabelItem = ({label, classes}) => {\r\n  return (\r\n    <ListItem\r\n      key={label.id}\r\n      button\r\n      to={`/apps/mail/label/${label.alias}`}\r\n      component={NavLink}\r\n      activeClassName='active'>\r\n      <Box\r\n        component='span'\r\n        height={12}\r\n        width={12}\r\n        mr={{xs: 4, xl: 7}}\r\n        borderRadius='50%'\r\n        bgcolor={`${label.color}`}\r\n      />\r\n      <Box my={{xl: 1}} clone>\r\n        <ListItemText primary={label.name} />\r\n      </Box>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default LabelItem;\r\n\r\nLabelItem.prototype = {\r\n  label: PropTypes.object.isRequired,\r\n};\r\n","import React, {useState} from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport IntlMessages from '../../../../../@crema/utility/IntlMessages';\r\nimport Scrollbar from '../../../../../@crema/core/Scrollbar';\r\nimport {useSelector} from 'react-redux';\r\nimport ComposeMail from '../../ComposeMail';\r\nimport ConnectionListItem from './ConnectionListItem';\r\nimport AppsSideBarFolderItem from '../../../../../@crema/core/AppsSideBarFolderItem';\r\nimport LabelItem from './LabelItem';\r\nimport clsx from 'clsx';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {Fonts} from '../../../../../shared/constants/AppEnums';\r\n\r\nconst SideBarContent = props => {\r\n  const labelList = useSelector(({mailApp}) => mailApp.labelList);\r\n\r\n  const connectionList = useSelector(({mailApp}) => mailApp.connectionList);\r\n\r\n  const folderList = useSelector(({mailApp}) => mailApp.folderList);\r\n\r\n  const [isComposeMail, setComposeMail] = useState(false);\r\n\r\n  const onOpenComposeMail = () => {\r\n    setComposeMail(true);\r\n  };\r\n\r\n  const onCloseComposeMail = () => {\r\n    setComposeMail(false);\r\n  };\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    btnRoot: {\r\n      width: '100%',\r\n      height: '3rem',\r\n      fontSize: 16,\r\n      textTransform: 'capitalize',\r\n      fontFamily: Fonts.MEDIUM,\r\n      [theme.breakpoints.up('xl')]: {\r\n        fontSize: 20,\r\n        height: '3.5rem',\r\n      },\r\n    },\r\n    listRoot: {\r\n      marginBottom: 8,\r\n      [theme.breakpoints.up('xl')]: {\r\n        marginBottom: 20,\r\n      },\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <>\r\n      {labelList && connectionList && folderList ? (\r\n        <>\r\n          <Box\r\n            px={{xs: 4, md: 5, lg: 6, xl: 8}}\r\n            pt={{xs: 4, md: 5, lg: 6, xl: 8}}\r\n            pb={{xs: 2, xl: 5}}>\r\n            <Button\r\n              variant='contained'\r\n              color='secondary'\r\n              className={classes.btnRoot}\r\n              onClick={onOpenComposeMail}>\r\n              <IntlMessages id='common.compose' />\r\n            </Button>\r\n          </Box>\r\n\r\n          <Scrollbar className={clsx(classes.scLauncher, 'scroll-app-sidebar')}>\r\n            <Box\r\n              px={{xs: 4, md: 5, lg: 6, xl: 8}}\r\n              pb={{xs: 4, md: 5, lg: 6, xl: 8}}\r\n              pt={0}>\r\n              <List\r\n                className={classes.listRoot}\r\n                component='nav'\r\n                aria-label='main mailbox folders'>\r\n                {folderList.map(item => {\r\n                  return (\r\n                    <AppsSideBarFolderItem\r\n                      key={item.id}\r\n                      item={item}\r\n                      classes={classes}\r\n                      path={`/apps/mail/folder/${item.alias}`}\r\n                    />\r\n                  );\r\n                })}\r\n              </List>\r\n\r\n              <Box\r\n                component='h5'\r\n                fontSize={16}\r\n                mb={{xs: 1, xl: 3}}\r\n                mt={{xs: 4, xl: 5}}\r\n                fontFamily={Fonts.MEDIUM}>\r\n                <IntlMessages id='common.labels' />\r\n              </Box>\r\n\r\n              <List\r\n                className={classes.listRoot}\r\n                component='nav'\r\n                aria-label='main mailbox folders'>\r\n                {labelList.map(label => {\r\n                  return (\r\n                    <LabelItem classes={classes} key={label.id} label={label} />\r\n                  );\r\n                })}\r\n              </List>\r\n\r\n              <Box\r\n                component='h5'\r\n                fontSize={16}\r\n                mb={{xs: 1, xl: 3}}\r\n                mt={{xs: 4, xl: 5}}\r\n                fontFamily={Fonts.MEDIUM}>\r\n                <IntlMessages id='common.connections' />\r\n              </Box>\r\n\r\n              <List>\r\n                {connectionList.map(connection => {\r\n                  return (\r\n                    <ConnectionListItem\r\n                      classes={classes}\r\n                      connection={connection}\r\n                      key={connection.id}\r\n                    />\r\n                  );\r\n                })}\r\n              </List>\r\n            </Box>\r\n          </Scrollbar>\r\n        </>\r\n      ) : null}\r\n\r\n      {isComposeMail ? (\r\n        <ComposeMail\r\n          isComposeMail={isComposeMail}\r\n          onCloseComposeMail={onCloseComposeMail}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SideBarContent;\r\n","import {makeStyles} from '@material-ui/core/styles';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  listItem: {\r\n    paddingLeft: '10px',\r\n    paddingRight: '0',\r\n    paddingTop: '5px',\r\n    paddingBottom: '5px',\r\n    backgroundColor: 'transparent',\r\n\r\n    '& .MuiListItemText-root': {\r\n      [theme.breakpoints.down('lg')]: {\r\n        marginTop: 0,\r\n        marginBottom: 0,\r\n      },\r\n    },\r\n\r\n    '& .MuiTypography-body1': {\r\n      fontSize: '16px',\r\n      color: '#A8A8A8',\r\n      [theme.breakpoints.up('xl')]: {\r\n        fontSize: '18px',\r\n      },\r\n    },\r\n\r\n    '& svg': {\r\n      fontSize: '18px',\r\n      color: '#A8A8A8',\r\n      [theme.breakpoints.up('xl')]: {\r\n        fontSize: '20px',\r\n      },\r\n    },\r\n\r\n    '&:hover,&:focus,&.active': {\r\n      backgroundColor: 'transparent',\r\n      color: theme.palette.primary.main,\r\n\r\n      '& svg': {\r\n        fontSize: '18px',\r\n        color: theme.palette.primary.main,\r\n        [theme.breakpoints.up('xl')]: {\r\n          fontSize: '20px',\r\n        },\r\n      },\r\n\r\n      '& .MuiTypography-root': {\r\n        color: theme.palette.primary.main,\r\n      },\r\n    },\r\n\r\n    '&.active': {\r\n      color: theme.palette.primary.main,\r\n      fontFamily: Fonts.BOLD,\r\n\r\n      '& svg, & .MuiTypography-root': {\r\n        fontFamily: Fonts.BOLD,\r\n        color: theme.palette.primary.main,\r\n      },\r\n    },\r\n  },\r\n  appSidebarDrawer: {\r\n    width: '19rem',\r\n    '& .listItem': {\r\n      zIndex: 1305,\r\n    },\r\n  },\r\n  scLauncher: {\r\n    '& .sc-header, & .sc-message--content.sent .sc-message--text, & .sc-header--close-button:hover': {\r\n      backgroundColor: `${theme.palette.primary.main} !important`,\r\n    },\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport clsx from 'clsx';\r\nimport SideBarContent from './SideBarContent';\r\nimport {onToggleMailDrawer} from '../../../../redux/actions';\r\nimport PropTypes from 'prop-types';\r\nimport useStyles from './index.style';\r\n\r\nconst MailSideBar = props => {\r\n  const dispatch = useDispatch();\r\n\r\n  const mailDrawer = useSelector(({mailApp}) => mailApp.mailDrawer);\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Hidden lgUp>\r\n        <Drawer\r\n          open={mailDrawer}\r\n          onClose={ev => dispatch(onToggleMailDrawer())}\r\n          classes={{\r\n            root: clsx(classes.appSidebar, props.variant),\r\n            paper: clsx(\r\n              classes.appSidebarDrawer,\r\n              props.variant,\r\n              props.position === 'left'\r\n                ? classes.leftSidebar\r\n                : classes.rightSidebar,\r\n            ),\r\n          }}\r\n          // container={props.rootRef.current}\r\n          BackdropProps={{\r\n            classes: {\r\n              root: classes.backdrop,\r\n            },\r\n          }}\r\n          style={{position: 'absolute'}}>\r\n          <SideBarContent />\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden mdDown>\r\n        <Card>\r\n          <SideBarContent />\r\n        </Card>\r\n      </Hidden>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MailSideBar;\r\n\r\nMailSideBar.defaultProps = {\r\n  variant: '',\r\n  position: '',\r\n};\r\n\r\nMailSideBar.propTypes = {\r\n  position: PropTypes.string,\r\n  variant: PropTypes.string,\r\n};\r\n","import React, {useState} from 'react';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IntlMessages from '../../../../../@crema/utility/IntlMessages';\r\nimport Box from '@material-ui/core/Box';\r\nimport ArchiveIcon from '@material-ui/icons/Archive';\r\nimport InfoSharpIcon from '@material-ui/icons/InfoSharp';\r\nimport DeleteSharpIcon from '@material-ui/icons/DeleteSharp';\r\nimport LabelSharpIcon from '@material-ui/icons/LabelSharp';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ShopTwoSharpIcon from '@material-ui/icons/ShopTwoSharp';\r\nimport {\r\n  onUpdateMailFolders,\r\n  onUpdateMailLabels,\r\n} from '../../../../../redux/actions';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst CheckedMailActions = props => {\r\n  const {checkedMails, setCheckedMails} = props;\r\n  const dispatch = useDispatch();\r\n  const [isLabelOpen, onOpenLabel] = useState(null);\r\n\r\n  const [isMoveToOpen, onOpenMoveToIcon] = useState(null);\r\n\r\n  const labelList = useSelector(({mailApp}) => mailApp.labelList);\r\n\r\n  const folderList = useSelector(({mailApp}) => mailApp.folderList);\r\n\r\n  const onLabelOpen = event => {\r\n    onOpenLabel(event.currentTarget);\r\n  };\r\n\r\n  const onLabelClose = () => {\r\n    onOpenLabel(null);\r\n  };\r\n\r\n  const onMoveToOpen = event => {\r\n    onOpenMoveToIcon(event.currentTarget);\r\n  };\r\n\r\n  const onMoveToClose = () => {\r\n    onOpenMoveToIcon(null);\r\n  };\r\n\r\n  const onChangeMailFolder = type => {\r\n    dispatch(onUpdateMailFolders(checkedMails, type));\r\n    setCheckedMails([]);\r\n  };\r\n\r\n  const onSelectLabel = event => {\r\n    const labelType = labelList.find(label => label.id === event.target.value);\r\n    dispatch(onUpdateMailLabels(checkedMails, labelType));\r\n    setCheckedMails([]);\r\n    onOpenLabel(null);\r\n  };\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    pointer: {\r\n      cursor: 'pointer',\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <Box>\r\n      <Tooltip title={<IntlMessages id='common.archive' />}>\r\n        <Box mr={{xs: 2, sm: 4}} component='span' color='text.disabled'>\r\n          <ArchiveIcon\r\n            className={classes.pointer}\r\n            onClick={() => onChangeMailFolder(127)}\r\n          />\r\n        </Box>\r\n      </Tooltip>\r\n\r\n      <Tooltip title={<IntlMessages id='common.reportSpam' />}>\r\n        <Box mr={{xs: 2, sm: 4}} component='span' color='text.disabled'>\r\n          <InfoSharpIcon\r\n            className={classes.pointer}\r\n            onClick={() => onChangeMailFolder(125)}\r\n          />\r\n        </Box>\r\n      </Tooltip>\r\n\r\n      <Tooltip title={<IntlMessages id='common.trash' />}>\r\n        <Box mr={{xs: 2, sm: 4}} component='span' color='text.disabled'>\r\n          <DeleteSharpIcon\r\n            className={classes.pointer}\r\n            onClick={() => onChangeMailFolder(126)}\r\n          />\r\n        </Box>\r\n      </Tooltip>\r\n\r\n      <Tooltip title={<IntlMessages id='common.label' />}>\r\n        <Box mr={{xs: 2, sm: 4}} component='span' color='text.disabled'>\r\n          <LabelSharpIcon\r\n            className={classes.pointer}\r\n            value={1}\r\n            onClick={onLabelOpen}\r\n          />\r\n        </Box>\r\n      </Tooltip>\r\n\r\n      <Menu\r\n        anchorEl={isLabelOpen}\r\n        open={Boolean(isLabelOpen)}\r\n        onClose={onLabelClose}>\r\n        {labelList.map(label => {\r\n          return (\r\n            <MenuItem onClick={onSelectLabel} value={label.id} key={label.id}>\r\n              {label.name}\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Menu>\r\n\r\n      <Tooltip title={<IntlMessages id='common.moveTo' />}>\r\n        <Box mr={{xs: 2, sm: 4}} component='span' color='text.disabled'>\r\n          <ShopTwoSharpIcon\r\n            className={classes.pointer}\r\n            onClick={onMoveToOpen}\r\n          />\r\n        </Box>\r\n      </Tooltip>\r\n\r\n      <Menu\r\n        anchorEl={isMoveToOpen}\r\n        open={Boolean(isMoveToOpen)}\r\n        onClose={onMoveToClose}>\r\n        {folderList.map(folder => {\r\n          return (\r\n            <MenuItem\r\n              onClick={() => onChangeMailFolder(folder.id)}\r\n              key={folder.id}>\r\n              {folder.name}\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Menu>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CheckedMailActions;\r\n\r\nCheckedMailActions.defaultProps = {\r\n  checkedMails: [],\r\n};\r\n\r\nCheckedMailActions.prototype = {\r\n  checkedMails: PropTypes.array.isRequired,\r\n  setCheckedMails: PropTypes.func,\r\n};\r\n","import React, {useState} from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IntlMessages from '../../../../../@crema/utility/IntlMessages';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {\r\n  onUpdateReadStatus,\r\n  onUpdateStarredStatus,\r\n} from '../../../../../redux/actions';\r\nimport PropTypes from 'prop-types';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport {grey} from '@material-ui/core/colors';\r\n\r\nconst MoreOptions = props => {\r\n  const {checkedMails, setCheckedMails, path} = props;\r\n\r\n  let unReadOption;\r\n  let readOption;\r\n  let starredOption;\r\n  let unStarredOption;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const mailList = useSelector(({mailApp}) => mailApp.mailList);\r\n\r\n  const [isMoreIcon, onOpenMoreIcon] = useState(null);\r\n\r\n  mailList.map(mail => {\r\n    if (checkedMails.includes(mail.id) && mail.isRead) {\r\n      unReadOption = true;\r\n    }\r\n    if (checkedMails.includes(mail.id) && !mail.isRead) {\r\n      readOption = true;\r\n    }\r\n    if (checkedMails.includes(mail.id) && mail.isStarred) {\r\n      unStarredOption = true;\r\n    }\r\n    if (checkedMails.includes(mail.id) && !mail.isStarred) {\r\n      starredOption = true;\r\n    }\r\n    return null;\r\n  });\r\n\r\n  const onViewMoreOpen = event => {\r\n    onOpenMoreIcon(event.currentTarget);\r\n  };\r\n\r\n  const onViewMoreClose = () => {\r\n    onOpenMoreIcon(null);\r\n  };\r\n\r\n  const onChangeReadStatus = statusValue => {\r\n    const status = !!statusValue;\r\n    dispatch(onUpdateReadStatus(checkedMails, status));\r\n    setCheckedMails([]);\r\n    onOpenMoreIcon(null);\r\n  };\r\n\r\n  const onChangeAllReadStatus = statusValue => {\r\n    const status = !!statusValue;\r\n    const checkedMails = mailList.map(mail => mail.id);\r\n    dispatch(onUpdateReadStatus(checkedMails, status));\r\n    setCheckedMails([]);\r\n    onOpenMoreIcon(null);\r\n  };\r\n\r\n  const onChangeAllStarred = status => {\r\n    const checkedMails = mailList.map(mail => mail.id);\r\n    dispatch(\r\n      onUpdateStarredStatus(checkedMails, status, path[path.length - 1]),\r\n    );\r\n    setCheckedMails([]);\r\n    onOpenMoreIcon(null);\r\n  };\r\n\r\n  const onChangeStarredStatus = status => {\r\n    dispatch(\r\n      onUpdateStarredStatus(checkedMails, status, path[path.length - 1]),\r\n    );\r\n    setCheckedMails([]);\r\n    onOpenMoreIcon(null);\r\n  };\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    pointer: {\r\n      cursor: 'pointer',\r\n    },\r\n    moreVertIconRoot: {\r\n      color: grey[700],\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <>\r\n      {checkedMails.length > 0 ? (\r\n        <Box>\r\n          <Tooltip title={<IntlMessages id='common.more' />}>\r\n            <MoreVertIcon\r\n              className={clsx(classes.pointer, classes.moreVertIconRoot)}\r\n              onClick={onViewMoreOpen}\r\n            />\r\n          </Tooltip>\r\n\r\n          <Menu\r\n            anchorEl={isMoreIcon}\r\n            open={Boolean(isMoreIcon)}\r\n            onClose={onViewMoreClose}>\r\n            {readOption ? (\r\n              <MenuItem onClick={() => onChangeReadStatus(1)}>\r\n                <IntlMessages id='mailApp.markAsRead' />\r\n              </MenuItem>\r\n            ) : null}\r\n            {unReadOption ? (\r\n              <MenuItem onClick={() => onChangeReadStatus(0)}>\r\n                <IntlMessages id='mailApp.markAsUnread' />\r\n              </MenuItem>\r\n            ) : null}\r\n            {starredOption ? (\r\n              <MenuItem onClick={() => onChangeStarredStatus(1)}>\r\n                <IntlMessages id='mailApp.markAsImportant' />\r\n              </MenuItem>\r\n            ) : null}\r\n            {unStarredOption ? (\r\n              <MenuItem onClick={() => onChangeStarredStatus(0)}>\r\n                <IntlMessages id='mailApp.markAsNotImportant' />\r\n              </MenuItem>\r\n            ) : null}\r\n          </Menu>\r\n        </Box>\r\n      ) : (\r\n        <Box>\r\n          <Tooltip title={<IntlMessages id='common.more' />}>\r\n            <MoreVertIcon\r\n              className={clsx(classes.pointer, classes.moreVertIconRoot)}\r\n              onClick={onViewMoreOpen}\r\n            />\r\n          </Tooltip>\r\n\r\n          <Menu\r\n            anchorEl={isMoreIcon}\r\n            open={Boolean(isMoreIcon)}\r\n            onClose={onViewMoreClose}>\r\n            <MenuItem onClick={() => onChangeAllReadStatus(1)}>\r\n              <IntlMessages id='mailApp.markAllAsRead' />\r\n            </MenuItem>\r\n            <MenuItem onClick={() => onChangeAllReadStatus(0)}>\r\n              <IntlMessages id='mailApp.markAllAsUnread' />\r\n            </MenuItem>\r\n            <MenuItem onClick={() => onChangeAllStarred(1)}>\r\n              <IntlMessages id='mailApp.markAllAsImportant' />\r\n            </MenuItem>\r\n            <MenuItem onClick={() => onChangeAllStarred(0)}>\r\n              <IntlMessages id='mailApp.markAllAsNotImportant' />\r\n            </MenuItem>\r\n          </Menu>\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MoreOptions;\r\n\r\nMoreOptions.defaultProps = {\r\n  checkedMails: [],\r\n};\r\n\r\nMoreOptions.prototype = {\r\n  checkedMails: PropTypes.array.isRequired,\r\n  setCheckedMails: PropTypes.func,\r\n  path: PropTypes.any.isRequired,\r\n};\r\n","import React from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox/index';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport Tooltip from '@material-ui/core/Tooltip/index';\r\nimport {useSelector} from 'react-redux';\r\nimport {useHistory, withRouter} from 'react-router-dom';\r\nimport IntlMessages from '../../../../../@crema/utility/IntlMessages';\r\nimport Box from '@material-ui/core/Box';\r\nimport makeStyles from '@material-ui/styles/makeStyles';\r\nimport {Hidden} from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport CheckedMailActions from './CheckedMailActions';\r\nimport MoreOptions from './MoreOptions';\r\nimport AppsPagination from '../../../../../@crema/core/AppsPagination';\r\nimport {grey} from '@material-ui/core/colors';\r\n\r\nconst MailContentHeader = props => {\r\n  const {path, checkedMails, setCheckedMails, page, onPageChange} = props;\r\n\r\n  const history = useHistory();\r\n\r\n  const mailList = useSelector(({mailApp}) => mailApp.mailList);\r\n\r\n  const totalMails = useSelector(({mailApp}) => mailApp.totalMails);\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    appHeader: {\r\n      height: 61,\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      borderBottom: `1px solid ${grey[300]}`,\r\n      [theme.breakpoints.up('sm')]: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        height: 77,\r\n      },\r\n    },\r\n    checkboxRoot: {\r\n      marginRight: 8,\r\n    },\r\n    pointer: {\r\n      cursor: 'pointer',\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles(props);\r\n\r\n  const onHandleMasterCheckbox = event => {\r\n    if (event.target.checked) {\r\n      const mailIds = mailList.map(mail => mail.id);\r\n      setCheckedMails(mailIds);\r\n    } else {\r\n      setCheckedMails([]);\r\n    }\r\n  };\r\n\r\n  const onRefreshPage = () => {\r\n    history.push(path);\r\n  };\r\n\r\n  return (\r\n    <Box px={5} py={{xs: 1, xl: 3}} className={classes.appHeader}>\r\n      <Box display='flex' flexDirection='row' alignItems='center'>\r\n        <Checkbox\r\n          color='primary'\r\n          className={classes.checkboxRoot}\r\n          indeterminate={\r\n            checkedMails.length > 0 && checkedMails.length < mailList.length\r\n          }\r\n          checked={\r\n            mailList.length > 0 && checkedMails.length === mailList.length\r\n          }\r\n          onChange={onHandleMasterCheckbox}\r\n        />\r\n\r\n        {checkedMails.length > 0 ? (\r\n          <CheckedMailActions\r\n            checkedMails={checkedMails}\r\n            setCheckedMails={setCheckedMails}\r\n          />\r\n        ) : null}\r\n\r\n        {checkedMails.length < 1 ? (\r\n          <Tooltip title={<IntlMessages id='common.refresh' />}>\r\n            <Box mr={4} component='span' color='text.disabled'>\r\n              <RefreshIcon\r\n                className={classes.pointer}\r\n                onClick={onRefreshPage}\r\n              />\r\n            </Box>\r\n          </Tooltip>\r\n        ) : null}\r\n\r\n        <MoreOptions\r\n          checkedMails={checkedMails}\r\n          setCheckedMails={setCheckedMails}\r\n          path={path}\r\n        />\r\n      </Box>\r\n      <Hidden xsDown>\r\n        {mailList.length > 0 ? (\r\n          <Box component='span' ml={{sm: 'auto'}}>\r\n            <AppsPagination\r\n              className={classes.pagination}\r\n              count={totalMails}\r\n              page={page}\r\n              onPageChange={onPageChange}\r\n            />\r\n          </Box>\r\n        ) : null}\r\n      </Hidden>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default withRouter(MailContentHeader);\r\n\r\nMailContentHeader.defaultProps = {\r\n  checkedMails: [],\r\n  page: 0,\r\n};\r\n\r\nMailContentHeader.prototype = {\r\n  checkedMails: PropTypes.array,\r\n  setCheckedMails: PropTypes.func,\r\n  page: PropTypes.number,\r\n  onPageChange: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport {Checkbox, makeStyles} from '@material-ui/core';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\n\r\nimport moment from 'moment';\r\nimport clsx from 'clsx';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport PropTypes from 'prop-types';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport AppsStarredIcon from '../../../../../@crema/core/AppsStarredIcon';\r\nimport {Fonts} from '../../../../../shared/constants/AppEnums';\r\n\r\nconst MailListItem = props => {\r\n  const {\r\n    mail,\r\n    checkedMails,\r\n    onChangeCheckedMails,\r\n    onChangeStarred,\r\n    onViewMailDetail,\r\n  } = props;\r\n\r\n  const onGetMailDate = date => {\r\n    if (\r\n      moment(date, 'ddd, MMM DD, YYYY').format() ===\r\n      moment('ddd, MMM DD, YYYY').format()\r\n    ) {\r\n      return moment(date).format('LT');\r\n    } else {\r\n      return date.split(',')[1];\r\n    }\r\n  };\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      color: theme.palette.text.secondary,\r\n      fontFamily: !mail.isRead ? Fonts.MEDIUM : Fonts.REGULAR,\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'flex-start',\r\n      borderBottom: '1px solid',\r\n      borderColor: 'white !important',\r\n      paddingTop: 4,\r\n      paddingBottom: 4,\r\n      paddingLeft: 20,\r\n      paddingRight: 20,\r\n      cursor: 'pointer',\r\n      [theme.breakpoints.up('sm')]: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        paddingTop: 8,\r\n        paddingBottom: 8,\r\n      },\r\n    },\r\n    crMailTitle: {\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: '120px',\r\n      },\r\n    },\r\n    crMailInfo: {\r\n      width: '100%',\r\n      padding: '5px 0 8px 15px',\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: 'calc(100% - 256px)',\r\n        padding: 0,\r\n        paddingLeft: 16,\r\n      },\r\n    },\r\n    crMailTime: {\r\n      width: '100px',\r\n      marginLeft: 'auto',\r\n      display: 'flex',\r\n      justifyContent: 'flex-end',\r\n      alignItems: 'center',\r\n    },\r\n    appsStarredRoot: {\r\n      display: 'none',\r\n      [theme.breakpoints.up('sm')]: {\r\n        display: 'inline-block',\r\n      },\r\n    },\r\n    truncate: {\r\n      overflow: 'hidden',\r\n      textOverflow: 'ellipsis',\r\n      whiteSpace: 'nowrap',\r\n    },\r\n    fontBold: {\r\n      fontFamily: Fonts.MEDIUM,\r\n    },\r\n    whitespacePre: {\r\n      whiteSpace: 'pre',\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <ListItem\r\n      dense\r\n      button\r\n      key={mail.id}\r\n      className={classes.root}\r\n      onClick={() => onViewMailDetail(mail)}>\r\n      <Box display='flex' alignItems='center' width={{xs: '100%', sm: 'auto'}}>\r\n        <Box\r\n          component='span'\r\n          pr={2}\r\n          display='inline-block'\r\n          onClick={event => event.stopPropagation()}>\r\n          <Checkbox\r\n            checked={checkedMails.includes(mail.id)}\r\n            onChange={event => onChangeCheckedMails(event, mail.id)}\r\n            color='primary'\r\n          />\r\n        </Box>\r\n        <Box\r\n          pr={{xs: 2, sm: 4}}\r\n          component='span'\r\n          className={classes.appsStarredRoot}\r\n          onClick={event => event.stopPropagation()}>\r\n          <AppsStarredIcon item={mail} onChange={onChangeStarred} />\r\n        </Box>\r\n        <Typography\r\n          className={clsx(\r\n            classes.crMailTitle,\r\n            classes.truncate,\r\n            !mail.isRead ? classes.fontBold : '',\r\n          )}>\r\n          {mail.isReplied ? `${mail.sentBy}, me(2)` : mail.sentBy}\r\n        </Typography>\r\n        {mail.label ? (\r\n          <Box ml='auto' pl={4} component='span'>\r\n            <Tooltip title={mail.label.name} placement='top'>\r\n              <Box\r\n                height={12}\r\n                width={12}\r\n                component='span'\r\n                borderRadius='50%'\r\n                display='block'\r\n                bgcolor={`${mail.label.color}`}\r\n              />\r\n            </Tooltip>\r\n          </Box>\r\n        ) : null}\r\n      </Box>\r\n\r\n      <Box className={classes.crMailInfo}>\r\n        <Box\r\n          mb={0}\r\n          component='p'\r\n          width={1}\r\n          className={clsx(\r\n            classes.truncate,\r\n            !mail.isRead ? classes.fontBold : '',\r\n          )}>\r\n          {mail.subject}\r\n        </Box>\r\n\r\n        <Box component='span' pl={2} className={classes.crMailTime}>\r\n          <Box component='span'>\r\n            {mail.isAttachment ? <AttachFileIcon /> : null}\r\n          </Box>\r\n          <Box component='span' className={classes.whitespacePre} pl={2}>\r\n            {onGetMailDate(mail.sentOn)}\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default MailListItem;\r\n\r\nMailListItem.defaultProps = {\r\n  labelList: [],\r\n  checkedMails: [],\r\n};\r\n\r\nMailListItem.prototype = {\r\n  mail: PropTypes.object.isRequired,\r\n  labelList: PropTypes.array,\r\n  checkedMails: PropTypes.array,\r\n  onChangeCheckedMails: PropTypes.func,\r\n  onChangeStarred: PropTypes.func,\r\n  onViewMailDetail: PropTypes.func,\r\n};\r\n","import React, {useEffect, useState} from 'react';\r\nimport {useHistory, useLocation, useParams} from 'react-router-dom';\r\nimport List from '@material-ui/core/List';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport MailContentHeader from './MailContentHeader';\r\nimport Scrollbar from '@crema/core/Scrollbar';\r\nimport MailListItem from './MailListItem';\r\nimport {\r\n  onGetMailList,\r\n  onUpdateReadStatus,\r\n  onUpdateStarredStatus,\r\n} from '../../../../redux/actions';\r\nimport EmptyResult from '../../../../@crema/core/EmptyResult';\r\nimport Box from '@material-ui/core/Box';\r\nimport {Hidden} from '@material-ui/core';\r\nimport AppsPagination from '../../../../@crema/core/AppsPagination';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {grey} from '@material-ui/core/colors';\r\n\r\nconst MailsList = props => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const params = useParams();\r\n\r\n  const mailList = useSelector(({mailApp}) => mailApp.mailList);\r\n\r\n  const labelList = useSelector(({mailApp}) => mailApp.labelList);\r\n\r\n  const [page, setPage] = useState(0);\r\n\r\n  const {pathname} = useLocation();\r\n\r\n  const path = pathname.split('/');\r\n\r\n  const loading = useSelector(({common}) => common.loading);\r\n\r\n  const isShowEmptyListMessage = () => {\r\n    return mailList.length === 0 && !loading;\r\n  };\r\n\r\n  useEffect(() => {\r\n    setPage(0);\r\n  }, [pathname]);\r\n\r\n  useEffect(() => {\r\n    const path = pathname.split('/');\r\n    setPage(0);\r\n    dispatch(onGetMailList(path[path.length - 2], path[path.length - 1], page));\r\n  }, [dispatch, page, pathname]);\r\n\r\n  const [checkedMails, setCheckedMails] = useState([]);\r\n\r\n  const onPageChange = (event, value) => {\r\n    setPage(value);\r\n  };\r\n\r\n  const onChangeCheckedMails = (event, id) => {\r\n    if (event.target.checked) {\r\n      setCheckedMails(checkedMails.concat(id));\r\n    } else {\r\n      setCheckedMails(checkedMails.filter(mailId => mailId !== id));\r\n    }\r\n  };\r\n\r\n  const onViewMailDetail = mail => {\r\n    const changedMailList = [mail.id];\r\n    dispatch(onUpdateReadStatus(changedMailList, true));\r\n    history.push(`/apps/mail/${params.name}/${mail.id}`);\r\n  };\r\n\r\n  const onChangeStarred = (checked, mail) => {\r\n    const selectedIdList = [mail.id];\r\n    dispatch(\r\n      onUpdateStarredStatus(selectedIdList, checked, path[path.length - 1]),\r\n    );\r\n  };\r\n\r\n  const totalMails = useSelector(({mailApp}) => mailApp.totalMails);\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    paginationRoot: {\r\n      paddingLeft: 8,\r\n      paddingRight: 8,\r\n      borderTop: '1px solid',\r\n      borderColor: grey[300],\r\n    },\r\n    paddingY: {\r\n      paddingTop: 0,\r\n      paddingBottom: 0,\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <>\r\n      <MailContentHeader\r\n        checkedMails={checkedMails}\r\n        setCheckedMails={setCheckedMails}\r\n        onPageChange={onPageChange}\r\n        page={page}\r\n        path={path}\r\n      />\r\n\r\n      <Scrollbar className='scroll-app'>\r\n        {!isShowEmptyListMessage() ? (\r\n          <List className={classes.paddingY}>\r\n            {mailList.map(mail => {\r\n              return (\r\n                <MailListItem\r\n                  key={mail.id}\r\n                  mail={mail}\r\n                  labelList={labelList}\r\n                  onChangeCheckedMails={onChangeCheckedMails}\r\n                  checkedMails={checkedMails}\r\n                  onViewMailDetail={onViewMailDetail}\r\n                  onChangeStarred={onChangeStarred}\r\n                />\r\n              );\r\n            })}\r\n          </List>\r\n        ) : (\r\n          <EmptyResult />\r\n        )}\r\n      </Scrollbar>\r\n      <Hidden smUp>\r\n        {mailList.length > 0 ? (\r\n          <Box component='span' ml={{sm: 'auto'}}>\r\n            <AppsPagination\r\n              className={classes.paginationRoot}\r\n              count={totalMails}\r\n              page={page}\r\n              onPageChange={onPageChange}\r\n            />\r\n          </Box>\r\n        ) : null}\r\n      </Hidden>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MailsList;\r\n","import React from 'react';\r\nimport KeyboardBackspaceIcon from '@material-ui/icons/KeyboardBackspace';\r\nimport InfoSharpIcon from '@material-ui/icons/InfoSharp';\r\nimport DeleteSharpIcon from '@material-ui/icons/DeleteSharp';\r\nimport LabelSharpIcon from '@material-ui/icons/LabelSharp';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport ArchiveIcon from '@material-ui/icons/Archive';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MarkunreadIcon from '@material-ui/icons/Markunread';\r\nimport {onUpdateSelectedMail} from '../../../../../redux/actions';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport IntlMessages from '../../../../../@crema/utility/IntlMessages';\r\nimport {Box} from '@material-ui/core';\r\nimport {useHistory} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {grey} from '@material-ui/core/colors';\r\n\r\nconst MailDetailHeader = props => {\r\n  const {selectedMail} = props;\r\n  const dispatch = useDispatch();\r\n\r\n  const history = useHistory();\r\n\r\n  const labelList = useSelector(({mailApp}) => mailApp.labelList);\r\n\r\n  const [isLabelOpen, onOpenLabel] = React.useState(null);\r\n\r\n  const [isMoreIcon, onOpenMoreIcon] = React.useState(null);\r\n\r\n  const onClickBackButton = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  const onLabelOpen = event => {\r\n    onOpenLabel(event.currentTarget);\r\n  };\r\n\r\n  const onLabelClose = () => {\r\n    onOpenLabel(null);\r\n  };\r\n\r\n  const onViewMoreOpen = event => {\r\n    onOpenMoreIcon(event.currentTarget);\r\n  };\r\n\r\n  const onViewMoreClose = () => {\r\n    onOpenMoreIcon(null);\r\n  };\r\n\r\n  const onSelectLabel = event => {\r\n    const mail = selectedMail;\r\n    mail.label = event.target.value;\r\n    dispatch(onUpdateSelectedMail(mail));\r\n    onOpenLabel(null);\r\n  };\r\n\r\n  const onChangeMailFolder = type => {\r\n    const mail = selectedMail;\r\n    mail.folderValue = type;\r\n    dispatch(onUpdateSelectedMail(mail, type));\r\n    history.goBack();\r\n  };\r\n\r\n  const onChangeReadStatus = () => {\r\n    const mail = selectedMail;\r\n    mail.isRead = false;\r\n    dispatch(onUpdateSelectedMail(mail));\r\n    history.goBack();\r\n  };\r\n\r\n  const onChangeStarredStatus = () => {\r\n    const mail = selectedMail;\r\n    mail.isStarred = !mail.isStarred;\r\n    dispatch(onUpdateSelectedMail(mail));\r\n    onOpenMoreIcon(null);\r\n  };\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    pointer: {\r\n      cursor: 'pointer',\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <Box\r\n      py={{xs: 4, xl: 6}}\r\n      px={5}\r\n      display='flex'\r\n      flexDirection='row'\r\n      alignItems='center'\r\n      borderBottom={`1px solid ${grey[300]}`}>\r\n      {selectedMail ? (\r\n        <>\r\n          <Tooltip title={<IntlMessages id='common.back' />}>\r\n            <Box mx={2} my={0.5} component='span' color='text.disabled'>\r\n              <KeyboardBackspaceIcon\r\n                onClick={onClickBackButton}\r\n                className={classes.pointer}\r\n              />\r\n            </Box>\r\n          </Tooltip>\r\n\r\n          <Box ml='auto'>\r\n            <Tooltip title={<IntlMessages id='common.archive' />}>\r\n              <Box ml={{xs: 2, sm: 4}} component='span' color='text.disabled'>\r\n                <ArchiveIcon\r\n                  className={classes.pointer}\r\n                  onClick={() => onChangeMailFolder(127)}\r\n                />\r\n              </Box>\r\n            </Tooltip>\r\n\r\n            <Tooltip title={<IntlMessages id='common.reportSpam' />}>\r\n              <Box ml={{xs: 2, sm: 4}} component='span' color='text.disabled'>\r\n                <InfoSharpIcon\r\n                  className={classes.pointer}\r\n                  onClick={() => onChangeMailFolder(125)}\r\n                />\r\n              </Box>\r\n            </Tooltip>\r\n\r\n            <Tooltip title={<IntlMessages id='common.trash' />}>\r\n              <Box ml={{xs: 2, sm: 4}} component='span' color='text.disabled'>\r\n                <DeleteSharpIcon\r\n                  className={classes.pointer}\r\n                  onClick={() => onChangeMailFolder(126)}\r\n                />\r\n              </Box>\r\n            </Tooltip>\r\n\r\n            <Tooltip title={<IntlMessages id='mailApp.markAsUnread' />}>\r\n              <Box ml={{xs: 2, sm: 4}} component='span' color='text.disabled'>\r\n                <MarkunreadIcon\r\n                  className={classes.pointer}\r\n                  onClick={() => onChangeReadStatus()}\r\n                />\r\n              </Box>\r\n            </Tooltip>\r\n\r\n            <Tooltip title={<IntlMessages id='common.label' />}>\r\n              <Box ml={{xs: 2, sm: 4}} component='span' color='text.disabled'>\r\n                <LabelSharpIcon\r\n                  className={classes.pointer}\r\n                  value={1}\r\n                  onClick={onLabelOpen}\r\n                />\r\n              </Box>\r\n            </Tooltip>\r\n\r\n            <Menu\r\n              anchorEl={isLabelOpen}\r\n              open={Boolean(isLabelOpen)}\r\n              onClose={onLabelClose}>\r\n              {labelList.map(label => {\r\n                return (\r\n                  <MenuItem\r\n                    onClick={onSelectLabel}\r\n                    value={label.id}\r\n                    key={label.id}>\r\n                    {label.name}\r\n                  </MenuItem>\r\n                );\r\n              })}\r\n            </Menu>\r\n\r\n            <Tooltip title={<IntlMessages id='common.more' />}>\r\n              <Box ml={2} component='span' color='text.disabled'>\r\n                <MoreVertIcon\r\n                  className={classes.pointer}\r\n                  onClick={onViewMoreOpen}\r\n                />\r\n              </Box>\r\n            </Tooltip>\r\n\r\n            <Menu\r\n              anchorEl={isMoreIcon}\r\n              open={Boolean(isMoreIcon)}\r\n              onClose={onViewMoreClose}>\r\n              <MenuItem onClick={onChangeReadStatus}>\r\n                <IntlMessages id='mailApp.markAsUnread' />\r\n              </MenuItem>\r\n              <MenuItem onClick={onChangeStarredStatus}>\r\n                {selectedMail.isStarred ? (\r\n                  <IntlMessages id='mailApp.markAsNotImportant' />\r\n                ) : (\r\n                  <IntlMessages id='mailApp.markAsImportant' />\r\n                )}\r\n              </MenuItem>\r\n            </Menu>\r\n          </Box>\r\n        </>\r\n      ) : null}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MailDetailHeader;\r\n\r\nMailDetailHeader.prototype = {\r\n  selectedMail: PropTypes.object.isRequired,\r\n};\r\n","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField/index';\r\nimport Button from '@material-ui/core/Button/index';\r\nimport IntlMessages from '../../../../../@crema/utility/IntlMessages';\r\nimport Box from '@material-ui/core/Box';\r\nimport PropTypes from 'prop-types';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {grey} from '@material-ui/core/colors';\r\n\r\nconst ReplyMail = props => {\r\n  const {selectedMail, onSubmitMail} = props;\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    textField: {\r\n      borderBottom: '1px solid',\r\n      borderColor: 'grey.300',\r\n    },\r\n    textareaAutosize: {\r\n      width: '100%',\r\n      '& .MuiInput-underline:before': {\r\n        display: 'none',\r\n      },\r\n    },\r\n    btnRoot: {\r\n      paddingLeft: 32,\r\n      paddingRight: 32,\r\n      backgroundColor: grey[700],\r\n      color: theme.palette.primary.contrastText,\r\n      '&:hover, &:focus': {\r\n        backgroundColor: grey[800],\r\n        color: theme.palette.primary.contrastText,\r\n      },\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <Box p={5} mt={4} border={1} borderColor='grey.300' borderRadius='0.125rem'>\r\n      <TextField\r\n        fullWidth\r\n        margin='normal'\r\n        value={selectedMail.senderMailId}\r\n        className={classes.textField}\r\n      />\r\n\r\n      <Box mb={4}>\r\n        <TextField\r\n          className={classes.textareaAutosize}\r\n          rows='7'\r\n          name='content'\r\n          multiline\r\n        />\r\n      </Box>\r\n\r\n      <Button className={classes.btnRoot} onClick={onSubmitMail}>\r\n        <IntlMessages id='common.send' />\r\n      </Button>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ReplyMail;\r\n\r\nReplyMail.prototype = {\r\n  selectedMail: PropTypes.object.isRequired,\r\n  onSubmitMail: PropTypes.func,\r\n};\r\n","import React, {useState} from 'react';\r\nimport TextField from '@material-ui/core/TextField/index';\r\nimport Button from '@material-ui/core/Button/index';\r\nimport InputAdornment from '@material-ui/core/InputAdornment/index';\r\nimport {Form, Formik, useField} from 'formik/dist/index';\r\nimport * as yup from 'yup';\r\nimport IntlMessages from '../../../../../../@crema/utility/IntlMessages';\r\nimport {useIntl} from 'react-intl';\r\nimport {Box} from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport {useAuthUser} from '../../../../../../@crema/utility/AppHooks';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {grey} from '@material-ui/core/colors';\r\nimport {Fonts} from '../../../../../../shared/constants/AppEnums';\r\n\r\nconst MyTextField = props => {\r\n  const [field, meta] = useField(props);\r\n  const errorText = meta.error && meta.touched ? meta.error : '';\r\n  return (\r\n    <TextField\r\n      {...props}\r\n      {...field}\r\n      helperText={errorText}\r\n      error={!!errorText}\r\n    />\r\n  );\r\n};\r\n\r\nconst validationSchema = yup.object({\r\n  to: yup\r\n    .string()\r\n    .email(<IntlMessages id='validation.emailFormat' />)\r\n    .required(<IntlMessages id='validation.emailRequired' />),\r\n  cc: yup.string().email(<IntlMessages id='validation.emailFormat' />),\r\n});\r\n\r\nconst MailForward = props => {\r\n  const {onSubmitForwardedMail, selectedMail} = props;\r\n  const [isShowCC, onShowCC] = useState(false);\r\n\r\n  const onShowCcInput = () => {\r\n    onShowCC(true);\r\n  };\r\n\r\n  const user = useAuthUser();\r\n\r\n  const {messages} = useIntl();\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    fontBold: {\r\n      fontFamily: Fonts.MEDIUM,\r\n    },\r\n    pointer: {\r\n      cursor: 'pointer',\r\n    },\r\n    textareaAutosize: {\r\n      width: '100%',\r\n      '& .MuiInput-underline:before': {\r\n        display: 'none',\r\n      },\r\n    },\r\n    btnRoot: {\r\n      paddingLeft: 32,\r\n      paddingRight: 32,\r\n      backgroundColor: grey[700],\r\n      color: theme.palette.primary.contrastText,\r\n      '&:hover, &:focus': {\r\n        backgroundColor: grey[800],\r\n        color: theme.palette.primary.contrastText,\r\n      },\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <Box border={1} borderColor='grey.300' borderRadius='0.125rem' mt={4} p={5}>\r\n      <Formik\r\n        validateOnChange={true}\r\n        initialValues={{\r\n          to: '',\r\n          cc: '',\r\n          content: '',\r\n        }}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(data, {setSubmitting, resetForm}) => {\r\n          setSubmitting(true);\r\n          const mail = {\r\n            id: Math.floor(Math.random()) * 1000000,\r\n            isChecked: false,\r\n            isStarred: selectedMail.isStarred,\r\n            isReplied: selectedMail.isReplied,\r\n            label: selectedMail.label,\r\n            sentBy: user.displayName,\r\n            subject: selectedMail.subject,\r\n            isAttachment: true,\r\n            sentAt: '10.30am',\r\n            sentOn: moment().format('llll'),\r\n            isRead: true,\r\n            folderValue: 122,\r\n            senderMailId: user.email,\r\n            ...data,\r\n          };\r\n          onSubmitForwardedMail(mail);\r\n          resetForm();\r\n          setSubmitting(false);\r\n        }}>\r\n        {({isSubmitting, values, handleChange}) => (\r\n          <Form>\r\n            <Box display='flex' alignItems='center'>\r\n              <MyTextField\r\n                fullWidth\r\n                margin='normal'\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment\r\n                      position='start'\r\n                      className={classes.fontBold}>\r\n                      <IntlMessages id='common.to' />\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                name='to'\r\n              />\r\n\r\n              <Box\r\n                component='span'\r\n                ml={4}\r\n                className={classes.pointer}\r\n                onClick={onShowCcInput}>\r\n                <IntlMessages id='common.cc' />\r\n              </Box>\r\n            </Box>\r\n\r\n            {isShowCC ? (\r\n              <MyTextField\r\n                placeholder={messages['common.cc']}\r\n                fullWidth\r\n                margin='normal'\r\n                name='cc'\r\n              />\r\n            ) : null}\r\n\r\n            <Box mb={4}>\r\n              <TextField\r\n                className={classes.textareaAutosize}\r\n                rows='7'\r\n                name='content'\r\n                multiline\r\n                value={values.content}\r\n                onChange={handleChange}\r\n              />\r\n            </Box>\r\n\r\n            <Button\r\n              className={classes.btnRoot}\r\n              type='submit'\r\n              disabled={isSubmitting}>\r\n              <IntlMessages id='common.send' />\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MailForward;\r\n\r\nMailForward.prototype = {\r\n  onSubmitForwardedMail: PropTypes.func,\r\n  selectedMail: PropTypes.object.isRequired,\r\n};\r\n","import React, {useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar/index';\r\nimport ReplyIcon from '@material-ui/icons/Reply';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport ForwardIcon from '@material-ui/icons/Forward';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport {Checkbox} from '@material-ui/core';\r\nimport Tooltip from '@material-ui/core/Tooltip/index';\r\nimport {useDispatch} from 'react-redux';\r\nimport {useHistory, useLocation, withRouter} from 'react-router-dom';\r\nimport {\r\n  onComposeMail,\r\n  onUpdateSelectedMail,\r\n} from '../../../../../redux/actions';\r\nimport ReplyMail from './ReplyMail';\r\nimport ForwardMail from './ForwardMail';\r\nimport moment from 'moment';\r\nimport IntlMessages from '../../../../../@crema/utility/IntlMessages';\r\nimport Box from '@material-ui/core/Box';\r\nimport PropTypes from 'prop-types';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {Fonts} from '../../../../../shared/constants/AppEnums';\r\n\r\nconst MailDetailBody = props => {\r\n  const {selectedMail} = props;\r\n  const dispatch = useDispatch();\r\n\r\n  const history = useHistory();\r\n\r\n  const {pathname} = useLocation();\r\n\r\n  const [isReply, onReplyMail] = useState(false);\r\n\r\n  const [isForward, onForward] = useState(false);\r\n\r\n  const onReplyToMail = () => {\r\n    onForward(false);\r\n    onReplyMail(true);\r\n  };\r\n\r\n  const onForwardMail = () => {\r\n    onReplyMail(false);\r\n    onForward(true);\r\n  };\r\n\r\n  const onChangeStarred = () => {\r\n    const mail = selectedMail;\r\n    mail.isStarred = !mail.isStarred;\r\n    dispatch(onUpdateSelectedMail(mail));\r\n  };\r\n\r\n  const onSubmitMail = () => {\r\n    const mail = selectedMail;\r\n    mail.folderValue = 122;\r\n    mail.isReplied = true;\r\n    dispatch(onUpdateSelectedMail(mail));\r\n    onReplyMail(false);\r\n    history.goBack();\r\n  };\r\n\r\n  const onSubmitForwardedMail = mail => {\r\n    dispatch(onComposeMail(mail, pathname));\r\n    history.goBack();\r\n  };\r\n\r\n  const onGetMailDate = date => {\r\n    return moment(date).format('ddd, MMM DD, YYYY');\r\n  };\r\n\r\n  const onGetMailTime = date => {\r\n    return moment(date).format('LT');\r\n  };\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    avatar: {\r\n      width: 50,\r\n      height: 50,\r\n    },\r\n    breakAll: {\r\n      wordBreak: 'break-all',\r\n    },\r\n    pointer: {\r\n      cursor: 'pointer',\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <Box px={6} py={8}>\r\n      {selectedMail ? (\r\n        <Box color='grey.500'>\r\n          <Box\r\n            mb={{xs: 4, sm: 6}}\r\n            display='flex'\r\n            flexDirection={{xs: 'column', sm: 'row'}}\r\n            alignItems={{sm: 'center'}}>\r\n            <Box display='flex' alignItems='center'>\r\n              <Avatar className={classes.avatar} />\r\n              <Box ml={4}>\r\n                <Box\r\n                  color='primary.main'\r\n                  fontFamily={Fonts.BOLD}\r\n                  fontSize={{xs: 16, xl: 18}}>\r\n                  {selectedMail.sentBy}\r\n                </Box>\r\n                <Box component='span' className={classes.breakAll}>\r\n                  {selectedMail.senderMailId}\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n\r\n            <Box\r\n              ml={{sm: 'auto'}}\r\n              mt={{xs: 3, sm: 0}}\r\n              display='flex'\r\n              flexDirection={{xs: 'row', sm: 'column'}}\r\n              alignItems={{xs: 'center', sm: 'flex-end'}}>\r\n              <Box>{onGetMailDate(selectedMail.sentOn)}</Box>\r\n              <Box ml={{xs: 3, sm: 0}}>\r\n                {onGetMailTime(selectedMail.sentOn)}\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n\r\n          <Box\r\n            mb={{xs: 3, sm: 5}}\r\n            display='flex'\r\n            flexDirection={{xs: 'column', sm: 'row'}}\r\n            alignItems={{sm: 'center'}}>\r\n            <Box color='text.primary' component='h5' fontFamily={Fonts.BOLD}>\r\n              {selectedMail.subject ? selectedMail.subject : null}\r\n            </Box>\r\n\r\n            <Box\r\n              ml={{sm: 'auto'}}\r\n              mt={{xs: 3, sm: 0}}\r\n              display='flex'\r\n              alignItems='center'>\r\n              <Tooltip title={<IntlMessages id='common.reply' />}>\r\n                <Box component='span' color='text.secondary'>\r\n                  <ReplyIcon\r\n                    className={classes.pointer}\r\n                    onClick={onReplyToMail}\r\n                  />\r\n                </Box>\r\n              </Tooltip>\r\n\r\n              <Tooltip title={<IntlMessages id='common.starred' />}>\r\n                <Box component='span' color='text.secondary' ml={3}>\r\n                  <Checkbox\r\n                    icon={<StarBorderIcon />}\r\n                    checkedIcon={<StarIcon />}\r\n                    checked={selectedMail.isStarred}\r\n                    onChange={event => onChangeStarred(event)}\r\n                  />\r\n                </Box>\r\n              </Tooltip>\r\n\r\n              <Tooltip title={<IntlMessages id='common.forward' />}>\r\n                <Box component='span' color='text.secondary' ml={3}>\r\n                  <ForwardIcon\r\n                    className={classes.pointer}\r\n                    onClick={onForwardMail}\r\n                  />\r\n                </Box>\r\n              </Tooltip>\r\n            </Box>\r\n          </Box>\r\n\r\n          <Box mb={5}>\r\n            <Box\r\n              component='p'\r\n              color='text.secondary'\r\n              fontSize={{xs: 14, xl: 16}}\r\n              mb={{xs: 3, xl: 5}}>\r\n              Respected Customer\r\n            </Box>\r\n            <Box\r\n              component='p'\r\n              color='text.secondary'\r\n              fontSize={{xs: 14, xl: 16}}\r\n              mb={{xs: 3, xl: 5}}>\r\n              Greetings of the day\r\n            </Box>\r\n            <Box\r\n              component='p'\r\n              color='text.secondary'\r\n              fontSize={{xs: 14, xl: 16}}\r\n              mb={{xs: 3, xl: 5}}>\r\n              This mail is to inform you that an amount of Rs 28743 has been\r\n              credited to your account in lieu of the Fixed Deposit that got\r\n              matured last week. We would be thankful to you if you acknowledge\r\n              this mail.\r\n            </Box>\r\n\r\n            <Box\r\n              component='p'\r\n              color='text.secondary'\r\n              fontSize={{xs: 14, xl: 16}}\r\n              mb={{xs: 3, xl: 5}}>\r\n              Looking forward to help you in any way.\r\n            </Box>\r\n            <Box\r\n              component='p'\r\n              color='text.secondary'\r\n              fontSize={{xs: 14, xl: 16}}\r\n              mb={{xs: 3, xl: 5}}>\r\n              Sincerely\r\n            </Box>\r\n            <Box\r\n              component='p'\r\n              color='text.secondary'\r\n              fontSize={{xs: 14, xl: 16}}\r\n              mb={{xs: 3, xl: 5}}>\r\n              {selectedMail.sentBy}\r\n            </Box>\r\n          </Box>\r\n\r\n          {isReply ? (\r\n            <ReplyMail\r\n              selectedMail={selectedMail}\r\n              onSubmitMail={onSubmitMail}\r\n            />\r\n          ) : null}\r\n\r\n          {isForward ? (\r\n            <ForwardMail\r\n              selectedMail={selectedMail}\r\n              onSubmitForwardedMail={onSubmitForwardedMail}\r\n            />\r\n          ) : null}\r\n        </Box>\r\n      ) : null}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default withRouter(MailDetailBody);\r\n\r\nMailDetailBody.prototype = {\r\n  selectedMail: PropTypes.object.isRequired,\r\n};\r\n","import React, {useEffect} from 'react';\r\nimport MailDetailHeader from './MailDetailHeader';\r\nimport Scrollbar from '@crema/core/Scrollbar';\r\nimport MailDetailBody from './MailDetailBody';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {onGetSelectedMail, onNullifyMail} from '../../../../redux/actions';\r\nimport {useHistory, useParams} from 'react-router-dom';\r\n\r\nconst MailDetail = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const {id} = useParams();\r\n  const selectedMail = useSelector(({mailApp}) => mailApp.selectedMail);\r\n\r\n  useEffect(() => {\r\n    dispatch(onGetSelectedMail(id));\r\n    return () => {\r\n      onNullifyMail();\r\n    };\r\n  }, [dispatch, id]);\r\n\r\n  return (\r\n    <>\r\n      {selectedMail ? (\r\n        <>\r\n          <MailDetailHeader history={history} selectedMail={selectedMail} />\r\n          <Scrollbar className='scroll-app-detail'>\r\n            <MailDetailBody selectedMail={selectedMail} history={history} />\r\n          </Scrollbar>\r\n        </>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MailDetail;\r\n","import React, {useEffect} from 'react';\r\nimport MailSideBar from './MailSideBar/index';\r\nimport Card from '@material-ui/core/Card';\r\nimport MailsList from './MailsList';\r\nimport MailDetail from './MailDetail';\r\nimport {\r\n  onGetConnectionList,\r\n  onGetFolderList,\r\n  onGetLabelList,\r\n  onToggleMailDrawer,\r\n} from '../../../redux/actions';\r\nimport {useDispatch} from 'react-redux';\r\nimport InfoView from '@crema/core/InfoView';\r\nimport IntlMessages from '../../../@crema/utility/IntlMessages';\r\nimport {Box, makeStyles} from '@material-ui/core';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport PropTypes from 'prop-types';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\n\r\nconst Mail = props => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(onGetLabelList());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(onGetFolderList());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(onGetConnectionList());\r\n  }, [dispatch]);\r\n\r\n  const onGetMainComponent = () => {\r\n    if (props.match.params.id) {\r\n      return (\r\n        <Card>\r\n          <MailDetail />\r\n        </Card>\r\n      );\r\n    } else {\r\n      return (\r\n        <Card>\r\n          <MailsList />\r\n        </Card>\r\n      );\r\n    }\r\n  };\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    appsContainer: {\r\n      display: 'flex',\r\n    },\r\n    appsSidebar: {\r\n      [theme.breakpoints.up('lg')]: {\r\n        width: '17rem',\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        width: '20rem',\r\n      },\r\n    },\r\n    appsMainContent: {\r\n      width: '100%',\r\n      [theme.breakpoints.up('lg')]: {\r\n        width: 'calc(100% - 17rem)',\r\n        paddingLeft: 40,\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        width: 'calc(100% - 20rem)',\r\n      },\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    menuIcon: {\r\n      width: 35,\r\n      height: 35,\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box pt={{xl: 4}} flex={1} display='flex' flexDirection='column'>\r\n      <Box\r\n        mb={{xs: 2, lg: 4, xl: 6}}\r\n        mt={{xs: -3, lg: 0}}\r\n        display='flex'\r\n        alignItems='center'>\r\n        <Hidden lgUp>\r\n          <IconButton\r\n            edge='start'\r\n            className={classes.menuButton}\r\n            color='inherit'\r\n            aria-label='open drawer'\r\n            onClick={() => dispatch(onToggleMailDrawer())}>\r\n            <MenuIcon className={classes.menuIcon} />\r\n          </IconButton>\r\n        </Hidden>\r\n        <Box\r\n          component='h2'\r\n          color='text.primary'\r\n          fontFamily={Fonts.BOLD}\r\n          fontSize={{xs: 18, sm: 20, xl: 24}}>\r\n          <IntlMessages id='mailApp.mail' />\r\n        </Box>\r\n      </Box>\r\n\r\n      <Box className={classes.appsContainer}>\r\n        <Box className={classes.appsSidebar}>\r\n          <MailSideBar />\r\n        </Box>\r\n\r\n        <Box className={classes.appsMainContent}>\r\n          {onGetMainComponent()}\r\n          <InfoView />\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Mail;\r\n\r\nMail.defaultProps = {\r\n  match: null,\r\n};\r\n\r\nMail.prototype = {\r\n  match: PropTypes.node,\r\n};\r\n"],"sourceRoot":""}