{"version":3,"sources":["../node_modules/@material-ui/icons/Delete.js","../node_modules/@material-ui/icons/Add.js","../node_modules/react-intl/lib/components/useIntl.js","../node_modules/@material-ui/icons/Edit.js","../node_modules/@material-ui/icons/AttachFile.js","@crema/core/ConfirmationDialog/index.js","../node_modules/@material-ui/lab/esm/useAutocomplete/useAutocomplete.js","../node_modules/@material-ui/lab/esm/useAutocomplete/index.js","../node_modules/@material-ui/lab/Autocomplete/Autocomplete.js","../node_modules/@material-ui/lab/internal/svg-icons/Close.js","../node_modules/@material-ui/lab/internal/svg-icons/ArrowDropDown.js","../node_modules/@material-ui/icons/ChatBubble.js","../node_modules/@material-ui/icons/ListAlt.js","modules/apps/ScrumBoard/BoardDetail/AddNewList.js","modules/apps/ScrumBoard/BoardDetail/List/AddCard/CardCheckedList.js","modules/apps/ScrumBoard/BoardDetail/List/AddCard/CardHeader.js","modules/apps/ScrumBoard/BoardDetail/List/AddCard/CardAttachments.js","modules/apps/ScrumBoard/BoardDetail/List/AddCard/CardComments.js","modules/apps/ScrumBoard/BoardDetail/List/AddCard/AddCardForm.js","modules/apps/ScrumBoard/BoardDetail/List/AddCard/index.js","redux/actions/ScrumboardApp.js","modules/apps/ScrumBoard/BoardDetail/List/ListHeader.js","modules/apps/ScrumBoard/BoardDetail/List/CardDetail/Members.js","modules/apps/ScrumBoard/BoardDetail/List/CardDetail/Labels.js","modules/apps/ScrumBoard/BoardDetail/List/CardDetail/index.js","modules/apps/ScrumBoard/BoardDetail/List/AddCardButton.js","modules/apps/ScrumBoard/BoardDetail/List/index.js","modules/apps/ScrumBoard/BoardDetail/index.js","modules/apps/ScrumBoard/BoardList/AddNewBoard.js","modules/apps/ScrumBoard/BoardList/BoardItem.js","modules/apps/ScrumBoard/BoardList/AddBoardButton.js","modules/apps/ScrumBoard/BoardList/index.js","modules/apps/ScrumBoard/index.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","useIntl","intl","useContext","Context","invariantIntlContext","ConfirmationDialog","open","onDeny","onConfirm","title","dialogTitle","classes","makeStyles","btn","marginLeft","fontFamily","Fonts","MEDIUM","contentText","color","grey","useStyle","onClose","px","xs","md","pt","pb","mb","component","className","id","align","onClick","autoFocus","stripDiacritics","string","normalize","replace","createFilterOptions","config","arguments","length","undefined","_config$ignoreAccents","ignoreAccents","_config$ignoreCase","ignoreCase","limit","_config$matchFrom","matchFrom","stringify","_config$trim","trim","options","_ref","inputValue","getOptionLabel","input","toLowerCase","filteredOptions","filter","option","candidate","indexOf","slice","findIndex","array","comp","i","defaultFilterOptions","useAutocomplete","props","_props$autoComplete","autoComplete","_props$autoHighlight","autoHighlight","_props$autoSelect","autoSelect","_props$blurOnSelect","blurOnSelect","_props$clearOnBlur","clearOnBlur","freeSolo","_props$clearOnEscape","clearOnEscape","_props$componentName","componentName","_props$debug","debug","_props$defaultValue","defaultValue","multiple","_props$disableClearab","disableClearable","_props$disableCloseOn","disableCloseOnSelect","_props$disabledItemsF","disabledItemsFocusable","_props$disableListWra","disableListWrap","_props$filterOptions","filterOptions","_props$filterSelected","filterSelectedOptions","_props$freeSolo","getOptionDisabled","_props$getOptionLabel","x","_props$getOptionSelec","getOptionSelected","groupBy","idProp","_props$includeInputIn","includeInputInList","inputValueProp","_props$multiple","onChange","onHighlightChange","onInputChange","onOpen","openProp","_props$openOnFocus","openOnFocus","_props$selectOnFocus","selectOnFocus","valueProp","useId","ignoreFocus","React","firstFocus","inputRef","listboxRef","_React$useState","anchorEl","setAnchorEl","_React$useState2","focusedTag","setFocusedTag","defaultHighlighted","highlightedIndexRef","setHighlightedIndex","useEventCallback","index","reason","event","current","removeAttribute","setAttribute","concat","prev","querySelector","listboxNode","parentElement","scrollHeight","clientHeight","element","scrollBottom","scrollTop","elementBottom","offsetTop","offsetHeight","_useControlled","useControlled","controlled","name","_useControlled2","_slicedToArray","setValue","_useControlled3","state","_useControlled4","setInputValue","_React$useState3","focused","setFocused","resetInputValue","newValue","newInputValue","optionLabel","isOpenControlled","_React$useState4","openState","setOpenState","inputValueIsSelectedValue","popupOpen","some","value2","focusTag","tagToFocus","focus","validOptionIndex","direction","nextFocus","nextFocusDisabled","disabled","getAttribute","hasAttribute","changeHighlightedIndex","diff","getNextIndex","maxIndex","newIndex","Math","abs","nextIndex","setSelectionRange","valueItem","currentOption","val","itemIndex","optionItem","handleOpen","handleClose","handleValue","details","isTouch","selectNewValue","reasonProp","origin","Array","isArray","_toConsumableArray","push","splice","blur","handleFocusTag","nextTag","validTagIndex","handleClear","handleKeyDown","other","key","preventDefault","which","stopPropagation","onKeyDown","handleFocus","handleBlur","document","activeElement","handleInputChange","target","handleOptionMouseOver","Number","currentTarget","handleOptionTouchStart","handleOptionClick","handleTagDelete","handleListboxRef","node","setRef","handlePopupIndicator","handleMouseDown","handleClick","selectionEnd","selectionStart","select","handleInputMouseDown","dirty","groupedOptions","Map","reduce","acc","group","getRootProps","_extends","role","onMouseDown","getInputLabelProps","htmlFor","getInputProps","onBlur","onFocus","ref","autoCapitalize","spellCheck","getClearProps","tabIndex","getPopupIndicatorProps","getTagProps","_ref2","onDelete","getListboxProps","getOptionProps","_ref3","selected","onMouseOver","onTouchStart","_interopRequireWildcard","enumerable","get","_useAutocomplete2","styles","_objectWithoutProperties2","_defineProperty2","_extends2","_clsx","_styles","_Popper","_ListSubheader","_Paper","_IconButton","_Chip","_Close","_ArrowDropDown","theme","_option","root","visibility","fullWidth","width","tag","margin","maxWidth","tagSizeSmall","hasPopupIcon","hasClearIcon","inputRoot","flexWrap","paddingRight","minWidth","paddingBottom","padding","paddingLeft","right","paddingTop","flexGrow","textOverflow","opacity","inputFocused","endAdornment","position","top","clearIndicator","marginRight","clearIndicatorDirty","popupIndicator","popupIndicatorOpen","transform","popper","zIndex","modal","popperDisablePortal","paper","typography","body1","overflow","listbox","listStyle","maxHeight","loading","palette","text","secondary","noOptions","minHeight","display","justifyContent","alignItems","cursor","boxSizing","outline","WebkitTapHighlightColor","breakpoints","up","backgroundColor","action","hover","disabledOpacity","pointerEvents","groupLabel","background","groupUl","DisablePortal","fontSize","Autocomplete","forwardRef","startAdornment","ChipProps","_props$clearText","clearText","_props$closeIcon","closeIcon","_props$closeText","closeText","_props$disabled","_props$disablePortal","disablePortal","_props$forcePopupIcon","forcePopupIcon","_props$fullWidth","_props$getLimitTagsTe","getLimitTagsText","more","_props$limitTags","limitTags","_props$ListboxCompone","ListboxComponent","ListboxProps","_props$loading","_props$loadingText","loadingText","_props$noOptionsText","noOptionsText","_props$openText","openText","_props$PaperComponent","PaperComponent","_props$PopperComponen","PopperComponent","PopperComponentProp","_props$popupIcon","popupIcon","renderGroupProp","renderGroup","renderInput","renderOptionProp","renderOption","renderTags","_props$size","size","_useAutocomplete","getCustomizedTagProps","params","map","label","children","renderListOption","optionProps","Fragment","InputLabelProps","InputProps","inputProps","style","clientWidth","option2","index2","withStyles","createSvgIcon","AddNewList","onAddList","useState","isAddList","setAddList","listName","setListName","avatar","border","pointer","addIconRoot","BOLD","btnRoot","red","primary","contrastText","marginTop","useStyles","Box","py","clone","Card","Avatar","ml","IntlMessages","textAlign","TextField","Button","prototype","PropTypes","func","CardCheckedList","onAddNewCheckedItem","checkedList","onSetCheckedItemText","onDeleteCheckedItem","textTransform","checkboxRoot","textFieldRoot","avatarRoot","checkedItem","flex","Hidden","xsDown","Checkbox","variant","e","defaultProps","CardHeader","onClickDeleteIcon","onCloseAddCard","onAddAttachments","useDropzone","accept","onDrop","acceptedFiles","files","file","floor","random","preview","URL","createObjectURL","iconRoot","mx","CardAttachments","attachments","onDeleteAttachment","overflowHidden","febRoot","height","sm","attachment","src","alt","my","mr","moment","lastModified","format","split","Fab","aria-label","mt","CardComments","comments","onAddNewComment","comment","setComment","messages","orange","textareaAutosizeRoot","xl","item","image","charAt","toUpperCase","date","multiline","keyCode","rows","placeholder","MyTextField","useField","field","meta","errorText","error","touched","helperText","AddCardForm","board","list","values","setFieldValue","setCheckedList","setComments","authUser","setAttachments","selectedLabels","setSelectedLabels","selectedMembers","setMembersList","selectedCard","isSubmitting","labelList","useSelector","scrumboardApp","memberList","myTextFieldRoot","marginBottom","fieldRoot","dividerRoot","marginBottom12","noValidate","flexDirection","autoOk","inputVariant","GridContainer","Grid","updatedAttachments","updatedList","Divider","displayName","photoURL","type","object","isRequired","bool","Transition","Slide","validationSchema","yup","required","AddCard","isAddCardOpen","dispatch","useDispatch","useAuthUser","isDeleteDialogOpen","setDeleteDialogOpen","members","dialogBox","scrollRoot","Dialog","aria-labelledby","TransitionComponent","aria-describedby","validateOnChange","initialValues","desc","onSubmit","data","setSubmitting","resetForm","editedCard","card","FETCH_START","Api","put","then","status","FETCH_SUCCESS","EDIT_LIST_CARD","payload","SHOW_MESSAGE","FETCH_ERROR","catch","message","onEditCardDetails","newCard","post","ADD_LIST_CARD","onAddNewCard","boardId","listId","cardId","DELETE_LIST_CARD","onDeleteSelectedCard","ListHeader","isEditListName","setEditListName","editedListName","setEditedListName","marginLeft12","editedList","EDIT_BOARD_LIST","onEditBoardList","clsx","componet","DELETE_LIST","onDeleteSelectedList","number","Members","avatarRroot","member","Tooltip","Labels","labels","m","placement","borderRadius","bgcolor","CardDetail","onEditCardDetail","attachFileIconRoot","AddCardButton","onClickAddCard","minHeight72","List","p","Scrollbar","cards","BoardDetail","history","useHistory","boardDetail","pathname","useLocation","useEffect","path","GET_BOARD_DETAIL","onGetBoardDetail","setList","setAddCardOpen","setSelectedCard","lg","goBack","ADD_BOARD_LIST","onAddNewList","AddNewBoard","isAddBoardOpen","onCloseAddBoardModal","onAddBoard","selectedBoard","boardName","setBoardName","addBoardCard","addButton","BoardItem","onEditButtonClick","onViewBoardDetail","boardItem","listAltIcon","AddBoardButton","onAddButtonClick","boardStyle","addIcon","BoardList","boardList","setAddBoardOpen","setSelectedBoard","GET_BOARDS","overrides","MuiCard","borderColor","gridContainer","main","EDIT_BOARD_DETAIL","onEditBoardDetail","ADD_NEW_BOARD","onAddNewBoard","ScrumBoard","useParams","GET_SCRUM_LABEL_LIST","GET_MEMBER_LIST","InfoView"],"mappings":"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","file":"static/js/34.9ed3f609.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","import { useContext } from 'react';\nimport { Context } from './injectIntl';\nimport { invariantIntlContext } from '../utils';\nexport default function useIntl() {\n    const intl = useContext(Context);\n    invariantIntlContext(intl);\n    return intl;\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M16.5 6v11.5c0 2.21-1.79 4-4 4s-4-1.79-4-4V5c0-1.38 1.12-2.5 2.5-2.5s2.5 1.12 2.5 2.5v10.5c0 .55-.45 1-1 1s-1-.45-1-1V6H10v9.5c0 1.38 1.12 2.5 2.5 2.5s2.5-1.12 2.5-2.5V5c0-2.21-1.79-4-4-4S7 2.79 7 5v12.5c0 3.04 2.46 5.5 5.5 5.5s5.5-2.46 5.5-5.5V6h-1.5z\"\n}), 'AttachFile');\n\nexports.default = _default;","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport Button from '@material-ui/core/Button';\r\nimport IntlMessages from '../../utility/IntlMessages';\r\nimport Box from '@material-ui/core/Box';\r\nimport PropTypes from 'prop-types';\r\nimport {makeStyles} from '@material-ui/styles';\r\nimport {grey} from '@material-ui/core/colors';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\n\r\nconst ConfirmationDialog = ({open, onDeny, onConfirm, title, dialogTitle}) => {\r\n  const useStyle = makeStyles({\r\n    btn: {\r\n      marginLeft: 8,\r\n      fontFamily: Fonts.MEDIUM,\r\n    },\r\n    contentText: {\r\n      color: grey[600],\r\n    },\r\n  });\r\n  const classes = useStyle();\r\n\r\n  return (\r\n    <Dialog open={open} onClose={() => onDeny(false)}>\r\n      <Box px={{xs: 5, md: 7}} pt={{xs: 4, md: 6}} pb={{xs: 2, md: 4}}>\r\n        <Box\r\n          mb={3}\r\n          component='h4'\r\n          fontFamily={Fonts.MEDIUM}\r\n          className='font-bold'\r\n          id='alert-dialog-title'>\r\n          {dialogTitle}\r\n        </Box>\r\n        <Box>\r\n          <DialogContentText\r\n            className={classes.contentText}\r\n            id='alert-dialog-description'>\r\n            {title}\r\n          </DialogContentText>\r\n        </Box>\r\n        <Box pt={2} align='right'>\r\n          <Button\r\n            className={classes.btn}\r\n            onClick={() => onDeny(false)}\r\n            color='primary'>\r\n            <IntlMessages id='common.no' />\r\n          </Button>\r\n          <Button\r\n            className={classes.btn}\r\n            onClick={onConfirm}\r\n            color='primary'\r\n            autoFocus>\r\n            <IntlMessages id='common.yes' />\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ConfirmationDialog;\r\n\r\nConfirmationDialog.propTypes = {\r\n  dialogTitle: PropTypes.bool.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  onDeny: PropTypes.func.isRequired,\r\n  title: PropTypes.node.isRequired,\r\n  onConfirm: PropTypes.func.isRequired,\r\n};\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\n/* eslint-disable no-constant-condition */\nimport * as React from 'react';\nimport { setRef, useEventCallback, useControlled, unstable_useId as useId } from '@material-ui/core/utils'; // https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\n// Give up on IE 11 support for this feature\n\nfunction stripDiacritics(string) {\n  return typeof string.normalize !== 'undefined' ? string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') : string;\n}\n\nexport function createFilterOptions() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _config$ignoreAccents = config.ignoreAccents,\n      ignoreAccents = _config$ignoreAccents === void 0 ? true : _config$ignoreAccents,\n      _config$ignoreCase = config.ignoreCase,\n      ignoreCase = _config$ignoreCase === void 0 ? true : _config$ignoreCase,\n      limit = config.limit,\n      _config$matchFrom = config.matchFrom,\n      matchFrom = _config$matchFrom === void 0 ? 'any' : _config$matchFrom,\n      stringify = config.stringify,\n      _config$trim = config.trim,\n      trim = _config$trim === void 0 ? false : _config$trim;\n  return function (options, _ref) {\n    var inputValue = _ref.inputValue,\n        getOptionLabel = _ref.getOptionLabel;\n    var input = trim ? inputValue.trim() : inputValue;\n\n    if (ignoreCase) {\n      input = input.toLowerCase();\n    }\n\n    if (ignoreAccents) {\n      input = stripDiacritics(input);\n    }\n\n    var filteredOptions = options.filter(function (option) {\n      var candidate = (stringify || getOptionLabel)(option);\n\n      if (ignoreCase) {\n        candidate = candidate.toLowerCase();\n      }\n\n      if (ignoreAccents) {\n        candidate = stripDiacritics(candidate);\n      }\n\n      return matchFrom === 'start' ? candidate.indexOf(input) === 0 : candidate.indexOf(input) > -1;\n    });\n    return typeof limit === 'number' ? filteredOptions.slice(0, limit) : filteredOptions;\n  };\n} // To replace with .findIndex() once we stop IE 11 support.\n\nfunction findIndex(array, comp) {\n  for (var i = 0; i < array.length; i += 1) {\n    if (comp(array[i])) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nvar defaultFilterOptions = createFilterOptions(); // Number of options to jump in list box when pageup and pagedown keys are used.\n\nvar pageSize = 5;\nexport default function useAutocomplete(props) {\n  var _props$autoComplete = props.autoComplete,\n      autoComplete = _props$autoComplete === void 0 ? false : _props$autoComplete,\n      _props$autoHighlight = props.autoHighlight,\n      autoHighlight = _props$autoHighlight === void 0 ? false : _props$autoHighlight,\n      _props$autoSelect = props.autoSelect,\n      autoSelect = _props$autoSelect === void 0 ? false : _props$autoSelect,\n      _props$blurOnSelect = props.blurOnSelect,\n      blurOnSelect = _props$blurOnSelect === void 0 ? false : _props$blurOnSelect,\n      _props$clearOnBlur = props.clearOnBlur,\n      clearOnBlur = _props$clearOnBlur === void 0 ? !props.freeSolo : _props$clearOnBlur,\n      _props$clearOnEscape = props.clearOnEscape,\n      clearOnEscape = _props$clearOnEscape === void 0 ? false : _props$clearOnEscape,\n      _props$componentName = props.componentName,\n      componentName = _props$componentName === void 0 ? 'useAutocomplete' : _props$componentName,\n      _props$debug = props.debug,\n      debug = _props$debug === void 0 ? false : _props$debug,\n      _props$defaultValue = props.defaultValue,\n      defaultValue = _props$defaultValue === void 0 ? props.multiple ? [] : null : _props$defaultValue,\n      _props$disableClearab = props.disableClearable,\n      disableClearable = _props$disableClearab === void 0 ? false : _props$disableClearab,\n      _props$disableCloseOn = props.disableCloseOnSelect,\n      disableCloseOnSelect = _props$disableCloseOn === void 0 ? false : _props$disableCloseOn,\n      _props$disabledItemsF = props.disabledItemsFocusable,\n      disabledItemsFocusable = _props$disabledItemsF === void 0 ? false : _props$disabledItemsF,\n      _props$disableListWra = props.disableListWrap,\n      disableListWrap = _props$disableListWra === void 0 ? false : _props$disableListWra,\n      _props$filterOptions = props.filterOptions,\n      filterOptions = _props$filterOptions === void 0 ? defaultFilterOptions : _props$filterOptions,\n      _props$filterSelected = props.filterSelectedOptions,\n      filterSelectedOptions = _props$filterSelected === void 0 ? false : _props$filterSelected,\n      _props$freeSolo = props.freeSolo,\n      freeSolo = _props$freeSolo === void 0 ? false : _props$freeSolo,\n      getOptionDisabled = props.getOptionDisabled,\n      _props$getOptionLabel = props.getOptionLabel,\n      getOptionLabel = _props$getOptionLabel === void 0 ? function (x) {\n    return x;\n  } : _props$getOptionLabel,\n      _props$getOptionSelec = props.getOptionSelected,\n      getOptionSelected = _props$getOptionSelec === void 0 ? function (option, value) {\n    return option === value;\n  } : _props$getOptionSelec,\n      groupBy = props.groupBy,\n      idProp = props.id,\n      _props$includeInputIn = props.includeInputInList,\n      includeInputInList = _props$includeInputIn === void 0 ? false : _props$includeInputIn,\n      inputValueProp = props.inputValue,\n      _props$multiple = props.multiple,\n      multiple = _props$multiple === void 0 ? false : _props$multiple,\n      onChange = props.onChange,\n      onClose = props.onClose,\n      onHighlightChange = props.onHighlightChange,\n      onInputChange = props.onInputChange,\n      onOpen = props.onOpen,\n      openProp = props.open,\n      _props$openOnFocus = props.openOnFocus,\n      openOnFocus = _props$openOnFocus === void 0 ? false : _props$openOnFocus,\n      options = props.options,\n      _props$selectOnFocus = props.selectOnFocus,\n      selectOnFocus = _props$selectOnFocus === void 0 ? !props.freeSolo : _props$selectOnFocus,\n      valueProp = props.value;\n  var id = useId(idProp);\n  var ignoreFocus = React.useRef(false);\n  var firstFocus = React.useRef(true);\n  var inputRef = React.useRef(null);\n  var listboxRef = React.useRef(null);\n\n  var _React$useState = React.useState(null),\n      anchorEl = _React$useState[0],\n      setAnchorEl = _React$useState[1];\n\n  var _React$useState2 = React.useState(-1),\n      focusedTag = _React$useState2[0],\n      setFocusedTag = _React$useState2[1];\n\n  var defaultHighlighted = autoHighlight ? 0 : -1;\n  var highlightedIndexRef = React.useRef(defaultHighlighted);\n  var setHighlightedIndex = useEventCallback(function (index) {\n    var reason = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'auto';\n    var event = arguments.length > 2 ? arguments[2] : undefined;\n    highlightedIndexRef.current = index; // does the index exist?\n\n    if (index === -1) {\n      inputRef.current.removeAttribute('aria-activedescendant');\n    } else {\n      inputRef.current.setAttribute('aria-activedescendant', \"\".concat(id, \"-option-\").concat(index));\n    }\n\n    if (!listboxRef.current) {\n      return;\n    }\n\n    var prev = listboxRef.current.querySelector('[data-focus]');\n\n    if (prev) {\n      prev.removeAttribute('data-focus');\n    }\n\n    var listboxNode = listboxRef.current.parentElement.querySelector('[role=\"listbox\"]'); // \"No results\"\n\n    if (!listboxNode) {\n      return;\n    }\n\n    if (onHighlightChange) {\n      onHighlightChange(event, options[index], reason);\n    }\n\n    if (index === -1) {\n      listboxNode.scrollTop = 0;\n      return;\n    }\n\n    var option = listboxRef.current.querySelector(\"[data-option-index=\\\"\".concat(index, \"\\\"]\"));\n\n    if (!option) {\n      return;\n    }\n\n    option.setAttribute('data-focus', 'true'); // Scroll active descendant into view.\n    // Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n    //\n    // Consider this API instead once it has a better browser support:\n    // .scrollIntoView({ scrollMode: 'if-needed', block: 'nearest' });\n\n    if (listboxNode.scrollHeight > listboxNode.clientHeight && reason !== 'mouse') {\n      var element = option;\n      var scrollBottom = listboxNode.clientHeight + listboxNode.scrollTop;\n      var elementBottom = element.offsetTop + element.offsetHeight;\n\n      if (elementBottom > scrollBottom) {\n        listboxNode.scrollTop = elementBottom - listboxNode.clientHeight;\n      } else if (element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0) < listboxNode.scrollTop) {\n        listboxNode.scrollTop = element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0);\n      }\n    }\n  });\n\n  var _useControlled = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: componentName\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      value = _useControlled2[0],\n      setValue = _useControlled2[1];\n\n  var _useControlled3 = useControlled({\n    controlled: inputValueProp,\n    default: '',\n    name: componentName,\n    state: 'inputValue'\n  }),\n      _useControlled4 = _slicedToArray(_useControlled3, 2),\n      inputValue = _useControlled4[0],\n      setInputValue = _useControlled4[1];\n\n  var _React$useState3 = React.useState(false),\n      focused = _React$useState3[0],\n      setFocused = _React$useState3[1];\n\n  var resetInputValue = useEventCallback(function (event, newValue) {\n    var newInputValue;\n\n    if (multiple) {\n      newInputValue = '';\n    } else if (newValue == null) {\n      newInputValue = '';\n    } else {\n      var optionLabel = getOptionLabel(newValue);\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (typeof optionLabel !== 'string') {\n          var erroneousReturn = optionLabel === undefined ? 'undefined' : \"\".concat(_typeof(optionLabel), \" (\").concat(optionLabel, \")\");\n          console.error(\"Material-UI: the `getOptionLabel` method of \".concat(componentName, \" returned \").concat(erroneousReturn, \" instead of a string for \").concat(JSON.stringify(newValue), \".\"));\n        }\n      }\n\n      newInputValue = typeof optionLabel === 'string' ? optionLabel : '';\n    }\n\n    if (inputValue === newInputValue) {\n      return;\n    }\n\n    setInputValue(newInputValue);\n\n    if (onInputChange) {\n      onInputChange(event, newInputValue, 'reset');\n    }\n  });\n  React.useEffect(function () {\n    resetInputValue(null, value);\n  }, [value, resetInputValue]);\n\n  var _React$useRef = React.useRef(openProp != null),\n      isOpenControlled = _React$useRef.current;\n\n  var _React$useState4 = React.useState(false),\n      openState = _React$useState4[0],\n      setOpenState = _React$useState4[1];\n\n  var open = isOpenControlled ? openProp : openState;\n  var inputValueIsSelectedValue = !multiple && value != null && inputValue === getOptionLabel(value);\n  var popupOpen = open;\n  var filteredOptions = popupOpen ? filterOptions(options.filter(function (option) {\n    if (filterSelectedOptions && (multiple ? value : [value]).some(function (value2) {\n      return value2 !== null && getOptionSelected(option, value2);\n    })) {\n      return false;\n    }\n\n    return true;\n  }), // we use the empty string to manipulate `filterOptions` to not filter any options\n  // i.e. the filter predicate always returns true\n  {\n    inputValue: inputValueIsSelectedValue ? '' : inputValue,\n    getOptionLabel: getOptionLabel\n  }) : [];\n  popupOpen = freeSolo && filteredOptions.length === 0 ? false : popupOpen;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (value !== null && !freeSolo && options.length > 0) {\n      var missingValue = (multiple ? value : [value]).filter(function (value2) {\n        return !options.some(function (option) {\n          return getOptionSelected(option, value2);\n        });\n      });\n\n      if (missingValue.length > 0) {\n        console.warn([\"Material-UI: the value provided to \".concat(componentName, \" is invalid.\"), \"None of the options match with `\".concat(missingValue.length > 1 ? JSON.stringify(missingValue) : JSON.stringify(missingValue[0]), \"`.\"), 'You can use the `getOptionSelected` prop to customize the equality test.'].join('\\n'));\n      }\n    }\n  }\n\n  var focusTag = useEventCallback(function (tagToFocus) {\n    if (tagToFocus === -1) {\n      inputRef.current.focus();\n    } else {\n      anchorEl.querySelector(\"[data-tag-index=\\\"\".concat(tagToFocus, \"\\\"]\")).focus();\n    }\n  }); // Ensure the focusedTag is never inconsistent\n\n  React.useEffect(function () {\n    if (multiple && focusedTag > value.length - 1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n  }, [value, multiple, focusedTag, focusTag]);\n\n  function validOptionIndex(index, direction) {\n    if (!listboxRef.current || index === -1) {\n      return -1;\n    }\n\n    var nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === filteredOptions.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      var option = listboxRef.current.querySelector(\"[data-option-index=\\\"\".concat(nextFocus, \"\\\"]\")); // Same logic as MenuList.js\n\n      var nextFocusDisabled = disabledItemsFocusable ? false : option && (option.disabled || option.getAttribute('aria-disabled') === 'true');\n\n      if (option && !option.hasAttribute('tabindex') || nextFocusDisabled) {\n        // Move to the next element.\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  var changeHighlightedIndex = useEventCallback(function (diff, direction) {\n    var reason = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'auto';\n    var event = arguments.length > 3 ? arguments[3] : undefined;\n\n    if (!popupOpen) {\n      return;\n    }\n\n    var getNextIndex = function getNextIndex() {\n      var maxIndex = filteredOptions.length - 1;\n\n      if (diff === 'reset') {\n        return defaultHighlighted;\n      }\n\n      if (diff === 'start') {\n        return 0;\n      }\n\n      if (diff === 'end') {\n        return maxIndex;\n      }\n\n      var newIndex = highlightedIndexRef.current + diff;\n\n      if (newIndex < 0) {\n        if (newIndex === -1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap && highlightedIndexRef.current !== -1 || Math.abs(diff) > 1) {\n          return 0;\n        }\n\n        return maxIndex;\n      }\n\n      if (newIndex > maxIndex) {\n        if (newIndex === maxIndex + 1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap || Math.abs(diff) > 1) {\n          return maxIndex;\n        }\n\n        return 0;\n      }\n\n      return newIndex;\n    };\n\n    var nextIndex = validOptionIndex(getNextIndex(), direction);\n    setHighlightedIndex(nextIndex, reason, event);\n\n    if (autoComplete && diff !== 'reset') {\n      if (nextIndex === -1) {\n        inputRef.current.value = inputValue;\n      } else {\n        var option = getOptionLabel(filteredOptions[nextIndex]);\n        inputRef.current.value = option; // The portion of the selected suggestion that has not been typed by the user,\n        // a completion string, appears inline after the input cursor in the textbox.\n\n        var index = option.toLowerCase().indexOf(inputValue.toLowerCase());\n\n        if (index === 0 && inputValue.length > 0) {\n          inputRef.current.setSelectionRange(inputValue.length, option.length);\n        }\n      }\n    }\n  });\n  React.useEffect(function () {\n    if (!open) {\n      return;\n    }\n\n    var valueItem = multiple ? value[0] : value; // The popup is empty\n\n    if (filteredOptions.length === 0 || valueItem == null) {\n      changeHighlightedIndex('reset', 'next');\n      return;\n    } // Synchronize the value with the highlighted index\n\n\n    if (!filterSelectedOptions && valueItem != null) {\n      var currentOption = filteredOptions[highlightedIndexRef.current]; // Keep the current highlighted index if possible\n\n      if (multiple && currentOption && findIndex(value, function (val) {\n        return getOptionSelected(currentOption, val);\n      }) !== -1) {\n        return;\n      }\n\n      var itemIndex = findIndex(filteredOptions, function (optionItem) {\n        return getOptionSelected(optionItem, valueItem);\n      });\n\n      if (itemIndex === -1) {\n        changeHighlightedIndex('reset', 'next');\n      } else {\n        setHighlightedIndex(itemIndex);\n      }\n\n      return;\n    } // Keep the index in the boundaries\n\n\n    if (highlightedIndexRef.current >= filteredOptions.length - 1) {\n      setHighlightedIndex(filteredOptions.length - 1);\n    } // Ignore filterOptions => options, getOptionSelected, getOptionLabel)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [value, open, filterSelectedOptions, changeHighlightedIndex, setHighlightedIndex, inputValue, multiple]);\n\n  var handleOpen = function handleOpen(event) {\n    if (open) {\n      return;\n    }\n\n    if (onOpen) {\n      onOpen(event);\n    }\n\n    if (!isOpenControlled) {\n      setOpenState(true);\n    }\n  };\n\n  var handleClose = function handleClose(event, reason) {\n    if (!open) {\n      return;\n    }\n\n    if (onClose) {\n      onClose(event, reason);\n    }\n\n    if (!isOpenControlled) {\n      setOpenState(false);\n    }\n  };\n\n  var handleValue = function handleValue(event, newValue, reason, details) {\n    if (value === newValue) {\n      return;\n    }\n\n    if (onChange) {\n      onChange(event, newValue, reason, details);\n    }\n\n    setValue(newValue);\n  };\n\n  var isTouch = React.useRef(false);\n\n  var selectNewValue = function selectNewValue(event, option) {\n    var reasonProp = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'select-option';\n    var origin = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'options';\n    var reason = reasonProp;\n    var newValue = option;\n\n    if (multiple) {\n      newValue = Array.isArray(value) ? _toConsumableArray(value) : [];\n\n      if (process.env.NODE_ENV !== 'production') {\n        var matches = newValue.filter(function (val) {\n          return getOptionSelected(option, val);\n        });\n\n        if (matches.length > 1) {\n          console.error([\"Material-UI: the `getOptionSelected` method of \".concat(componentName, \" do not handle the arguments correctly.\"), \"The component expects a single value to match a given option but found \".concat(matches.length, \" matches.\")].join('\\n'));\n        }\n      }\n\n      var itemIndex = findIndex(newValue, function (valueItem) {\n        return getOptionSelected(option, valueItem);\n      });\n\n      if (itemIndex === -1) {\n        newValue.push(option);\n      } else if (origin !== 'freeSolo') {\n        newValue.splice(itemIndex, 1);\n        reason = 'remove-option';\n      }\n    }\n\n    resetInputValue(event, newValue);\n    handleValue(event, newValue, reason, {\n      option: option\n    });\n\n    if (!disableCloseOnSelect) {\n      handleClose(event, reason);\n    }\n\n    if (blurOnSelect === true || blurOnSelect === 'touch' && isTouch.current || blurOnSelect === 'mouse' && !isTouch.current) {\n      inputRef.current.blur();\n    }\n  };\n\n  function validTagIndex(index, direction) {\n    if (index === -1) {\n      return -1;\n    }\n\n    var nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === value.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      var option = anchorEl.querySelector(\"[data-tag-index=\\\"\".concat(nextFocus, \"\\\"]\")); // Same logic as MenuList.js\n\n      if (option && (!option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true')) {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  var handleFocusTag = function handleFocusTag(event, direction) {\n    if (!multiple) {\n      return;\n    }\n\n    handleClose(event, 'toggleInput');\n    var nextTag = focusedTag;\n\n    if (focusedTag === -1) {\n      if (inputValue === '' && direction === 'previous') {\n        nextTag = value.length - 1;\n      }\n    } else {\n      nextTag += direction === 'next' ? 1 : -1;\n\n      if (nextTag < 0) {\n        nextTag = 0;\n      }\n\n      if (nextTag === value.length) {\n        nextTag = -1;\n      }\n    }\n\n    nextTag = validTagIndex(nextTag, direction);\n    setFocusedTag(nextTag);\n    focusTag(nextTag);\n  };\n\n  var handleClear = function handleClear(event) {\n    ignoreFocus.current = true;\n    setInputValue('');\n\n    if (onInputChange) {\n      onInputChange(event, '', 'clear');\n    }\n\n    handleValue(event, multiple ? [] : null, 'clear');\n  };\n\n  var handleKeyDown = function handleKeyDown(other) {\n    return function (event) {\n      if (focusedTag !== -1 && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) === -1) {\n        setFocusedTag(-1);\n        focusTag(-1);\n      }\n\n      switch (event.key) {\n        case 'Home':\n          if (popupOpen) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex('start', 'next', 'keyboard', event);\n          }\n\n          break;\n\n        case 'End':\n          if (popupOpen) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex('end', 'previous', 'keyboard', event);\n          }\n\n          break;\n\n        case 'PageUp':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex(-pageSize, 'previous', 'keyboard', event);\n          handleOpen(event);\n          break;\n\n        case 'PageDown':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex(pageSize, 'next', 'keyboard', event);\n          handleOpen(event);\n          break;\n\n        case 'ArrowDown':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex(1, 'next', 'keyboard', event);\n          handleOpen(event);\n          break;\n\n        case 'ArrowUp':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex(-1, 'previous', 'keyboard', event);\n          handleOpen(event);\n          break;\n\n        case 'ArrowLeft':\n          handleFocusTag(event, 'previous');\n          break;\n\n        case 'ArrowRight':\n          handleFocusTag(event, 'next');\n          break;\n\n        case 'Enter':\n          // Wait until IME is settled.\n          if (event.which === 229) {\n            break;\n          }\n\n          if (highlightedIndexRef.current !== -1 && popupOpen) {\n            var option = filteredOptions[highlightedIndexRef.current];\n            var disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n\n            if (disabled) {\n              return;\n            } // We don't want to validate the form.\n\n\n            event.preventDefault();\n            selectNewValue(event, option, 'select-option'); // Move the selection to the end.\n\n            if (autoComplete) {\n              inputRef.current.setSelectionRange(inputRef.current.value.length, inputRef.current.value.length);\n            }\n          } else if (freeSolo && inputValue !== '' && inputValueIsSelectedValue === false) {\n            if (multiple) {\n              // Allow people to add new values before they submit the form.\n              event.preventDefault();\n            }\n\n            selectNewValue(event, inputValue, 'create-option', 'freeSolo');\n          }\n\n          break;\n\n        case 'Escape':\n          if (popupOpen) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClose(event, 'escape');\n          } else if (clearOnEscape && (inputValue !== '' || multiple && value.length > 0)) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClear(event);\n          }\n\n          break;\n\n        case 'Backspace':\n          if (multiple && inputValue === '' && value.length > 0) {\n            var index = focusedTag === -1 ? value.length - 1 : focusedTag;\n\n            var newValue = _toConsumableArray(value);\n\n            newValue.splice(index, 1);\n            handleValue(event, newValue, 'remove-option', {\n              option: value[index]\n            });\n          }\n\n          break;\n\n        default:\n      }\n\n      if (other.onKeyDown) {\n        other.onKeyDown(event);\n      }\n    };\n  };\n\n  var handleFocus = function handleFocus(event) {\n    setFocused(true);\n\n    if (openOnFocus && !ignoreFocus.current) {\n      handleOpen(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    // Ignore the event when using the scrollbar with IE 11\n    if (listboxRef.current !== null && document.activeElement === listboxRef.current.parentElement) {\n      inputRef.current.focus();\n      return;\n    }\n\n    setFocused(false);\n    firstFocus.current = true;\n    ignoreFocus.current = false;\n\n    if (debug && inputValue !== '') {\n      return;\n    }\n\n    if (autoSelect && highlightedIndexRef.current !== -1 && popupOpen) {\n      selectNewValue(event, filteredOptions[highlightedIndexRef.current], 'blur');\n    } else if (autoSelect && freeSolo && inputValue !== '') {\n      selectNewValue(event, inputValue, 'blur', 'freeSolo');\n    } else if (clearOnBlur) {\n      resetInputValue(event, value);\n    }\n\n    handleClose(event, 'blur');\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newValue = event.target.value;\n\n    if (inputValue !== newValue) {\n      setInputValue(newValue);\n\n      if (onInputChange) {\n        onInputChange(event, newValue, 'input');\n      }\n    }\n\n    if (newValue === '') {\n      if (!disableClearable && !multiple) {\n        handleValue(event, null, 'clear');\n      }\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  var handleOptionMouseOver = function handleOptionMouseOver(event) {\n    var index = Number(event.currentTarget.getAttribute('data-option-index'));\n    setHighlightedIndex(index, 'mouse', event);\n  };\n\n  var handleOptionTouchStart = function handleOptionTouchStart() {\n    isTouch.current = true;\n  };\n\n  var handleOptionClick = function handleOptionClick(event) {\n    var index = Number(event.currentTarget.getAttribute('data-option-index'));\n    selectNewValue(event, filteredOptions[index], 'select-option');\n    isTouch.current = false;\n  };\n\n  var handleTagDelete = function handleTagDelete(index) {\n    return function (event) {\n      var newValue = _toConsumableArray(value);\n\n      newValue.splice(index, 1);\n      handleValue(event, newValue, 'remove-option', {\n        option: value[index]\n      });\n    };\n  };\n\n  var handleListboxRef = useEventCallback(function (node) {\n    setRef(listboxRef, node);\n\n    if (!node) {\n      return;\n    } // Automatically select the first option as the listbox become visible.\n\n\n    if (highlightedIndexRef.current === -1 && autoHighlight) {\n      changeHighlightedIndex('reset', 'next');\n    } else {\n      // Restore the focus to the correct option.\n      setHighlightedIndex(highlightedIndexRef.current);\n    }\n  });\n\n  var handlePopupIndicator = function handlePopupIndicator(event) {\n    if (open) {\n      handleClose(event, 'toggleInput');\n    } else {\n      handleOpen(event);\n    }\n  }; // Prevent input blur when interacting with the combobox\n\n\n  var handleMouseDown = function handleMouseDown(event) {\n    if (event.target.getAttribute('id') !== id) {\n      event.preventDefault();\n    }\n  }; // Focus the input when interacting with the combobox\n\n\n  var handleClick = function handleClick() {\n    inputRef.current.focus();\n\n    if (selectOnFocus && firstFocus.current && inputRef.current.selectionEnd - inputRef.current.selectionStart === 0) {\n      inputRef.current.select();\n    }\n\n    firstFocus.current = false;\n  };\n\n  var handleInputMouseDown = function handleInputMouseDown(event) {\n    if (inputValue === '' || !open) {\n      handlePopupIndicator(event);\n    }\n  };\n\n  var dirty = freeSolo && inputValue.length > 0;\n  dirty = dirty || (multiple ? value.length > 0 : value !== null);\n  var groupedOptions = filteredOptions;\n\n  if (groupBy) {\n    // used to keep track of key and indexes in the result array\n    var indexBy = new Map();\n    var warn = false;\n    groupedOptions = filteredOptions.reduce(function (acc, option, index) {\n      var group = groupBy(option);\n\n      if (acc.length > 0 && acc[acc.length - 1].group === group) {\n        acc[acc.length - 1].options.push(option);\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          if (indexBy.get(group) && !warn) {\n            console.warn(\"Material-UI: the options provided combined with the `groupBy` method of \".concat(componentName, \" returns duplicated headers.\"), 'You can solve the issue by sorting the options with the output of `groupBy`.');\n            warn = true;\n          }\n\n          indexBy.set(group, true);\n        }\n\n        acc.push({\n          key: index,\n          index: index,\n          group: group,\n          options: [option]\n        });\n      }\n\n      return acc;\n    }, []);\n  }\n\n  return {\n    getRootProps: function getRootProps() {\n      var other = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return _extends({\n        'aria-owns': popupOpen ? \"\".concat(id, \"-popup\") : null,\n        role: 'combobox',\n        'aria-expanded': popupOpen\n      }, other, {\n        onKeyDown: handleKeyDown(other),\n        onMouseDown: handleMouseDown,\n        onClick: handleClick\n      });\n    },\n    getInputLabelProps: function getInputLabelProps() {\n      return {\n        id: \"\".concat(id, \"-label\"),\n        htmlFor: id\n      };\n    },\n    getInputProps: function getInputProps() {\n      return {\n        id: id,\n        value: inputValue,\n        onBlur: handleBlur,\n        onFocus: handleFocus,\n        onChange: handleInputChange,\n        onMouseDown: handleInputMouseDown,\n        // if open then this is handled imperativeley so don't let react override\n        // only have an opinion about this when closed\n        'aria-activedescendant': popupOpen ? '' : null,\n        'aria-autocomplete': autoComplete ? 'both' : 'list',\n        'aria-controls': popupOpen ? \"\".concat(id, \"-popup\") : null,\n        // Disable browser's suggestion that might overlap with the popup.\n        // Handle autocomplete but not autofill.\n        autoComplete: 'off',\n        ref: inputRef,\n        autoCapitalize: 'none',\n        spellCheck: 'false'\n      };\n    },\n    getClearProps: function getClearProps() {\n      return {\n        tabIndex: -1,\n        onClick: handleClear\n      };\n    },\n    getPopupIndicatorProps: function getPopupIndicatorProps() {\n      return {\n        tabIndex: -1,\n        onClick: handlePopupIndicator\n      };\n    },\n    getTagProps: function getTagProps(_ref2) {\n      var index = _ref2.index;\n      return {\n        key: index,\n        'data-tag-index': index,\n        tabIndex: -1,\n        onDelete: handleTagDelete(index)\n      };\n    },\n    getListboxProps: function getListboxProps() {\n      return {\n        role: 'listbox',\n        id: \"\".concat(id, \"-popup\"),\n        'aria-labelledby': \"\".concat(id, \"-label\"),\n        ref: handleListboxRef,\n        onMouseDown: function onMouseDown(event) {\n          // Prevent blur\n          event.preventDefault();\n        }\n      };\n    },\n    getOptionProps: function getOptionProps(_ref3) {\n      var index = _ref3.index,\n          option = _ref3.option;\n      var selected = (multiple ? value : [value]).some(function (value2) {\n        return value2 != null && getOptionSelected(option, value2);\n      });\n      var disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n      return {\n        key: index,\n        tabIndex: -1,\n        role: 'option',\n        id: \"\".concat(id, \"-option-\").concat(index),\n        onMouseOver: handleOptionMouseOver,\n        onClick: handleOptionClick,\n        onTouchStart: handleOptionTouchStart,\n        'data-option-index': index,\n        'aria-disabled': disabled,\n        'aria-selected': selected\n      };\n    },\n    id: id,\n    inputValue: inputValue,\n    value: value,\n    dirty: dirty,\n    popupOpen: popupOpen,\n    focused: focused || focusedTag !== -1,\n    anchorEl: anchorEl,\n    setAnchorEl: setAnchorEl,\n    focusedTag: focusedTag,\n    groupedOptions: groupedOptions\n  };\n}","export { default, createFilterOptions } from './useAutocomplete';","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"createFilterOptions\", {\n  enumerable: true,\n  get: function get() {\n    return _useAutocomplete2.createFilterOptions;\n  }\n});\nexports.default = exports.styles = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\n\nvar _styles = require(\"@material-ui/core/styles\");\n\nvar _Popper = _interopRequireDefault(require(\"@material-ui/core/Popper\"));\n\nvar _ListSubheader = _interopRequireDefault(require(\"@material-ui/core/ListSubheader\"));\n\nvar _Paper = _interopRequireDefault(require(\"@material-ui/core/Paper\"));\n\nvar _IconButton = _interopRequireDefault(require(\"@material-ui/core/IconButton\"));\n\nvar _Chip = _interopRequireDefault(require(\"@material-ui/core/Chip\"));\n\nvar _Close = _interopRequireDefault(require(\"../internal/svg-icons/Close\"));\n\nvar _ArrowDropDown = _interopRequireDefault(require(\"../internal/svg-icons/ArrowDropDown\"));\n\nvar _useAutocomplete2 = _interopRequireWildcard(require(\"../useAutocomplete\"));\n\nvar styles = function styles(theme) {\n  var _option;\n\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      '&:hover $clearIndicatorDirty, &$focused $clearIndicatorDirty': {\n        visibility: 'visible'\n      }\n    },\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Pseudo-class applied to the root element if focused. */\n    focused: {},\n\n    /* Styles applied to the tag elements, e.g. the chips. */\n    tag: {\n      margin: 3,\n      maxWidth: 'calc(100% - 6px)'\n    },\n\n    /* Styles applied to the tag elements, e.g. the chips if `size=\"small\"`. */\n    tagSizeSmall: {\n      margin: 2,\n      maxWidth: 'calc(100% - 4px)'\n    },\n\n    /* Styles applied when the popup icon is rendered. */\n    hasPopupIcon: {},\n\n    /* Styles applied when the clear icon is rendered. */\n    hasClearIcon: {},\n\n    /* Styles applied to the Input element. */\n    inputRoot: {\n      flexWrap: 'wrap',\n      '$hasPopupIcon &, $hasClearIcon &': {\n        paddingRight: 26 + 4\n      },\n      '$hasPopupIcon$hasClearIcon &': {\n        paddingRight: 52 + 4\n      },\n      '& $input': {\n        width: 0,\n        minWidth: 30\n      },\n      '&[class*=\"MuiInput-root\"]': {\n        paddingBottom: 1,\n        '& $input': {\n          padding: 4\n        },\n        '& $input:first-child': {\n          padding: '6px 0'\n        }\n      },\n      '&[class*=\"MuiInput-root\"][class*=\"MuiInput-marginDense\"]': {\n        '& $input': {\n          padding: '4px 4px 5px'\n        },\n        '& $input:first-child': {\n          padding: '3px 0 6px'\n        }\n      },\n      '&[class*=\"MuiOutlinedInput-root\"]': {\n        padding: 9,\n        '$hasPopupIcon &, $hasClearIcon &': {\n          paddingRight: 26 + 4 + 9\n        },\n        '$hasPopupIcon$hasClearIcon &': {\n          paddingRight: 52 + 4 + 9\n        },\n        '& $input': {\n          padding: '9.5px 4px'\n        },\n        '& $input:first-child': {\n          paddingLeft: 6\n        },\n        '& $endAdornment': {\n          right: 9\n        }\n      },\n      '&[class*=\"MuiOutlinedInput-root\"][class*=\"MuiOutlinedInput-marginDense\"]': {\n        padding: 6,\n        '& $input': {\n          padding: '4.5px 4px'\n        }\n      },\n      '&[class*=\"MuiFilledInput-root\"]': {\n        paddingTop: 19,\n        paddingLeft: 8,\n        '$hasPopupIcon &, $hasClearIcon &': {\n          paddingRight: 26 + 4 + 9\n        },\n        '$hasPopupIcon$hasClearIcon &': {\n          paddingRight: 52 + 4 + 9\n        },\n        '& $input': {\n          padding: '9px 4px'\n        },\n        '& $endAdornment': {\n          right: 9\n        }\n      },\n      '&[class*=\"MuiFilledInput-root\"][class*=\"MuiFilledInput-marginDense\"]': {\n        paddingBottom: 1,\n        '& $input': {\n          padding: '4.5px 4px'\n        }\n      }\n    },\n\n    /* Styles applied to the input element. */\n    input: {\n      flexGrow: 1,\n      textOverflow: 'ellipsis',\n      opacity: 0\n    },\n\n    /* Styles applied to the input element if tag focused. */\n    inputFocused: {\n      opacity: 1\n    },\n\n    /* Styles applied to the endAdornment element. */\n    endAdornment: {\n      // We use a position absolute to support wrapping tags.\n      position: 'absolute',\n      right: 0,\n      top: 'calc(50% - 14px)' // Center vertically\n\n    },\n\n    /* Styles applied to the clear indicator. */\n    clearIndicator: {\n      marginRight: -2,\n      padding: 4,\n      visibility: 'hidden'\n    },\n\n    /* Styles applied to the clear indicator if the input is dirty. */\n    clearIndicatorDirty: {},\n\n    /* Styles applied to the popup indicator. */\n    popupIndicator: {\n      padding: 2,\n      marginRight: -2\n    },\n\n    /* Styles applied to the popup indicator if the popup is open. */\n    popupIndicatorOpen: {\n      transform: 'rotate(180deg)'\n    },\n\n    /* Styles applied to the popper element. */\n    popper: {\n      zIndex: theme.zIndex.modal\n    },\n\n    /* Styles applied to the popper element if `disablePortal={true}`. */\n    popperDisablePortal: {\n      position: 'absolute'\n    },\n\n    /* Styles applied to the `Paper` component. */\n    paper: (0, _extends2.default)({}, theme.typography.body1, {\n      overflow: 'hidden',\n      margin: '4px 0'\n    }),\n\n    /* Styles applied to the `listbox` component. */\n    listbox: {\n      listStyle: 'none',\n      margin: 0,\n      padding: '8px 0px',\n      maxHeight: '40vh',\n      overflow: 'auto'\n    },\n\n    /* Styles applied to the loading wrapper. */\n    loading: {\n      color: theme.palette.text.secondary,\n      padding: '14px 16px'\n    },\n\n    /* Styles applied to the no option wrapper. */\n    noOptions: {\n      color: theme.palette.text.secondary,\n      padding: '14px 16px'\n    },\n\n    /* Styles applied to the option elements. */\n    option: (_option = {\n      minHeight: 48,\n      display: 'flex',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      cursor: 'pointer',\n      paddingTop: 6,\n      boxSizing: 'border-box',\n      outline: '0',\n      WebkitTapHighlightColor: 'transparent',\n      paddingBottom: 6,\n      paddingLeft: 16,\n      paddingRight: 16\n    }, (0, _defineProperty2.default)(_option, theme.breakpoints.up('sm'), {\n      minHeight: 'auto'\n    }), (0, _defineProperty2.default)(_option, '&[aria-selected=\"true\"]', {\n      backgroundColor: theme.palette.action.selected\n    }), (0, _defineProperty2.default)(_option, '&[data-focus=\"true\"]', {\n      backgroundColor: theme.palette.action.hover\n    }), (0, _defineProperty2.default)(_option, '&:active', {\n      backgroundColor: theme.palette.action.selected\n    }), (0, _defineProperty2.default)(_option, '&[aria-disabled=\"true\"]', {\n      opacity: theme.palette.action.disabledOpacity,\n      pointerEvents: 'none'\n    }), _option),\n\n    /* Styles applied to the group's label elements. */\n    groupLabel: {\n      backgroundColor: theme.palette.background.paper,\n      top: -8\n    },\n\n    /* Styles applied to the group's ul elements. */\n    groupUl: {\n      padding: 0,\n      '& $option': {\n        paddingLeft: 24\n      }\n    }\n  };\n};\n\nexports.styles = styles;\n\nfunction DisablePortal(props) {\n  // eslint-disable-next-line react/prop-types\n  var anchorEl = props.anchorEl,\n      open = props.open,\n      other = (0, _objectWithoutProperties2.default)(props, [\"anchorEl\", \"open\"]);\n  return /*#__PURE__*/React.createElement(\"div\", other);\n}\n\nvar _ref = /*#__PURE__*/React.createElement(_Close.default, {\n  fontSize: \"small\"\n});\n\nvar _ref2 = /*#__PURE__*/React.createElement(_ArrowDropDown.default, null);\n\nvar Autocomplete = React.forwardRef(function Autocomplete(props, ref) {\n  /* eslint-disable no-unused-vars */\n  var _props$autoComplete = props.autoComplete,\n      autoComplete = _props$autoComplete === void 0 ? false : _props$autoComplete,\n      _props$autoHighlight = props.autoHighlight,\n      autoHighlight = _props$autoHighlight === void 0 ? false : _props$autoHighlight,\n      _props$autoSelect = props.autoSelect,\n      autoSelect = _props$autoSelect === void 0 ? false : _props$autoSelect,\n      _props$blurOnSelect = props.blurOnSelect,\n      blurOnSelect = _props$blurOnSelect === void 0 ? false : _props$blurOnSelect,\n      ChipProps = props.ChipProps,\n      classes = props.classes,\n      className = props.className,\n      _props$clearOnBlur = props.clearOnBlur,\n      clearOnBlur = _props$clearOnBlur === void 0 ? !props.freeSolo : _props$clearOnBlur,\n      _props$clearOnEscape = props.clearOnEscape,\n      clearOnEscape = _props$clearOnEscape === void 0 ? false : _props$clearOnEscape,\n      _props$clearText = props.clearText,\n      clearText = _props$clearText === void 0 ? 'Clear' : _props$clearText,\n      _props$closeIcon = props.closeIcon,\n      closeIcon = _props$closeIcon === void 0 ? _ref : _props$closeIcon,\n      _props$closeText = props.closeText,\n      closeText = _props$closeText === void 0 ? 'Close' : _props$closeText,\n      _props$debug = props.debug,\n      debug = _props$debug === void 0 ? false : _props$debug,\n      _props$defaultValue = props.defaultValue,\n      defaultValue = _props$defaultValue === void 0 ? props.multiple ? [] : null : _props$defaultValue,\n      _props$disableClearab = props.disableClearable,\n      disableClearable = _props$disableClearab === void 0 ? false : _props$disableClearab,\n      _props$disableCloseOn = props.disableCloseOnSelect,\n      disableCloseOnSelect = _props$disableCloseOn === void 0 ? false : _props$disableCloseOn,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disabledItemsF = props.disabledItemsFocusable,\n      disabledItemsFocusable = _props$disabledItemsF === void 0 ? false : _props$disabledItemsF,\n      _props$disableListWra = props.disableListWrap,\n      disableListWrap = _props$disableListWra === void 0 ? false : _props$disableListWra,\n      _props$disablePortal = props.disablePortal,\n      disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal,\n      filterOptions = props.filterOptions,\n      _props$filterSelected = props.filterSelectedOptions,\n      filterSelectedOptions = _props$filterSelected === void 0 ? false : _props$filterSelected,\n      _props$forcePopupIcon = props.forcePopupIcon,\n      forcePopupIcon = _props$forcePopupIcon === void 0 ? 'auto' : _props$forcePopupIcon,\n      _props$freeSolo = props.freeSolo,\n      freeSolo = _props$freeSolo === void 0 ? false : _props$freeSolo,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$getLimitTagsTe = props.getLimitTagsText,\n      getLimitTagsText = _props$getLimitTagsTe === void 0 ? function (more) {\n    return \"+\".concat(more);\n  } : _props$getLimitTagsTe,\n      getOptionDisabled = props.getOptionDisabled,\n      _props$getOptionLabel = props.getOptionLabel,\n      getOptionLabel = _props$getOptionLabel === void 0 ? function (x) {\n    return x;\n  } : _props$getOptionLabel,\n      getOptionSelected = props.getOptionSelected,\n      groupBy = props.groupBy,\n      idProp = props.id,\n      _props$includeInputIn = props.includeInputInList,\n      includeInputInList = _props$includeInputIn === void 0 ? false : _props$includeInputIn,\n      inputValueProp = props.inputValue,\n      _props$limitTags = props.limitTags,\n      limitTags = _props$limitTags === void 0 ? -1 : _props$limitTags,\n      _props$ListboxCompone = props.ListboxComponent,\n      ListboxComponent = _props$ListboxCompone === void 0 ? 'ul' : _props$ListboxCompone,\n      ListboxProps = props.ListboxProps,\n      _props$loading = props.loading,\n      loading = _props$loading === void 0 ? false : _props$loading,\n      _props$loadingText = props.loadingText,\n      loadingText = _props$loadingText === void 0 ? 'Loading…' : _props$loadingText,\n      _props$multiple = props.multiple,\n      multiple = _props$multiple === void 0 ? false : _props$multiple,\n      _props$noOptionsText = props.noOptionsText,\n      noOptionsText = _props$noOptionsText === void 0 ? 'No options' : _props$noOptionsText,\n      onChange = props.onChange,\n      onClose = props.onClose,\n      onHighlightChange = props.onHighlightChange,\n      onInputChange = props.onInputChange,\n      onOpen = props.onOpen,\n      open = props.open,\n      _props$openOnFocus = props.openOnFocus,\n      openOnFocus = _props$openOnFocus === void 0 ? false : _props$openOnFocus,\n      _props$openText = props.openText,\n      openText = _props$openText === void 0 ? 'Open' : _props$openText,\n      options = props.options,\n      _props$PaperComponent = props.PaperComponent,\n      PaperComponent = _props$PaperComponent === void 0 ? _Paper.default : _props$PaperComponent,\n      _props$PopperComponen = props.PopperComponent,\n      PopperComponentProp = _props$PopperComponen === void 0 ? _Popper.default : _props$PopperComponen,\n      _props$popupIcon = props.popupIcon,\n      popupIcon = _props$popupIcon === void 0 ? _ref2 : _props$popupIcon,\n      renderGroupProp = props.renderGroup,\n      renderInput = props.renderInput,\n      renderOptionProp = props.renderOption,\n      renderTags = props.renderTags,\n      _props$selectOnFocus = props.selectOnFocus,\n      selectOnFocus = _props$selectOnFocus === void 0 ? !props.freeSolo : _props$selectOnFocus,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      valueProp = props.value,\n      other = (0, _objectWithoutProperties2.default)(props, [\"autoComplete\", \"autoHighlight\", \"autoSelect\", \"blurOnSelect\", \"ChipProps\", \"classes\", \"className\", \"clearOnBlur\", \"clearOnEscape\", \"clearText\", \"closeIcon\", \"closeText\", \"debug\", \"defaultValue\", \"disableClearable\", \"disableCloseOnSelect\", \"disabled\", \"disabledItemsFocusable\", \"disableListWrap\", \"disablePortal\", \"filterOptions\", \"filterSelectedOptions\", \"forcePopupIcon\", \"freeSolo\", \"fullWidth\", \"getLimitTagsText\", \"getOptionDisabled\", \"getOptionLabel\", \"getOptionSelected\", \"groupBy\", \"id\", \"includeInputInList\", \"inputValue\", \"limitTags\", \"ListboxComponent\", \"ListboxProps\", \"loading\", \"loadingText\", \"multiple\", \"noOptionsText\", \"onChange\", \"onClose\", \"onHighlightChange\", \"onInputChange\", \"onOpen\", \"open\", \"openOnFocus\", \"openText\", \"options\", \"PaperComponent\", \"PopperComponent\", \"popupIcon\", \"renderGroup\", \"renderInput\", \"renderOption\", \"renderTags\", \"selectOnFocus\", \"size\", \"value\"]);\n  /* eslint-enable no-unused-vars */\n\n  var PopperComponent = disablePortal ? DisablePortal : PopperComponentProp;\n\n  var _useAutocomplete = (0, _useAutocomplete2.default)((0, _extends2.default)({}, props, {\n    componentName: 'Autocomplete'\n  })),\n      getRootProps = _useAutocomplete.getRootProps,\n      getInputProps = _useAutocomplete.getInputProps,\n      getInputLabelProps = _useAutocomplete.getInputLabelProps,\n      getPopupIndicatorProps = _useAutocomplete.getPopupIndicatorProps,\n      getClearProps = _useAutocomplete.getClearProps,\n      getTagProps = _useAutocomplete.getTagProps,\n      getListboxProps = _useAutocomplete.getListboxProps,\n      getOptionProps = _useAutocomplete.getOptionProps,\n      value = _useAutocomplete.value,\n      dirty = _useAutocomplete.dirty,\n      id = _useAutocomplete.id,\n      popupOpen = _useAutocomplete.popupOpen,\n      focused = _useAutocomplete.focused,\n      focusedTag = _useAutocomplete.focusedTag,\n      anchorEl = _useAutocomplete.anchorEl,\n      setAnchorEl = _useAutocomplete.setAnchorEl,\n      inputValue = _useAutocomplete.inputValue,\n      groupedOptions = _useAutocomplete.groupedOptions;\n\n  var startAdornment;\n\n  if (multiple && value.length > 0) {\n    var getCustomizedTagProps = function getCustomizedTagProps(params) {\n      return (0, _extends2.default)({\n        className: (0, _clsx.default)(classes.tag, size === 'small' && classes.tagSizeSmall),\n        disabled: disabled\n      }, getTagProps(params));\n    };\n\n    if (renderTags) {\n      startAdornment = renderTags(value, getCustomizedTagProps);\n    } else {\n      startAdornment = value.map(function (option, index) {\n        return /*#__PURE__*/React.createElement(_Chip.default, (0, _extends2.default)({\n          label: getOptionLabel(option),\n          size: size\n        }, getCustomizedTagProps({\n          index: index\n        }), ChipProps));\n      });\n    }\n  }\n\n  if (limitTags > -1 && Array.isArray(startAdornment)) {\n    var more = startAdornment.length - limitTags;\n\n    if (limitTags && !focused && more > 0) {\n      startAdornment = startAdornment.splice(0, limitTags);\n      startAdornment.push( /*#__PURE__*/React.createElement(\"span\", {\n        className: classes.tag,\n        key: startAdornment.length\n      }, getLimitTagsText(more)));\n    }\n  }\n\n  var defaultRenderGroup = function defaultRenderGroup(params) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: params.key\n    }, /*#__PURE__*/React.createElement(_ListSubheader.default, {\n      className: classes.groupLabel,\n      component: \"div\"\n    }, params.group), /*#__PURE__*/React.createElement(\"ul\", {\n      className: classes.groupUl\n    }, params.children));\n  };\n\n  var renderGroup = renderGroupProp || defaultRenderGroup;\n  var renderOption = renderOptionProp || getOptionLabel;\n\n  var renderListOption = function renderListOption(option, index) {\n    var optionProps = getOptionProps({\n      option: option,\n      index: index\n    });\n    return /*#__PURE__*/React.createElement(\"li\", (0, _extends2.default)({}, optionProps, {\n      className: classes.option\n    }), renderOption(option, {\n      selected: optionProps['aria-selected'],\n      inputValue: inputValue\n    }));\n  };\n\n  var hasClearIcon = !disableClearable && !disabled;\n  var hasPopupIcon = (!freeSolo || forcePopupIcon === true) && forcePopupIcon !== false;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", (0, _extends2.default)({\n    ref: ref,\n    className: (0, _clsx.default)(classes.root, className, focused && classes.focused, fullWidth && classes.fullWidth, hasClearIcon && classes.hasClearIcon, hasPopupIcon && classes.hasPopupIcon)\n  }, getRootProps(other)), renderInput({\n    id: id,\n    disabled: disabled,\n    fullWidth: true,\n    size: size === 'small' ? 'small' : undefined,\n    InputLabelProps: getInputLabelProps(),\n    InputProps: {\n      ref: setAnchorEl,\n      className: classes.inputRoot,\n      startAdornment: startAdornment,\n      endAdornment: /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.endAdornment\n      }, hasClearIcon ? /*#__PURE__*/React.createElement(_IconButton.default, (0, _extends2.default)({}, getClearProps(), {\n        \"aria-label\": clearText,\n        title: clearText,\n        className: (0, _clsx.default)(classes.clearIndicator, dirty && classes.clearIndicatorDirty)\n      }), closeIcon) : null, hasPopupIcon ? /*#__PURE__*/React.createElement(_IconButton.default, (0, _extends2.default)({}, getPopupIndicatorProps(), {\n        disabled: disabled,\n        \"aria-label\": popupOpen ? closeText : openText,\n        title: popupOpen ? closeText : openText,\n        className: (0, _clsx.default)(classes.popupIndicator, popupOpen && classes.popupIndicatorOpen)\n      }), popupIcon) : null)\n    },\n    inputProps: (0, _extends2.default)({\n      className: (0, _clsx.default)(classes.input, focusedTag === -1 && classes.inputFocused),\n      disabled: disabled\n    }, getInputProps())\n  })), popupOpen && anchorEl ? /*#__PURE__*/React.createElement(PopperComponent, {\n    className: (0, _clsx.default)(classes.popper, disablePortal && classes.popperDisablePortal),\n    style: {\n      width: anchorEl ? anchorEl.clientWidth : null\n    },\n    role: \"presentation\",\n    anchorEl: anchorEl,\n    open: true\n  }, /*#__PURE__*/React.createElement(PaperComponent, {\n    className: classes.paper\n  }, loading && groupedOptions.length === 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.loading\n  }, loadingText) : null, groupedOptions.length === 0 && !freeSolo && !loading ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.noOptions\n  }, noOptionsText) : null, groupedOptions.length > 0 ? /*#__PURE__*/React.createElement(ListboxComponent, (0, _extends2.default)({\n    className: classes.listbox\n  }, getListboxProps(), ListboxProps), groupedOptions.map(function (option, index) {\n    if (groupBy) {\n      return renderGroup({\n        key: option.key,\n        group: option.group,\n        children: option.options.map(function (option2, index2) {\n          return renderListOption(option2, option.index + index2);\n        })\n      });\n    }\n\n    return renderListOption(option, index);\n  })) : null)) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? Autocomplete.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   */\n  autoComplete: _propTypes.default.bool,\n\n  /**\n   * If `true`, the first option is automatically highlighted.\n   */\n  autoHighlight: _propTypes.default.bool,\n\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   */\n  autoSelect: _propTypes.default.bool,\n\n  /**\n   * Control if the input should be blurred when an option is selected:\n   *\n   * - `false` the input is not blurred.\n   * - `true` the input is always blurred.\n   * - `touch` the input is blurred after a touch event.\n   * - `mouse` the input is blurred after a mouse event.\n   */\n  blurOnSelect: _propTypes.default.oneOfType([_propTypes.default.oneOf(['mouse', 'touch']), _propTypes.default.bool]),\n\n  /**\n   * Props applied to the [`Chip`](/api/chip/) element.\n   */\n  ChipProps: _propTypes.default.object,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: _propTypes.default.object,\n\n  /**\n   * @ignore\n   */\n  className: _propTypes.default.string,\n\n  /**\n   * If `true`, the input's text will be cleared on blur if no value is selected.\n   *\n   * Set to `true` if you want to help the user enter a new value.\n   * Set to `false` if you want to help the user resume his search.\n   */\n  clearOnBlur: _propTypes.default.bool,\n\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   */\n  clearOnEscape: _propTypes.default.bool,\n\n  /**\n   * Override the default text for the *clear* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  clearText: _propTypes.default.string,\n\n  /**\n   * The icon to display in place of the default close icon.\n   */\n  closeIcon: _propTypes.default.node,\n\n  /**\n   * Override the default text for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  closeText: _propTypes.default.string,\n\n  /**\n   * If `true`, the popup will ignore the blur event if the input is filled.\n   * You can inspect the popup markup with your browser tools.\n   * Consider this option when you need to customize the component.\n   */\n  debug: _propTypes.default.bool,\n\n  /**\n   * The default input value. Use when the component is not controlled.\n   */\n  defaultValue: _propTypes.default.oneOfType([_propTypes.default.any, _propTypes.default.array]),\n\n  /**\n   * If `true`, the input can't be cleared.\n   */\n  disableClearable: _propTypes.default.bool,\n\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   */\n  disableCloseOnSelect: _propTypes.default.bool,\n\n  /**\n   * If `true`, the input will be disabled.\n   */\n  disabled: _propTypes.default.bool,\n\n  /**\n   * If `true`, will allow focus on disabled items.\n   */\n  disabledItemsFocusable: _propTypes.default.bool,\n\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   */\n  disableListWrap: _propTypes.default.bool,\n\n  /**\n   * Disable the portal behavior.\n   * The children stay within it's parent DOM hierarchy.\n   */\n  disablePortal: _propTypes.default.bool,\n\n  /**\n   * A filter function that determines the options that are eligible.\n   *\n   * @param {T[]} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {T[]}\n   */\n  filterOptions: _propTypes.default.func,\n\n  /**\n   * If `true`, hide the selected options from the list box.\n   */\n  filterSelectedOptions: _propTypes.default.bool,\n\n  /**\n   * Force the visibility display of the popup icon.\n   */\n  forcePopupIcon: _propTypes.default.oneOfType([_propTypes.default.oneOf(['auto']), _propTypes.default.bool]),\n\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   */\n  freeSolo: _propTypes.default.bool,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   */\n  fullWidth: _propTypes.default.bool,\n\n  /**\n   * The label to display when the tags are truncated (`limitTags`).\n   *\n   * @param {number} more The number of truncated tags.\n   * @returns {ReactNode}\n   */\n  getLimitTagsText: _propTypes.default.func,\n\n  /**\n   * Used to determine the disabled state for a given option.\n   *\n   * @param {T} option The option to test.\n   * @returns {boolean}\n   */\n  getOptionDisabled: _propTypes.default.func,\n\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   *\n   * @param {T} option\n   * @returns {string}\n   */\n  getOptionLabel: _propTypes.default.func,\n\n  /**\n   * Used to determine if an option is selected, considering the current value.\n   * Uses strict equality by default.\n   *\n   * @param {T} option The option to test.\n   * @param {T} value The value to test against.\n   * @returns {boolean}\n   */\n  getOptionSelected: _propTypes.default.func,\n\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {T} options The options to group.\n   * @returns {string}\n   */\n  groupBy: _propTypes.default.func,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide this prop. It falls back to a randomly generated id.\n   */\n  id: _propTypes.default.string,\n\n  /**\n   * If `true`, the highlight can move to the input.\n   */\n  includeInputInList: _propTypes.default.bool,\n\n  /**\n   * The input value.\n   */\n  inputValue: _propTypes.default.string,\n\n  /**\n   * The maximum number of tags that will be visible when not focused.\n   * Set `-1` to disable the limit.\n   */\n  limitTags: _propTypes.default.number,\n\n  /**\n   * The component used to render the listbox.\n   */\n  ListboxComponent: _propTypes.default.elementType,\n\n  /**\n   * Props applied to the Listbox element.\n   */\n  ListboxProps: _propTypes.default.object,\n\n  /**\n   * If `true`, the component is in a loading state.\n   */\n  loading: _propTypes.default.bool,\n\n  /**\n   * Text to display when in a loading state.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  loadingText: _propTypes.default.node,\n\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   */\n  multiple: _propTypes.default.bool,\n\n  /**\n   * Text to display when there are no options.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  noOptionsText: _propTypes.default.node,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {T} value The new value of the component.\n   * @param {string} reason One of \"create-option\", \"select-option\", \"remove-option\", \"blur\" or \"clear\".\n   */\n  onChange: _propTypes.default.func,\n\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"toggleInput\"`, `\"escape\"`, `\"select-option\"`, `\"blur\"`.\n   */\n  onClose: _propTypes.default.func,\n\n  /**\n   * Callback fired when the highlight option changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {T} option The highlighted option.\n   * @param {string} reason Can be: `\"keyboard\"`, `\"auto\"`, `\"mouse\"`.\n   */\n  onHighlightChange: _propTypes.default.func,\n\n  /**\n   * Callback fired when the input value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} value The new value of the text input.\n   * @param {string} reason Can be: `\"input\"` (user input), `\"reset\"` (programmatic change), `\"clear\"`.\n   */\n  onInputChange: _propTypes.default.func,\n\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: _propTypes.default.func,\n\n  /**\n   * Control the popup` open state.\n   */\n  open: _propTypes.default.bool,\n\n  /**\n   * If `true`, the popup will open on input focus.\n   */\n  openOnFocus: _propTypes.default.bool,\n\n  /**\n   * Override the default text for the *open popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  openText: _propTypes.default.string,\n\n  /**\n   * Array of options.\n   */\n  options: _propTypes.default.array.isRequired,\n\n  /**\n   * The component used to render the body of the popup.\n   */\n  PaperComponent: _propTypes.default.elementType,\n\n  /**\n   * The component used to position the popup.\n   */\n  PopperComponent: _propTypes.default.elementType,\n\n  /**\n   * The icon to display in place of the default popup icon.\n   */\n  popupIcon: _propTypes.default.node,\n\n  /**\n   * Render the group.\n   *\n   * @param {any} option The group to render.\n   * @returns {ReactNode}\n   */\n  renderGroup: _propTypes.default.func,\n\n  /**\n   * Render the input.\n   *\n   * @param {object} params\n   * @returns {ReactNode}\n   */\n  renderInput: _propTypes.default.func.isRequired,\n\n  /**\n   * Render the option, use `getOptionLabel` by default.\n   *\n   * @param {T} option The option to render.\n   * @param {object} state The state of the component.\n   * @returns {ReactNode}\n   */\n  renderOption: _propTypes.default.func,\n\n  /**\n   * Render the selected value.\n   *\n   * @param {T[]} value The `value` provided to the component.\n   * @param {function} getTagProps A tag props getter.\n   * @returns {ReactNode}\n   */\n  renderTags: _propTypes.default.func,\n\n  /**\n   * If `true`, the input's text will be selected on focus.\n   * It helps the user clear the selected value.\n   */\n  selectOnFocus: _propTypes.default.bool,\n\n  /**\n   * The size of the autocomplete.\n   */\n  size: _propTypes.default.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the autocomplete.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   * You can customize the equality behavior with the `getOptionSelected` prop.\n   */\n  value: _propTypes.default.oneOfType([_propTypes.default.any, _propTypes.default.array])\n} : void 0;\n\nvar _default = (0, _styles.withStyles)(styles, {\n  name: 'MuiAutocomplete'\n})(Autocomplete);\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _utils = require(\"@material-ui/core/utils\");\n\n/**\n * @ignore - internal component.\n */\nvar _default = (0, _utils.createSvgIcon)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _utils = require(\"@material-ui/core/utils\");\n\n/**\n * @ignore - internal component.\n */\nvar _default = (0, _utils.createSvgIcon)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M7 10l5 5 5-5z\"\n}), 'ArrowDropDown');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M20 2H4c-1.1 0-2 .9-2 2v18l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2z\"\n}), 'ChatBubble');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m1.1-2H3.9c-.5 0-.9.4-.9.9v16.2c0 .4.4.9.9.9h16.2c.4 0 .9-.5.9-.9V3.9c0-.5-.5-.9-.9-.9zM11 7h6v2h-6V7zm0 4h6v2h-6v-2zm0 4h6v2h-6zM7 7h2v2H7zm0 4h2v2H7zm0 4h2v2H7z\"\n}), 'ListAlt');\n\nexports.default = _default;","import React, {useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Card from '@material-ui/core/Card';\r\nimport Button from '@material-ui/core/Button';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport IntlMessages from '../../../../@crema/utility/IntlMessages';\r\nimport Box from '@material-ui/core/Box';\r\nimport PropTypes from 'prop-types';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {grey, red} from '@material-ui/core/colors';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\n\r\nconst AddNewList = props => {\r\n  const {onAddList} = props;\r\n  const [isAddList, setAddList] = useState(false);\r\n\r\n  const [listName, setListName] = useState('');\r\n\r\n  const onClickAddButton = () => {\r\n    if (listName !== '') {\r\n      onAddList(listName);\r\n      setAddList(false);\r\n      setListName('');\r\n    }\r\n  };\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    avatar: {\r\n      cursor: 'pointer',\r\n      backgroundColor: grey[100],\r\n      border: `1px dashed ${grey[400]}`,\r\n    },\r\n    pointer: {\r\n      cursor: 'pointer',\r\n    },\r\n    addIconRoot: {\r\n      color: grey[500],\r\n      fontFamily: Fonts.BOLD,\r\n    },\r\n    btnRoot: {\r\n      backgroundColor: red[500],\r\n      color: theme.palette.primary.contrastText,\r\n      paddingLeft: 24,\r\n      paddingRight: 24,\r\n      marginTop: 12,\r\n      '&:hover, &:focus': {\r\n        backgroundColor: red[800],\r\n        color: theme.palette.primary.contrastText,\r\n      },\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <Box py={4} px={6} mb={2} clone>\r\n      <Card>\r\n        <Box display='flex' alignItems='center'>\r\n          <Avatar className={classes.avatar} onClick={() => setAddList(true)}>\r\n            <AddIcon className={classes.addIconRoot} />\r\n          </Avatar>\r\n          <Box display='flex'>\r\n            <Box ml={5} fontFamily={Fonts.BOLD}>\r\n              <IntlMessages id='scrumboard.addAList' />\r\n            </Box>\r\n            {isAddList ? (\r\n              <Box px={3} textAlign='right'>\r\n                <CloseIcon\r\n                  className={classes.pointer}\r\n                  onClick={() => setAddList(false)}\r\n                />\r\n              </Box>\r\n            ) : null}\r\n          </Box>\r\n        </Box>\r\n        {isAddList ? (\r\n          <Box>\r\n            <TextField\r\n              fullWidth\r\n              margin='normal'\r\n              label={<IntlMessages id='scrumboard.cardTitle' />}\r\n              value={listName}\r\n              onChange={event => setListName(event.target.value)}\r\n            />\r\n            <Button className={classes.btnRoot} onClick={onClickAddButton}>\r\n              <IntlMessages id='common.add' />\r\n            </Button>\r\n          </Box>\r\n        ) : null}\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AddNewList;\r\n\r\nAddNewList.prototype = {\r\n  onAddList: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport IntlMessages from '../../../../../../@crema/utility/IntlMessages';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {red} from '@material-ui/core/colors';\r\nimport {Fonts} from '../../../../../../shared/constants/AppEnums';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nconst CardCheckedList = props => {\r\n  const {\r\n    onAddNewCheckedItem,\r\n    checkedList,\r\n    onSetCheckedItemText,\r\n    onDeleteCheckedItem,\r\n  } = props;\r\n  const useStyles = makeStyles(theme => ({\r\n    btnRoot: {\r\n      backgroundColor: red[500],\r\n      color: theme.palette.primary.contrastText,\r\n      fontFamily: Fonts.BOLD,\r\n      textTransform: 'capitalize',\r\n      paddingLeft: 16,\r\n      paddingRight: 16,\r\n      '&:hover, &:focus': {\r\n        backgroundColor: red[800],\r\n        color: theme.palette.primary.contrastText,\r\n      },\r\n    },\r\n    checkboxRoot: {\r\n      marginRight: 8,\r\n    },\r\n    textFieldRoot: {\r\n      width: '100%',\r\n      '& .inputprops-root': {\r\n        width: '100%',\r\n        margin: 'auto',\r\n      },\r\n    },\r\n    avatarRoot: {\r\n      backgroundColor: red[500],\r\n      color: theme.palette.primary.contrastText,\r\n      cursor: 'pointer',\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <Box mb={8}>\r\n      <Box mb={4} display='flex' alignItems='center'>\r\n        <Box>\r\n          <Box component='h4'>\r\n            <IntlMessages id='scrumboard.checkedLists' />\r\n          </Box>\r\n        </Box>\r\n        <Box ml='auto' px='8'>\r\n          <Button\r\n            className={classes.btnRoot}\r\n            onClick={() => onAddNewCheckedItem()}>\r\n            <IntlMessages id='scrumboard.addNew' />\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n\r\n      {checkedList.map(checkedItem => {\r\n        return (\r\n          <Box display='flex' alignItems='center' key={checkedItem.id}>\r\n            <Box mb={4} flex={1} display='flex' alignItems='center'>\r\n              <Hidden xsDown>\r\n                {' '}\r\n                <Checkbox className={classes.checkboxRoot} />\r\n              </Hidden>\r\n              <TextField\r\n                className={classes.textFieldRoot}\r\n                variant='outlined'\r\n                InputProps={{\r\n                  className: 'inputprops-root',\r\n                }}\r\n                value={checkedItem.title}\r\n                onChange={e =>\r\n                  onSetCheckedItemText(e.target.value, checkedItem.id)\r\n                }\r\n              />\r\n            </Box>\r\n            <Box component='span' mb={4} ml={3}>\r\n              <Avatar\r\n                className={classes.avatarRoot}\r\n                onClick={() => onDeleteCheckedItem(checkedItem.id)}>\r\n                <DeleteIcon />\r\n              </Avatar>\r\n            </Box>\r\n          </Box>\r\n        );\r\n      })}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CardCheckedList;\r\n\r\nCardCheckedList.defaultProps = {\r\n  checkedList: [],\r\n};\r\n\r\nCardCheckedList.prototype = {\r\n  onAddNewCheckedItem: PropTypes.func,\r\n  checkedList: PropTypes.array,\r\n  onSetCheckedItemText: PropTypes.func,\r\n  onDeleteCheckedItem: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport IntlMessages from '../../../../../../@crema/utility/IntlMessages';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport {useDropzone} from 'react-dropzone';\r\nimport CardCheckedList from './CardCheckedList';\r\nimport PropTypes from 'prop-types';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {grey} from '@material-ui/core/colors';\r\nimport {Fonts} from '../../../../../../shared/constants/AppEnums';\r\n\r\nconst CardHeader = props => {\r\n  const {onClickDeleteIcon, onCloseAddCard, onAddAttachments} = props;\r\n  const {getRootProps, getInputProps} = useDropzone({\r\n    accept: 'image/*',\r\n    onDrop: acceptedFiles => {\r\n      const files = acceptedFiles.map(file => {\r\n        return {\r\n          id: Math.floor(Math.random() * 10000),\r\n          file,\r\n          preview: URL.createObjectURL(file),\r\n        };\r\n      });\r\n      onAddAttachments(files);\r\n    },\r\n  });\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    iconRoot: {\r\n      marginRight: 8,\r\n      color: grey[600],\r\n      cursor: 'pointer',\r\n    },\r\n    pointer: {\r\n      cursor: 'pointer',\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <Box\r\n      mx={-3}\r\n      mb={3}\r\n      display='flex'\r\n      alignItems='center'\r\n      justifyContent='space-between'>\r\n      <Box px={3} display='flex' alignItems='center'>\r\n        <Box {...getRootProps({className: 'dropzone'})}>\r\n          <input {...getInputProps()} />\r\n          <AttachFileIcon className={classes.iconRoot} />\r\n        </Box>\r\n        <Box>\r\n          <DeleteIcon\r\n            className={classes.iconRoot}\r\n            onClick={onClickDeleteIcon}\r\n          />\r\n        </Box>\r\n      </Box>\r\n\r\n      <Box component='h4' px={3} fontFamily={Fonts.BOLD}>\r\n        <IntlMessages id='scrumboard.board' />\r\n      </Box>\r\n\r\n      <Box px={3} textAlign='right' width='152'>\r\n        <CloseIcon\r\n          className={classes.pointer}\r\n          onClick={() => onCloseAddCard()}\r\n        />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CardHeader;\r\n\r\nCardCheckedList.prototype = {\r\n  onClickDeleteIcon: PropTypes.func,\r\n  onCloseAddCard: PropTypes.func,\r\n  onAddAttachments: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport IntlMessages from '../../../../../../@crema/utility/IntlMessages';\r\nimport moment from 'moment';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {Fonts} from '../../../../../../shared/constants/AppEnums';\r\n\r\nconst CardAttachments = props => {\r\n  const {attachments, onDeleteAttachment} = props;\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    overflowHidden: {\r\n      overflow: 'hidden',\r\n    },\r\n    febRoot: {\r\n      width: '2.5rem',\r\n      height: '2.5rem',\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles(props);\r\n  return (\r\n    <>\r\n      {attachments && attachments.length > 0 ? (\r\n        <>\r\n          <Box mb={{xs: 3, sm: 5}}>\r\n            <Box component='h4'>\r\n              <IntlMessages id='common.attachments' />\r\n            </Box>\r\n          </Box>\r\n\r\n          {attachments.map(attachment => {\r\n            const {file} = attachment;\r\n            return (\r\n              <Box key={attachment.id} display='flex' mb={3}>\r\n                <Box\r\n                  className={classes.overflowHidden}\r\n                  height={120}\r\n                  width={120}>\r\n                  <img src={attachment.preview} alt='attachment' />\r\n                </Box>\r\n\r\n                <Box px={{xs: 3, sm: 5}} py={{xs: 0, sm: 2}}>\r\n                  <Box color='primary.main' fontFamily={Fonts.BOLD}>\r\n                    {file.name}\r\n                  </Box>\r\n                  <Box my={1}>\r\n                    <Box component='span' mr={1}>\r\n                      {\r\n                        moment(file.lastModified)\r\n                          .format('ll')\r\n                          .split(',')[0]\r\n                      }\r\n                    </Box>\r\n                    <Box component='span' mr={1}>\r\n                      <IntlMessages id='common.at' />\r\n                    </Box>\r\n                    <Box component='span'>\r\n                      {moment(file.lastModified).format('LT')}\r\n                    </Box>\r\n                  </Box>\r\n                  <Fab\r\n                    color='secondary'\r\n                    aria-label='edit'\r\n                    mt={2}\r\n                    className={classes.febRoot}>\r\n                    <DeleteIcon\r\n                      onClick={() => onDeleteAttachment(attachment.id)}\r\n                    />\r\n                  </Fab>\r\n                </Box>\r\n              </Box>\r\n            );\r\n          })}\r\n        </>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CardAttachments;\r\n\r\nCardAttachments.defaultProps = {\r\n  attachments: [],\r\n};\r\n\r\nCardAttachments.prototype = {\r\n  attachments: PropTypes.array,\r\n  onDeleteAttachment: PropTypes.func,\r\n};\r\n","import React, {useState} from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport {useIntl} from 'react-intl';\r\nimport PropTypes from 'prop-types';\r\nimport CardCheckedList from './CardCheckedList';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {orange} from '@material-ui/core/colors';\r\nimport {Fonts} from '../../../../../../shared/constants/AppEnums';\r\nimport {TextField} from '@material-ui/core';\r\n\r\nconst CardComments = props => {\r\n  const {comments, onAddNewComment} = props;\r\n  const [comment, setComment] = useState('');\r\n\r\n  const onAddComment = e => {\r\n    if (e.keyCode === 13) {\r\n      onAddNewComment(comment);\r\n      setComment('');\r\n    }\r\n  };\r\n\r\n  const {messages} = useIntl();\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    avatarRoot: {\r\n      width: 50,\r\n      height: 50,\r\n      backgroundColor: orange[500],\r\n    },\r\n    textareaAutosizeRoot: {\r\n      width: '100%',\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <Box mb={{xs: 5, xl: 10}}>\r\n      <Box mb={5}>\r\n        {comments.map((item, index) => {\r\n          return (\r\n            <Box mb={5} key={index}>\r\n              <Box mb={4} display='flex' alignItems='center'>\r\n                {item.image ? (\r\n                  <Avatar src={item.image} className={classes.avatarRoot} />\r\n                ) : (\r\n                  <Avatar className={classes.avatarRoot}>\r\n                    {item.name.charAt(0).toUpperCase()}\r\n                  </Avatar>\r\n                )}\r\n                <Box ml={4}>\r\n                  <Box\r\n                    component='span'\r\n                    mb={1}\r\n                    display='block'\r\n                    color='primary.main'\r\n                    fontFamily={Fonts.BOLD}>\r\n                    {item.name}\r\n                  </Box>\r\n                  <Box\r\n                    component='span'\r\n                    color='grey.500'\r\n                    fontSize={14}\r\n                    display='block'>\r\n                    {item.date}\r\n                  </Box>\r\n                </Box>\r\n              </Box>\r\n              <Box component='p' ml={2} mb={0}>\r\n                {item.comment}\r\n              </Box>\r\n            </Box>\r\n          );\r\n        })}\r\n      </Box>\r\n\r\n      <TextField\r\n        multiline\r\n        onKeyDown={onAddComment}\r\n        value={comment}\r\n        onChange={e => setComment(e.target.value)}\r\n        className={classes.textareaAutosizeRoot}\r\n        rows='6'\r\n        variant='outlined'\r\n        placeholder={messages['common.pressEnter']}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CardComments;\r\n\r\nCardCheckedList.defaultProps = {\r\n  comments: [],\r\n};\r\n\r\nCardCheckedList.prototype = {\r\n  comments: PropTypes.array,\r\n  onAddNewComment: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport {KeyboardDatePicker} from '@material-ui/pickers';\r\nimport IntlMessages from '../../../../../../@crema/utility/IntlMessages';\r\nimport {Form, useField} from 'formik';\r\nimport GridContainer from '../../../../../../@crema/core/GridContainer';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport CardAttachments from './CardAttachments';\r\nimport CardCheckedList from './CardCheckedList';\r\nimport CardComments from './CardComments';\r\nimport Button from '@material-ui/core/Button';\r\nimport {useIntl} from 'react-intl';\r\nimport {useSelector} from 'react-redux';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {red} from '@material-ui/core/colors';\r\nimport {Fonts} from '../../../../../../shared/constants/AppEnums';\r\n\r\nconst MyTextField = props => {\r\n  const [field, meta] = useField(props);\r\n  const errorText = meta.error && meta.touched ? meta.error : '';\r\n  return (\r\n    <TextField\r\n      {...props}\r\n      {...field}\r\n      helperText={errorText}\r\n      error={!!errorText}\r\n    />\r\n  );\r\n};\r\n\r\nconst AddCardForm = props => {\r\n  const {\r\n    board,\r\n    list,\r\n    values,\r\n    setFieldValue,\r\n    checkedList,\r\n    setCheckedList,\r\n    comments,\r\n    setComments,\r\n    authUser,\r\n    attachments,\r\n    setAttachments,\r\n    selectedLabels,\r\n    setSelectedLabels,\r\n    selectedMembers,\r\n    setMembersList,\r\n    selectedCard,\r\n    isSubmitting,\r\n  } = props;\r\n\r\n  const {messages} = useIntl();\r\n\r\n  const labelList = useSelector(({scrumboardApp}) => scrumboardApp.labelList);\r\n\r\n  const memberList = useSelector(({scrumboardApp}) => scrumboardApp.memberList);\r\n\r\n  const onDeleteCheckedItem = id => {\r\n    const updatedList = checkedList.filter(item => item.id !== id);\r\n    setCheckedList(updatedList);\r\n  };\r\n\r\n  const onAddNewCheckedItem = () => {\r\n    const item = {\r\n      id: Math.floor(Math.random() * 1000),\r\n      title: '',\r\n    };\r\n    const updatedList = checkedList.concat(item);\r\n    setCheckedList(updatedList);\r\n  };\r\n\r\n  const onSetCheckedItemText = (title, id) => {\r\n    const updatedList = checkedList.map(item => {\r\n      if (item.id === id) {\r\n        item.title = title;\r\n        return item;\r\n      } else {\r\n        return item;\r\n      }\r\n    });\r\n    setCheckedList(updatedList);\r\n  };\r\n\r\n  const onAddNewComment = comment => {\r\n    setComments(\r\n      comments.concat({\r\n        comment: comment,\r\n        name: authUser.displayName ? authUser.displayName : 'User',\r\n        image: authUser.photoURL,\r\n        date: moment().format('ll'),\r\n      }),\r\n    );\r\n  };\r\n\r\n  const onDeleteAttachment = id => {\r\n    const updatedAttachments = attachments.filter(\r\n      attachment => attachment.id !== id,\r\n    );\r\n    setAttachments(updatedAttachments);\r\n  };\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    myTextFieldRoot: {\r\n      width: '100%',\r\n      marginBottom: 20,\r\n    },\r\n    fieldRoot: {\r\n      width: '100%',\r\n      marginBottom: 20,\r\n      backgroundColor: theme.palette.background.paper,\r\n      color: theme.palette.text.primary,\r\n    },\r\n    btnRoot: {\r\n      backgroundColor: red[600],\r\n      color: theme.palette.primary.contrastText,\r\n      fontFamily: Fonts.BOLD,\r\n      width: '12rem',\r\n      paddingLeft: 32,\r\n      paddingRight: 32,\r\n      paddingTop: 12,\r\n      paddingBottom: 12,\r\n      fontSize: 18,\r\n      textTransform: 'capitalize',\r\n      '&:hover, &:focus': {\r\n        backgroundColor: red[800],\r\n        color: theme.palette.primary.contrastText,\r\n      },\r\n    },\r\n    dividerRoot: {\r\n      marginBottom: 32,\r\n      marginLeft: -32,\r\n      marginRight: -32,\r\n    },\r\n    marginBottom12: {\r\n      marginBottom: 12,\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <Form className={classes.root} noValidate autoComplete='off'>\r\n      <Box\r\n        mb={5}\r\n        display='flex'\r\n        flexDirection={{xs: 'column', sm: 'row'}}\r\n        alignItems={{sm: 'center'}}>\r\n        <Box\r\n          mr={{sm: 2}}\r\n          mb={{xs: 3, sm: 0}}\r\n          fontFamily={Fonts.MEDIUM}\r\n          fontSize={{xs: 18, md: 20}}>\r\n          {board.name} > {list.name}\r\n        </Box>\r\n\r\n        <Box ml={{sm: 'auto'}}>\r\n          <KeyboardDatePicker\r\n            autoOk\r\n            format='YYYY/MM/DD'\r\n            variant='outlined'\r\n            inputVariant='outlined'\r\n            label={<IntlMessages id='common.date' />}\r\n            name='date'\r\n            value={values.date}\r\n            onChange={value => setFieldValue('date', value)}\r\n          />\r\n        </Box>\r\n      </Box>\r\n\r\n      <Box>\r\n        <MyTextField\r\n          className={classes.myTextFieldRoot}\r\n          variant='outlined'\r\n          label={<IntlMessages id='common.title' />}\r\n          name='title'\r\n        />\r\n\r\n        <MyTextField\r\n          name='desc'\r\n          multiline\r\n          className={classes.fieldRoot}\r\n          rows='6'\r\n          variant='outlined'\r\n          placeholder={messages['common.description']}\r\n        />\r\n\r\n        <GridContainer className={classes.marginBottom12}>\r\n          <Grid item xs={12} md={6}>\r\n            <Autocomplete\r\n              multiple\r\n              id='tags-outlined'\r\n              options={labelList}\r\n              getOptionLabel={option => option.name}\r\n              value={selectedLabels}\r\n              onChange={(event, value) => setSelectedLabels(value)}\r\n              filterSelectedOptions\r\n              renderInput={params => (\r\n                <TextField\r\n                  {...params}\r\n                  variant='outlined'\r\n                  label={<IntlMessages id='common.label' />}\r\n                  fullWidth\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6}>\r\n            <Autocomplete\r\n              multiple\r\n              id='tags-outlined'\r\n              options={memberList}\r\n              getOptionLabel={option => option.name}\r\n              value={selectedMembers}\r\n              onChange={(event, value) => setMembersList(value)}\r\n              renderOption={option => (\r\n                <React.Fragment>\r\n                  {option.image ? (\r\n                    <Avatar src={option.image} />\r\n                  ) : (\r\n                    <Avatar>{option.name.toUpperCase()}</Avatar>\r\n                  )}\r\n                  <Box ml={4}>{option.name}</Box>\r\n                </React.Fragment>\r\n              )}\r\n              filterSelectedOptions\r\n              renderInput={params => (\r\n                <TextField\r\n                  {...params}\r\n                  variant='outlined'\r\n                  label={<IntlMessages id='common.members' />}\r\n                  fullWidth\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n        </GridContainer>\r\n\r\n        <CardAttachments\r\n          attachments={attachments}\r\n          onDeleteAttachment={onDeleteAttachment}\r\n        />\r\n\r\n        {selectedCard ? (\r\n          <CardCheckedList\r\n            onAddNewCheckedItem={onAddNewCheckedItem}\r\n            checkedList={checkedList}\r\n            onDeleteCheckedItem={onDeleteCheckedItem}\r\n            onSetCheckedItemText={onSetCheckedItemText}\r\n          />\r\n        ) : null}\r\n\r\n        <Divider className={classes.dividerRoot} />\r\n\r\n        <CardComments comments={comments} onAddNewComment={onAddNewComment} />\r\n\r\n        <Box my={4} textAlign='center'>\r\n          <Button\r\n            className={classes.btnRoot}\r\n            type='submit'\r\n            disabled={isSubmitting}>\r\n            <IntlMessages id='common.done' />\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default AddCardForm;\r\n\r\nAddCardForm.defaultProps = {\r\n  comments: [],\r\n  attachments: [],\r\n  selectedLabels: [],\r\n  selectedMembers: [],\r\n  isSubmitting: false,\r\n};\r\n\r\nAddCardForm.prototype = {\r\n  board: PropTypes.object.isRequired,\r\n  list: PropTypes.object.isRequired,\r\n  values: PropTypes.object.isRequired,\r\n  setFieldValue: PropTypes.func,\r\n  checkedList: PropTypes.array.isRequired,\r\n  setCheckedList: PropTypes.func,\r\n  comments: PropTypes.array,\r\n  setComments: PropTypes.func,\r\n  authUser: PropTypes.object.isRequired,\r\n  attachments: PropTypes.array,\r\n  setAttachments: PropTypes.func,\r\n  selectedLabels: PropTypes.array,\r\n  setSelectedLabels: PropTypes.func,\r\n  selectedMembers: PropTypes.array,\r\n  setMembersList: PropTypes.func,\r\n  selectedCard: PropTypes.object.isRequired,\r\n  isSubmitting: PropTypes.bool,\r\n};\r\n","import React, {useState} from 'react';\r\nimport {Formik} from 'formik';\r\nimport * as yup from 'yup';\r\nimport {useDispatch} from 'react-redux';\r\nimport {Scrollbar} from '../../../../../../@crema';\r\nimport {\r\n  onAddNewCard,\r\n  onDeleteSelectedCard,\r\n  onEditCardDetails,\r\n} from '../../../../../../redux/actions/ScrumboardApp';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport ConfirmationDialog from '../../../../../../@crema/core/ConfirmationDialog';\r\nimport {useAuthUser} from '../../../../../../@crema/utility/AppHooks';\r\nimport IntlMessages from '../../../../../../@crema/utility/IntlMessages';\r\nimport Box from '@material-ui/core/Box';\r\nimport CardHeader from './CardHeader';\r\nimport PropTypes from 'prop-types';\r\nimport AddCardForm from './AddCardForm';\r\nimport {makeStyles} from '@material-ui/core';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction='down' ref={ref} {...props} />;\r\n});\r\n\r\nconst validationSchema = yup.object({\r\n  title: yup.string().required(<IntlMessages id='validation.titleRequired' />),\r\n});\r\n\r\nconst AddCard = props => {\r\n  const {isAddCardOpen, onCloseAddCard, board, list, selectedCard} = props;\r\n  const dispatch = useDispatch();\r\n\r\n  const authUser = useAuthUser();\r\n\r\n  const [checkedList, setCheckedList] = useState(() =>\r\n    selectedCard ? selectedCard.checkedList : [],\r\n  );\r\n\r\n  const [isDeleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n\r\n  const [selectedMembers, setMembersList] = useState(() =>\r\n    selectedCard ? selectedCard.members : [],\r\n  );\r\n\r\n  const [selectedLabels, setSelectedLabels] = useState(() =>\r\n    selectedCard ? selectedCard.label : [],\r\n  );\r\n\r\n  const [comments, setComments] = useState(() =>\r\n    selectedCard ? selectedCard.comments : [],\r\n  );\r\n\r\n  const [attachments, setAttachments] = useState(() =>\r\n    selectedCard ? selectedCard.attachments : [],\r\n  );\r\n\r\n  const onAddAttachments = files => {\r\n    setAttachments([...attachments, ...files]);\r\n  };\r\n\r\n  const onDeleteCard = () => {\r\n    const boardId = board.id;\r\n    const listId = list.id;\r\n    const cardId = selectedCard.id;\r\n    dispatch(onDeleteSelectedCard(boardId, listId, cardId));\r\n    setDeleteDialogOpen(false);\r\n    onCloseAddCard();\r\n  };\r\n\r\n  const onClickDeleteIcon = () => {\r\n    if (selectedCard) {\r\n      setDeleteDialogOpen(true);\r\n    } else {\r\n      onCloseAddCard();\r\n    }\r\n  };\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    dialogBox: {\r\n      position: 'relative',\r\n      '& .MuiDialog-paperWidthSm': {\r\n        maxWidth: 900,\r\n        width: '100%',\r\n      },\r\n    },\r\n    scrollRoot: {\r\n      height: 595,\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <Dialog\r\n      open={isAddCardOpen}\r\n      onClose={() => onCloseAddCard(false)}\r\n      aria-labelledby='simple-modal-title'\r\n      TransitionComponent={Transition}\r\n      aria-describedby='simple-modal-description'\r\n      className={classes.dialogBox}>\r\n      <Scrollbar className={classes.scrollRoot}>\r\n        <Formik\r\n          validateOnChange={true}\r\n          initialValues={{\r\n            title: selectedCard ? selectedCard.title : '',\r\n            desc: selectedCard && selectedCard.desc ? selectedCard.desc : '',\r\n            label: selectedCard && selectedCard.label ? selectedCard.label : [],\r\n            members:\r\n              selectedCard && selectedCard.members ? selectedCard.members : [],\r\n            date: selectedCard && selectedCard.date ? selectedCard.date : null,\r\n          }}\r\n          validationSchema={validationSchema}\r\n          onSubmit={(data, {setSubmitting, resetForm}) => {\r\n            setSubmitting(true);\r\n            if (selectedCard) {\r\n              const editedCard = {\r\n                ...selectedCard,\r\n                comments: comments,\r\n                ...data,\r\n                attachments: attachments,\r\n                members: selectedMembers,\r\n                label: selectedLabels,\r\n                checkedList: checkedList.filter(item => item.title !== ''),\r\n              };\r\n              dispatch(onEditCardDetails(board, list, editedCard));\r\n            } else {\r\n              const newCard = {\r\n                id: Math.floor(Math.random() * 1000),\r\n                attachments: attachments,\r\n                checkedList: [],\r\n                comments: comments,\r\n                ...data,\r\n                label: selectedLabels,\r\n                members: selectedMembers,\r\n              };\r\n              dispatch(onAddNewCard(board, list, newCard));\r\n            }\r\n            onCloseAddCard();\r\n            resetForm();\r\n            setSubmitting(false);\r\n          }}>\r\n          {({values, isSubmitting, setFieldValue}) => (\r\n            <Box py={5} pt={{xs: 8, xl: 8}} px={8}>\r\n              <CardHeader\r\n                onAddAttachments={onAddAttachments}\r\n                onClickDeleteIcon={onClickDeleteIcon}\r\n                onCloseAddCard={onCloseAddCard}\r\n              />\r\n\r\n              <AddCardForm\r\n                values={values}\r\n                isSubmitting={isSubmitting}\r\n                setFieldValue={setFieldValue}\r\n                board={board}\r\n                list={list}\r\n                checkedList={checkedList}\r\n                setCheckedList={setCheckedList}\r\n                comments={comments}\r\n                setComments={setComments}\r\n                authUser={authUser}\r\n                attachments={attachments}\r\n                setAttachments={setAttachments}\r\n                selectedLabels={selectedLabels}\r\n                setSelectedLabels={setSelectedLabels}\r\n                selectedMembers={selectedMembers}\r\n                setMembersList={setMembersList}\r\n                selectedCard={selectedCard}\r\n              />\r\n            </Box>\r\n          )}\r\n        </Formik>\r\n      </Scrollbar>\r\n\r\n      {isDeleteDialogOpen ? (\r\n        <ConfirmationDialog\r\n          open={isDeleteDialogOpen}\r\n          onDeny={setDeleteDialogOpen}\r\n          onConfirm={onDeleteCard}\r\n          title={<IntlMessages id='scrumboard.deleteCard' />}\r\n          dialogTitle={<IntlMessages id='common.deleteItem' />}\r\n        />\r\n      ) : null}\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AddCard;\r\n\r\nAddCard.defaultProps = {\r\n  board: null,\r\n  list: null,\r\n  selectedCard: null,\r\n};\r\n\r\nAddCard.prototype = {\r\n  isAddCardOpen: PropTypes.bool.isRequired,\r\n  onCloseAddCard: PropTypes.func.isRequired,\r\n  board: PropTypes.object,\r\n  list: PropTypes.object,\r\n  selectedCard: PropTypes.object,\r\n};\r\n","import {\r\n  ADD_BOARD_LIST,\r\n  ADD_LIST_CARD,\r\n  ADD_NEW_BOARD,\r\n  DELETE_BOARD,\r\n  DELETE_LIST,\r\n  DELETE_LIST_CARD,\r\n  EDIT_BOARD_DETAIL,\r\n  EDIT_BOARD_LIST,\r\n  EDIT_LIST_CARD,\r\n  FETCH_ERROR,\r\n  FETCH_START,\r\n  FETCH_SUCCESS,\r\n  GET_BOARD_DETAIL,\r\n  GET_BOARDS,\r\n  GET_MEMBER_LIST,\r\n  GET_SCRUM_LABEL_LIST,\r\n  SHOW_MESSAGE,\r\n} from '../../shared/constants/ActionTypes';\r\nimport Api from '../../@crema/services/ApiConfig';\r\nimport IntlMessages from '../../@crema/utility/IntlMessages';\r\nimport React from 'react';\r\n\r\nexport const onGetBoardList = () => {\r\n  return dispatch => {\r\n    dispatch({type: FETCH_START});\r\n    Api.get('/api/scrumboard/board/list')\r\n      .then(data => {\r\n        if (data.status === 200) {\r\n          dispatch({type: FETCH_SUCCESS});\r\n          dispatch({type: GET_BOARDS, payload: data.data});\r\n        } else {\r\n          dispatch({\r\n            type: FETCH_ERROR,\r\n            payload: <IntlMessages id='message.somethingWentWrong' />,\r\n          });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        dispatch({type: FETCH_ERROR, payload: error.message});\r\n      });\r\n  };\r\n};\r\n\r\nexport const onGetScrumLabelList = () => {\r\n  return dispatch => {\r\n    dispatch({type: FETCH_START});\r\n    Api.get('/api/scrumboard/label/list')\r\n      .then(data => {\r\n        if (data.status === 200) {\r\n          dispatch({type: FETCH_SUCCESS});\r\n          dispatch({type: GET_SCRUM_LABEL_LIST, payload: data.data});\r\n        } else {\r\n          dispatch({\r\n            type: FETCH_ERROR,\r\n            payload: <IntlMessages id='message.somethingWentWrong' />,\r\n          });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        dispatch({type: FETCH_ERROR, payload: error.message});\r\n      });\r\n  };\r\n};\r\n\r\nexport const onGetMemberList = () => {\r\n  return dispatch => {\r\n    dispatch({type: FETCH_START});\r\n    Api.get('/api/scrumboard/member/list')\r\n      .then(data => {\r\n        if (data.status === 200) {\r\n          dispatch({type: FETCH_SUCCESS});\r\n          dispatch({type: GET_MEMBER_LIST, payload: data.data});\r\n        } else {\r\n          dispatch({\r\n            type: FETCH_ERROR,\r\n            payload: <IntlMessages id='message.somethingWentWrong' />,\r\n          });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        dispatch({type: FETCH_ERROR, payload: error.message});\r\n      });\r\n  };\r\n};\r\n\r\nexport const onEditBoardDetail = board => {\r\n  return dispatch => {\r\n    dispatch({type: FETCH_START});\r\n    Api.put('/api/scrumboard/edit/board', {board})\r\n      .then(data => {\r\n        if (data.status === 200) {\r\n          dispatch({type: FETCH_SUCCESS});\r\n          dispatch({type: EDIT_BOARD_DETAIL, payload: data.data});\r\n          dispatch({\r\n            type: SHOW_MESSAGE,\r\n            payload: <IntlMessages id='scrumBoard.boardEdited' />,\r\n          });\r\n        } else {\r\n          dispatch({\r\n            type: FETCH_ERROR,\r\n            payload: <IntlMessages id='message.somethingWentWrong' />,\r\n          });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        dispatch({type: FETCH_ERROR, payload: error.message});\r\n      });\r\n  };\r\n};\r\n\r\nexport const onGetBoardDetail = id => {\r\n  return dispatch => {\r\n    dispatch({type: FETCH_START});\r\n    Api.get('/api/scrumboard/board/', {\r\n      params: {\r\n        id: id,\r\n      },\r\n    })\r\n      .then(data => {\r\n        if (data.status === 200) {\r\n          dispatch({type: FETCH_SUCCESS});\r\n          dispatch({type: GET_BOARD_DETAIL, payload: data.data});\r\n        } else {\r\n          dispatch({\r\n            type: FETCH_ERROR,\r\n            payload: <IntlMessages id='message.somethingWentWrong' />,\r\n          });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        dispatch({type: FETCH_ERROR, payload: error.message});\r\n      });\r\n  };\r\n};\r\n\r\nexport const onAddNewBoard = board => {\r\n  return dispatch => {\r\n    dispatch({type: FETCH_START});\r\n    Api.post('/api/scrumboard/add/board', {board})\r\n      .then(data => {\r\n        if (data.status === 200) {\r\n          dispatch({type: FETCH_SUCCESS});\r\n          dispatch({type: ADD_NEW_BOARD, payload: data.data});\r\n          dispatch({\r\n            type: SHOW_MESSAGE,\r\n            payload: <IntlMessages id='scrumBoard.boardAdded' />,\r\n          });\r\n        } else {\r\n          dispatch({\r\n            type: FETCH_ERROR,\r\n            payload: <IntlMessages id='message.somethingWentWrong' />,\r\n          });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        dispatch({type: FETCH_ERROR, payload: error.message});\r\n      });\r\n  };\r\n};\r\n\r\nexport const onAddNewList = (boardId, list) => {\r\n  return dispatch => {\r\n    dispatch({type: FETCH_START});\r\n    Api.post('/api/scrumboard/add/list', {boardId, list})\r\n      .then(data => {\r\n        if (data.status === 200) {\r\n          dispatch({type: FETCH_SUCCESS});\r\n          dispatch({type: ADD_BOARD_LIST, payload: data.data});\r\n          dispatch({\r\n            type: SHOW_MESSAGE,\r\n            payload: <IntlMessages id='scrumBoard.listAdded' />,\r\n          });\r\n        } else {\r\n          dispatch({\r\n            type: FETCH_ERROR,\r\n            payload: <IntlMessages id='message.somethingWentWrong' />,\r\n          });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        dispatch({type: FETCH_ERROR, payload: error.message});\r\n      });\r\n  };\r\n};\r\n\r\nexport const onEditBoardList = (boardId, list) => {\r\n  return dispatch => {\r\n    dispatch({type: FETCH_START});\r\n    Api.put('/api/scrumboard/edit/list', {boardId, list})\r\n      .then(data => {\r\n        if (data.status === 200) {\r\n          dispatch({type: FETCH_SUCCESS});\r\n          dispatch({type: EDIT_BOARD_LIST, payload: data.data});\r\n          dispatch({\r\n            type: SHOW_MESSAGE,\r\n            payload: <IntlMessages id='scrumBoard.listEdited' />,\r\n          });\r\n        } else {\r\n          dispatch({\r\n            type: FETCH_ERROR,\r\n            payload: <IntlMessages id='message.somethingWentWrong' />,\r\n          });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        dispatch({type: FETCH_ERROR, payload: error.message});\r\n      });\r\n  };\r\n};\r\n\r\nexport const onAddNewCard = (board, list, card) => {\r\n  return dispatch => {\r\n    dispatch({type: FETCH_START});\r\n    Api.post('/api/scrumboard/add/card', {board, list, card})\r\n      .then(data => {\r\n        if (data.status === 200) {\r\n          dispatch({type: FETCH_SUCCESS});\r\n          dispatch({type: ADD_LIST_CARD, payload: data.data});\r\n          dispatch({\r\n            type: SHOW_MESSAGE,\r\n            payload: <IntlMessages id='scrumBoard.cardAdded' />,\r\n          });\r\n        } else {\r\n          dispatch({\r\n            type: FETCH_ERROR,\r\n            payload: <IntlMessages id='message.somethingWentWrong' />,\r\n          });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        dispatch({type: FETCH_ERROR, payload: error.message});\r\n      });\r\n  };\r\n};\r\n\r\nexport const onEditCardDetails = (board, list, card) => {\r\n  return dispatch => {\r\n    dispatch({type: FETCH_START});\r\n    Api.put('/api/scrumboard/edit/card', {board, list, card})\r\n      .then(data => {\r\n        if (data.status === 200) {\r\n          dispatch({type: FETCH_SUCCESS});\r\n          dispatch({type: EDIT_LIST_CARD, payload: data.data});\r\n          dispatch({\r\n            type: SHOW_MESSAGE,\r\n            payload: <IntlMessages id='scrumBoard.cardEdited' />,\r\n          });\r\n        } else {\r\n          dispatch({\r\n            type: FETCH_ERROR,\r\n            payload: <IntlMessages id='message.somethingWentWrong' />,\r\n          });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        dispatch({type: FETCH_ERROR, payload: error.message});\r\n      });\r\n  };\r\n};\r\n\r\nexport const onDeleteSelectedCard = (boardId, listId, cardId) => {\r\n  return dispatch => {\r\n    dispatch({type: FETCH_START});\r\n    Api.post('/api/scrumboard/delete/card', {boardId, listId, cardId})\r\n      .then(data => {\r\n        if (data.status === 200) {\r\n          dispatch({type: FETCH_SUCCESS});\r\n          dispatch({type: DELETE_LIST_CARD, payload: data.data});\r\n          dispatch({\r\n            type: SHOW_MESSAGE,\r\n            payload: <IntlMessages id='scrumBoard.cardDeleted' />,\r\n          });\r\n        } else {\r\n          dispatch({\r\n            type: FETCH_ERROR,\r\n            payload: <IntlMessages id='message.somethingWentWrong' />,\r\n          });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        dispatch({type: FETCH_ERROR, payload: error.message});\r\n      });\r\n  };\r\n};\r\n\r\nexport const onDeleteSelectedBoard = boardId => {\r\n  return dispatch => {\r\n    dispatch({type: FETCH_START});\r\n    Api.post('/api/scrumboard/delete/board', {boardId})\r\n      .then(data => {\r\n        if (data.status === 200) {\r\n          dispatch({type: FETCH_SUCCESS});\r\n          dispatch({type: DELETE_BOARD, payload: data.data});\r\n        } else {\r\n          dispatch({\r\n            type: FETCH_ERROR,\r\n            payload: <IntlMessages id='message.somethingWentWrong' />,\r\n          });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        dispatch({type: FETCH_ERROR, payload: error.message});\r\n      });\r\n  };\r\n};\r\n\r\nexport const onDeleteSelectedList = (boardId, listId) => {\r\n  return dispatch => {\r\n    dispatch({type: FETCH_START});\r\n    Api.post('/api/scrumboard/delete/list', {boardId, listId})\r\n      .then(data => {\r\n        if (data.status === 200) {\r\n          dispatch({type: FETCH_SUCCESS});\r\n          dispatch({type: DELETE_LIST, payload: data.data});\r\n          dispatch({\r\n            type: SHOW_MESSAGE,\r\n            payload: <IntlMessages id='scrumBoard.listDeleted' />,\r\n          });\r\n        } else {\r\n          dispatch({\r\n            type: FETCH_ERROR,\r\n            payload: <IntlMessages id='message.somethingWentWrong' />,\r\n          });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        dispatch({type: FETCH_ERROR, payload: error.message});\r\n      });\r\n  };\r\n};\r\n\r\nexport const onNullifyBoardDetail = () => {\r\n  return {\r\n    type: GET_BOARD_DETAIL,\r\n    payload: null,\r\n  };\r\n};\r\n","import React, {useState} from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport {\r\n  onDeleteSelectedList,\r\n  onEditBoardList,\r\n} from '../../../../../redux/actions/ScrumboardApp';\r\nimport {useDispatch} from 'react-redux';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport ConfirmationDialog from '../../../../../@crema/core/ConfirmationDialog';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport IntlMessages from '../../../../../@crema/utility/IntlMessages';\r\nimport Box from '@material-ui/core/Box';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {Fonts} from '../../../../../shared/constants/AppEnums';\r\n\r\nconst ListHeader = props => {\r\n  const {list, boardId} = props;\r\n  const dispatch = useDispatch();\r\n\r\n  const [isEditListName, setEditListName] = useState(false);\r\n\r\n  const [editedListName, setEditedListName] = useState('');\r\n\r\n  const [isDeleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n\r\n  const onDeleteBoardList = () => {\r\n    dispatch(onDeleteSelectedList(boardId, list.id));\r\n    setDeleteDialogOpen(false);\r\n  };\r\n\r\n  const onEditButtonClick = () => {\r\n    setEditedListName(list.name);\r\n    setEditListName(!isEditListName);\r\n  };\r\n\r\n  const onEditListName = () => {\r\n    if (editedListName !== '') {\r\n      const editedList = {...list, name: editedListName};\r\n      dispatch(onEditBoardList(boardId, editedList));\r\n      setEditListName(false);\r\n    }\r\n  };\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      paddingTop: 16,\r\n      paddingBottom: 16,\r\n      paddingLeft: 24,\r\n      paddingRight: 24,\r\n      marginBottom: 8,\r\n      minHeight: isEditListName ? '5.5rem' : '3.5rem',\r\n    },\r\n    pointer: {\r\n      cursor: 'pointer',\r\n    },\r\n    marginLeft12: {\r\n      marginLeft: 12,\r\n    },\r\n    textFieldRoot: {\r\n      marginTop: 0,\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <Box display='flex' alignItems='center'>\r\n        {!isEditListName ? (\r\n          <>\r\n            <Box componet='h5' fontFamily={Fonts.BOLD}>\r\n              {list.name}\r\n            </Box>\r\n            <Box ml='auto' display='flex' alignItems='center'>\r\n              <EditIcon\r\n                className={clsx(classes.marginLeft12, classes.pointer)}\r\n                onClick={onEditButtonClick}\r\n              />\r\n              <DeleteIcon\r\n                className={clsx(classes.marginLeft12, classes.pointer)}\r\n                onClick={() => setDeleteDialogOpen(true)}\r\n              />\r\n            </Box>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Box mr={3}>\r\n              <TextField\r\n                fullWidth\r\n                className={classes.textFieldRoot}\r\n                margin='normal'\r\n                label={<IntlMessages id='scrumboard.listTitle' />}\r\n                value={editedListName}\r\n                onChange={event => setEditedListName(event.target.value)}\r\n              />\r\n            </Box>\r\n            <Box ml='auto' display='flex' alignItems='center'>\r\n              <CheckIcon className={classes.pointer} onClick={onEditListName} />\r\n              <CloseIcon\r\n                className={clsx(classes.marginLeft12, classes.pointer)}\r\n                onClick={() => setEditListName(false)}\r\n              />\r\n            </Box>\r\n          </>\r\n        )}\r\n      </Box>\r\n\r\n      {isDeleteDialogOpen ? (\r\n        <ConfirmationDialog\r\n          open={isDeleteDialogOpen}\r\n          onDeny={setDeleteDialogOpen}\r\n          onConfirm={onDeleteBoardList}\r\n          title={<IntlMessages id='scrumboard.deleteMessage' />}\r\n          dialogTitle={<IntlMessages id='common.deleteItem' />}\r\n        />\r\n      ) : null}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ListHeader;\r\n\r\nListHeader.prototype = {\r\n  list: PropTypes.object.isRequired,\r\n  boardId: PropTypes.number.isRequired,\r\n};\r\n","import React from 'react';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport {Box} from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst Members = props => {\r\n  const {members} = props;\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    avatarRroot: {\r\n      width: 35,\r\n      height: 35,\r\n      marginRight: 8,\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles(props);\r\n  return (\r\n    <Box display='flex' alignItems='center'>\r\n      {members.map(member => {\r\n        return (\r\n          <Tooltip title={member.name} key={member.id}>\r\n            {member.image ? (\r\n              <Avatar\r\n                className={classes.avatarRroot}\r\n                src={member.image}\r\n                alt='created'\r\n              />\r\n            ) : (\r\n              <Avatar className={classes.avatarRroot}>\r\n                {member.name[0].toUpperCase()}\r\n              </Avatar>\r\n            )}\r\n          </Tooltip>\r\n        );\r\n      })}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Members;\r\n\r\nMembers.prototype = {\r\n  members: PropTypes.array.isRequired,\r\n};\r\n","import React from 'react';\r\nimport {Box} from '@material-ui/core';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Labels = ({labels}) => {\r\n  return (\r\n    <Box m={4} mx={-1} display='flex' alignItems='center'>\r\n      {labels.map(label => {\r\n        return (\r\n          <Tooltip title={label.name} placement='top' key={label.id}>\r\n            <Box\r\n              height={{xs: 4, sm: 6}}\r\n              width={32}\r\n              mx={1}\r\n              borderRadius={20}\r\n              key={label.id}\r\n              bgcolor={label.color}\r\n            />\r\n          </Tooltip>\r\n        );\r\n      })}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Labels;\r\n\r\nLabels.prototype = {\r\n  labels: PropTypes.array.isRequired,\r\n};\r\n","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport ChatBubbleIcon from '@material-ui/icons/ChatBubble';\r\nimport moment from 'moment';\r\nimport {Box} from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport Members from './Members';\r\nimport Labels from './Labels';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {Fonts} from '../../../../../../shared/constants/AppEnums';\r\n\r\nconst CardDetail = props => {\r\n  const {card, onEditCardDetail, list} = props;\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      paddingTop: 16,\r\n      paddingBottom: 16,\r\n      paddingLeft: 24,\r\n      paddingRight: 24,\r\n      marginBottom: 8,\r\n      cursor: 'pointer',\r\n    },\r\n    pointer: {\r\n      cursor: 'pointer',\r\n    },\r\n    attachFileIconRoot: {\r\n      marginLeft: 8,\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles(props);\r\n  return (\r\n    <Card className={classes.root} onClick={() => onEditCardDetail(card, list)}>\r\n      <Box mb={3} display='flex' alignItems='center'>\r\n        <Box mr={2} fontFamily={Fonts.MEDIUM}>\r\n          {card.title}\r\n        </Box>\r\n        {card.attachments && card.attachments.length > 0 ? (\r\n          <Box ml='auto' display='flex' alignItems='center'>\r\n            <Box component='span' fontFamily={Fonts.BOLD}>\r\n              {card.attachments.length}\r\n            </Box>\r\n            <AttachFileIcon className={classes.attachFileIconRoot} />\r\n          </Box>\r\n        ) : null}\r\n      </Box>\r\n      {card.label.length > 0 ? <Labels labels={card.label} /> : null}\r\n\r\n      <Box display='flex' alignItems='center'>\r\n        {card.members.length > 0 ? <Members members={card.members} /> : null}\r\n\r\n        <Box ml={3} mr='auto' color='grey.500'>\r\n          {card.date\r\n            ? moment(card.date)\r\n                .format('ll')\r\n                .split(',')[0]\r\n            : null}\r\n        </Box>\r\n        {card.comments.length > 0 ? (\r\n          <Box ml={2} display='flex' alignItems='center' color='grey.500'>\r\n            <Box component='span' mr={2} fontFamily={Fonts.BOLD}>\r\n              {card.comments.length}\r\n            </Box>\r\n            <ChatBubbleIcon />\r\n          </Box>\r\n        ) : null}\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CardDetail;\r\n\r\nCardDetail.defaultProps = {\r\n  list: null,\r\n};\r\n\r\nCardDetail.prototype = {\r\n  card: PropTypes.object.isRequired,\r\n  onEditCardDetail: PropTypes.func,\r\n  list: PropTypes.object,\r\n};\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport IntlMessages from '../../../../../@crema/utility/IntlMessages';\r\nimport Card from '@material-ui/core/Card';\r\nimport PropTypes from 'prop-types';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport {grey} from '@material-ui/core/colors';\r\nimport {Fonts} from '../../../../../shared/constants/AppEnums';\r\n\r\nconst AddCardButton = props => {\r\n  const {onClickAddCard, list} = props;\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    pointer: {\r\n      cursor: 'pointer',\r\n    },\r\n    minHeight72: {\r\n      minHeight: 72,\r\n    },\r\n    avatarRoot: {\r\n      backgroundColor: grey[100],\r\n      border: `1px dashed ${grey[400]}`,\r\n    },\r\n    addIconRoot: {\r\n      fontFamily: Fonts.BOLD,\r\n      color: grey[500],\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <Box py={4} px={6} mt={2} clone>\r\n      <Card\r\n        className={clsx(classes.minHeight72, classes.pointer)}\r\n        onClick={() => onClickAddCard(list)}>\r\n        <Box display='flex' alignItems='center'>\r\n          <Avatar className={classes.avatarRoot}>\r\n            <AddIcon className={classes.addIconRoot} />\r\n          </Avatar>\r\n          <Box ml={5} fontFamily={Fonts.BOLD}>\r\n            <IntlMessages id='scrumboard.addACard' />\r\n          </Box>\r\n        </Box>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AddCardButton;\r\n\r\nAddCardButton.prototype = {\r\n  onClickAddCard: PropTypes.func,\r\n  list: PropTypes.object.isRequired,\r\n};\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport ListHeader from './ListHeader';\r\nimport CardDetail from './CardDetail';\r\nimport Scrollbar from '../../../../../@crema/core/Scrollbar';\r\nimport AddCardButton from './AddCardButton';\r\nimport PropTypes from 'prop-types';\r\nimport {grey} from '@material-ui/core/colors';\r\n\r\nconst List = ({list, onEditCardDetail, onClickAddCard, boardId}) => {\r\n  return (\r\n    <Box\r\n      p={2}\r\n      key={list.id}\r\n      display='flex'\r\n      flexDirection='column'\r\n      bgcolor={grey[300]}\r\n      className='scrum-col'>\r\n      <ListHeader list={list} boardId={boardId} />\r\n\r\n      <Scrollbar className='scroll-scrum-item'>\r\n        {list.cards && list.cards.length > 0 ? (\r\n          <>\r\n            {list.cards.map(card => {\r\n              return (\r\n                <CardDetail\r\n                  key={card.id}\r\n                  card={card}\r\n                  onEditCardDetail={onEditCardDetail}\r\n                  list={list}\r\n                />\r\n              );\r\n            })}\r\n          </>\r\n        ) : null}\r\n      </Scrollbar>\r\n\r\n      <AddCardButton onClickAddCard={onClickAddCard} list={list} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default List;\r\n\r\nList.prototype = {\r\n  onEditCardDetail: PropTypes.func,\r\n  list: PropTypes.object.isRequired,\r\n  onClickAddCard: PropTypes.func,\r\n  boardId: PropTypes.number.isRequired,\r\n};\r\n","import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {\r\n  onAddNewList,\r\n  onGetBoardDetail,\r\n  onNullifyBoardDetail,\r\n} from '../../../../redux/actions/ScrumboardApp';\r\nimport {useHistory, useLocation} from 'react-router-dom';\r\nimport AddNewList from './AddNewList';\r\nimport {Scrollbar} from '@crema';\r\nimport Box from '@material-ui/core/Box';\r\nimport AddCard from './List/AddCard';\r\nimport List from './List';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {grey} from '@material-ui/core/colors';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\n\r\nconst BoardDetail = props => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const boardDetail = useSelector(\r\n    ({scrumboardApp}) => scrumboardApp.boardDetail,\r\n  );\r\n  const {pathname} = useLocation();\r\n\r\n  useEffect(() => {\r\n    const path = pathname.split('/');\r\n    const id = path[path.length - 1];\r\n    dispatch(onGetBoardDetail(id));\r\n    return () => {\r\n      dispatch(onNullifyBoardDetail());\r\n    };\r\n  }, [dispatch, pathname]);\r\n\r\n  const [list, setList] = useState(null);\r\n\r\n  const [isAddCardOpen, setAddCardOpen] = useState(false);\r\n\r\n  const [selectedCard, setSelectedCard] = useState(null);\r\n\r\n  const onClickAddCard = list => {\r\n    setList(list);\r\n    setSelectedCard(null);\r\n    setAddCardOpen(true);\r\n  };\r\n\r\n  const onCloseAddCard = () => {\r\n    setAddCardOpen(false);\r\n  };\r\n\r\n  const onAddList = name => {\r\n    dispatch(onAddNewList(boardDetail.id, {name}));\r\n  };\r\n\r\n  const onEditCardDetail = (card, list) => {\r\n    setSelectedCard(card);\r\n    setList(list);\r\n    setAddCardOpen(true);\r\n  };\r\n\r\n  const onGoToBoardList = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    pointer: {\r\n      cursor: 'pointer',\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <Box flex={1} display='flex' flexDirection='column'>\r\n      {boardDetail ? (\r\n        <>\r\n          <Box mb={{xs: 2, lg: 4, xl: 6}} display='flex'>\r\n            <Box\r\n              component='h2'\r\n              color='text.primary'\r\n              fontFamily={Fonts.BOLD}\r\n              fontSize={{xs: 18, sm: 24, xl: 28}}>\r\n              <Box\r\n                mr={2}\r\n                component='span'\r\n                color='primary.main'\r\n                className={classes.pointer}\r\n                onClick={onGoToBoardList}>\r\n                Scrum Board\r\n              </Box>\r\n              > {boardDetail.name}\r\n            </Box>\r\n          </Box>\r\n          <Box className='scrum-relative'>\r\n            <Scrollbar className='scrum-absolute'>\r\n              <Box className='scrum-row'>\r\n                {boardDetail.list &&\r\n                  boardDetail.list.length > 0 &&\r\n                  boardDetail.list.map(list => {\r\n                    return (\r\n                      <List\r\n                        key={list.id}\r\n                        list={list}\r\n                        boardId={boardDetail.id}\r\n                        onEditCardDetail={onEditCardDetail}\r\n                        onClickAddCard={onClickAddCard}\r\n                      />\r\n                    );\r\n                  })}\r\n                <Box\r\n                  p={2}\r\n                  display='flex'\r\n                  flexDirection='column'\r\n                  bgcolor={grey[300]}\r\n                  className='scrum-col'>\r\n                  <AddNewList onAddList={onAddList} />\r\n                </Box>\r\n              </Box>\r\n            </Scrollbar>\r\n          </Box>\r\n        </>\r\n      ) : null}\r\n      {isAddCardOpen ? (\r\n        <AddCard\r\n          isAddCardOpen={isAddCardOpen}\r\n          onCloseAddCard={onCloseAddCard}\r\n          list={list}\r\n          board={boardDetail}\r\n          selectedCard={selectedCard}\r\n        />\r\n      ) : null}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default BoardDetail;\r\n","import React, {useState} from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport IntlMessages from '../../../../@crema/utility/IntlMessages';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction='down' ref={ref} {...props} />;\r\n});\r\n\r\nconst AddNewBoard = ({\r\n  isAddBoardOpen,\r\n  onCloseAddBoardModal,\r\n  onAddBoard,\r\n  selectedBoard,\r\n  classes,\r\n}) => {\r\n  const [boardName, setBoardName] = useState(() =>\r\n    selectedBoard ? selectedBoard.name : '',\r\n  );\r\n\r\n  const onClickAddButton = () => {\r\n    if (boardName !== '') {\r\n      onAddBoard(boardName);\r\n      setBoardName('');\r\n      onCloseAddBoardModal();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={isAddBoardOpen}\r\n      onClose={() => onCloseAddBoardModal(false)}\r\n      aria-labelledby='simple-modal-title'\r\n      TransitionComponent={Transition}\r\n      aria-describedby='simple-modal-description'\r\n      className={classes.dialogBox}>\r\n      <Card className={classes.addBoardCard}>\r\n        <TextField\r\n          fullWidth\r\n          margin='normal'\r\n          label={<IntlMessages id='scrumboard.boardTitle' />}\r\n          value={boardName}\r\n          onChange={event => setBoardName(event.target.value)}\r\n        />\r\n        <Button className={classes.addButton} onClick={onClickAddButton}>\r\n          <IntlMessages id='common.add' />\r\n        </Button>\r\n      </Card>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AddNewBoard;\r\n\r\nAddNewBoard.defaultProps = {\r\n  selectedBoard: null,\r\n};\r\n\r\nAddNewBoard.prototype = {\r\n  isAddBoardOpen: PropTypes.bool.isRequired,\r\n  onCloseAddBoardModal: PropTypes.func.isRequired,\r\n  onAddBoard: PropTypes.func,\r\n  selectedBoard: PropTypes.node,\r\n};\r\n","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport ListAltIcon from '@material-ui/icons/ListAlt';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PropTypes from 'prop-types';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\n\r\nconst BoardItem = ({board, onEditButtonClick, onViewBoardDetail, classes}) => {\r\n  return (\r\n    <Grid item xs={12} sm={6} md={4} lg={3} key={board.id}>\r\n      <Card\r\n        className={classes.boardItem}\r\n        key={board.id}\r\n        onClick={() => onViewBoardDetail(board)}>\r\n        <ListAltIcon className={classes.listAltIcon} />\r\n        <EditIcon\r\n          className={classes.listAltIcon}\r\n          onClick={() => onEditButtonClick(board)}\r\n        />\r\n        <Box mb={4} fontFamily={Fonts.BOLD} fontSize={{xs: 16, xl: 18}}>\r\n          {board.name}\r\n        </Box>\r\n        <Box component='span' onClick={event => event.stopPropagation()} />\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default BoardItem;\r\n\r\nBoardItem.prototype = {\r\n  board: PropTypes.object.isRequired,\r\n  onEditButtonClick: PropTypes.func.isRequired,\r\n  onViewBoardDetail: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Box from '@material-ui/core/Box';\r\nimport IntlMessages from '../../../../@crema/utility/IntlMessages';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PropTypes from 'prop-types';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\n\r\nconst AddBoardButton = ({onAddButtonClick, classes}) => {\r\n  return (\r\n    <Grid item xs={12} sm={6} md={4} lg={3}>\r\n      <Card className={classes.boardStyle} onClick={() => onAddButtonClick()}>\r\n        <Avatar className={classes.avatar}>\r\n          <AddIcon className={classes.addIcon} />\r\n        </Avatar>\r\n        <Box mb={4} fontFamily={Fonts.BOLD} fontSize={{xs: 16, xl: 18}}>\r\n          <IntlMessages id='scrumboard.addNewBoard' />\r\n        </Box>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default AddBoardButton;\r\n\r\nAddBoardButton.prototype = {\r\n  onAddButtonClick: PropTypes.func,\r\n};\r\n","import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {\r\n  onAddNewBoard,\r\n  onEditBoardDetail,\r\n  onGetBoardList,\r\n} from '../../../../redux/actions/ScrumboardApp';\r\nimport {useHistory} from 'react-router-dom';\r\nimport AddNewBoard from './AddNewBoard';\r\nimport IntlMessages from '../../../../@crema/utility/IntlMessages';\r\nimport Box from '@material-ui/core/Box';\r\nimport GridContainer from '@crema/core/GridContainer';\r\nimport BoardItem from './BoardItem';\r\nimport AddBoardButton from './AddBoardButton';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport {grey, red} from '@material-ui/core/colors';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\n\r\nconst BoardList = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const boardList = useSelector(({scrumboardApp}) => scrumboardApp.boardList);\r\n\r\n  const [isAddBoardOpen, setAddBoardOpen] = useState(false);\r\n\r\n  const [selectedBoard, setSelectedBoard] = useState(null);\r\n\r\n  useEffect(() => {\r\n    dispatch(onGetBoardList());\r\n  }, [dispatch]);\r\n\r\n  const onCloseAddBoardModal = () => {\r\n    setAddBoardOpen(false);\r\n  };\r\n\r\n  const onAddButtonClick = () => {\r\n    setSelectedBoard(null);\r\n    setAddBoardOpen(true);\r\n  };\r\n\r\n  const onEditButtonClick = board => {\r\n    setSelectedBoard(board);\r\n    setAddBoardOpen(true);\r\n  };\r\n\r\n  const onAddBoard = name => {\r\n    if (selectedBoard) {\r\n      const board = {...selectedBoard, name};\r\n      dispatch(onEditBoardDetail(board));\r\n    } else {\r\n      dispatch(onAddNewBoard({name}));\r\n    }\r\n  };\r\n\r\n  const onViewBoardDetail = board => {\r\n    history.push(`/apps/scrum-board/${board.id}`);\r\n  };\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    boardStyle: {\r\n      borderRadius: theme.overrides.MuiCard.root.borderRadius,\r\n      cursor: 'pointer',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      padding: 20,\r\n      textAlign: 'center',\r\n      backgroundColor: theme.palette.background.paper,\r\n      height: 224,\r\n      border: '2px dashed',\r\n      borderColor: grey[600],\r\n    },\r\n    gridContainer: {\r\n      justifyContent: 'center',\r\n    },\r\n    boardItem: {\r\n      borderRadius: theme.overrides.MuiCard.root.borderRadius,\r\n      backgroundColor: theme.palette.primary.main,\r\n      color: theme.palette.primary.contrastText,\r\n      cursor: 'pointer',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      padding: 20,\r\n      textAlign: 'center',\r\n      height: 224,\r\n    },\r\n    listAltIcon: {\r\n      marginBottom: 16,\r\n      fontSize: 24,\r\n      [theme.breakpoints.up('xl')]: {\r\n        fontSize: 40,\r\n      },\r\n    },\r\n    addBoardCard: {\r\n      padding: '32px 40px',\r\n    },\r\n    addButton: {\r\n      backgroundColor: red[500],\r\n      color: theme.palette.primary.contrastText,\r\n      paddingRight: 32,\r\n      paddingLeft: 32,\r\n      marginTop: 12,\r\n      '&:hover, &:focus': {\r\n        backgroundColor: red[700],\r\n        color: theme.palette.primary.contrastText,\r\n      },\r\n    },\r\n    avatar: {\r\n      backgroundColor: grey[500],\r\n      marginBottom: 20,\r\n    },\r\n    addIcon: {\r\n      fontSize: 24,\r\n      [theme.breakpoints.up('xl')]: {\r\n        fontSize: 40,\r\n      },\r\n    },\r\n    dialogBox: {\r\n      position: 'relative',\r\n      '& .MuiDialog-paperWidthSm': {\r\n        maxWidth: 600,\r\n        width: '100%',\r\n      },\r\n      '& .MuiTypography-h6': {\r\n        fontFamily: Fonts.BOLD,\r\n      },\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Box pt={4} display='flex' flex={1} flexDirection='column'>\r\n        <Box\r\n          my={{xs: 5, sm: 5, xl: 8}}\r\n          component='h3'\r\n          color='text.primary'\r\n          fontFamily={Fonts.BOLD}\r\n          textAlign='center'\r\n          fontSize={{xs: 18, sm: 20, xl: 24}}>\r\n          <IntlMessages id='scrumboard.scrumboardApp' />\r\n        </Box>\r\n        <GridContainer className={classes.gridContainer}>\r\n          {boardList && boardList.length > 0\r\n            ? boardList.map(board => {\r\n                return (\r\n                  <BoardItem\r\n                    key={board.id}\r\n                    board={board}\r\n                    onEditButtonClick={onEditButtonClick}\r\n                    onViewBoardDetail={onViewBoardDetail}\r\n                    classes={classes}\r\n                  />\r\n                );\r\n              })\r\n            : null}\r\n          <AddBoardButton\r\n            onAddButtonClick={onAddButtonClick}\r\n            classes={classes}\r\n          />\r\n        </GridContainer>\r\n      </Box>\r\n\r\n      {isAddBoardOpen ? (\r\n        <AddNewBoard\r\n          isAddBoardOpen={isAddBoardOpen}\r\n          onCloseAddBoardModal={onCloseAddBoardModal}\r\n          onAddBoard={onAddBoard}\r\n          selectedBoard={selectedBoard}\r\n          classes={classes}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BoardList;\r\n","import React, {useEffect} from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport {\r\n  onGetMemberList,\r\n  onGetScrumLabelList,\r\n} from '../../../redux/actions/ScrumboardApp';\r\nimport BoardDetail from './BoardDetail';\r\nimport BoardList from './BoardList';\r\nimport {useParams} from 'react-router-dom';\r\nimport InfoView from '@crema/core/InfoView';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst ScrumBoard = () => {\r\n  const dispatch = useDispatch();\r\n  const params = useParams();\r\n\r\n  useEffect(() => {\r\n    dispatch(onGetScrumLabelList());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(onGetMemberList());\r\n  }, [dispatch]);\r\n\r\n  const onGetMainComponent = () => {\r\n    if (params.id) {\r\n      return <BoardDetail />;\r\n    } else {\r\n      return <BoardList />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box pt={{xl: 4}} flex={1} display='flex' flexDirection='column'>\r\n      {onGetMainComponent()}\r\n      <InfoView />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ScrumBoard;\r\n"],"sourceRoot":""}