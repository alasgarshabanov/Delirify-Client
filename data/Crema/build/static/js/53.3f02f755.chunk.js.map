{"version":3,"sources":["../node_modules/@material-ui/icons/Facebook.js","../node_modules/@material-ui/icons/Twitter.js","../node_modules/react-intl/lib/components/useIntl.js","../node_modules/@material-ui/icons/GitHub.js","modules/auth/Signin/SigninAwsCognito.js","modules/auth/Signin/SigninJwtAuth.js","modules/auth/Signin/SigninFirebase.js","modules/auth/Signin/index.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","useIntl","intl","useContext","Context","invariantIntlContext","MyTextField","props","useField","field","meta","errorText","error","touched","TextField","helperText","validationSchema","yup","email","IntlMessages","id","required","password","SigninAwsCognito","dispatch","useDispatch","history","useHistory","onGoToForgetPassword","push","tab","messages","classes","makeStyles","theme","formRoot","textAlign","breakpoints","up","marginBottom","myTextFieldRoot","width","checkboxRoot","marginLeft","pointer","cursor","btnRoot","borderRadius","fontFamily","Fonts","BOLD","fontSize","textTransform","dividerRoot","marginRight","iconButtonRoot","textLg","textPrimary","color","palette","text","primary","colorTextPrimary","main","underlineNone","textDecoration","useStyles","Box","px","xs","sm","xl","pt","flex","display","flexDirection","validateOnChange","initialValues","onSubmit","data","setSubmitting","onSignInCognitoUser","isSubmitting","className","noValidate","autoComplete","mb","placeholder","label","name","variant","lg","type","alignItems","justifyContent","Checkbox","component","ml","onClick","Button","disabled","mt","mr","to","clsx","Divider","IconButton","Auth","federatedSignIn","provider","InfoView","SigninJwtAuth","btnRootFull","onJwtSignIn","onSignInAuth0User","SigninFirebase","onSignInFirebaseUser","signInUserWithGoogle","signInUserWithFacebook","signInUserWithGithub","signInUserWithTwitter","Signin","useState","setValue","a11yProps","index","imgRoot","cardRoot","maxWidth","overflow","boxShadow","padding","paddingLeft","paddingRight","paddingtop","paddingBottom","paddingTop","muiTabsFull","muiTab","textUppercase","pb","md","src","alt","Card","Tabs","onChange","event","newValue","indicatorColor","textColor","aria-label","Tab"],"mappings":"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","file":"static/js/53.3f02f755.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M5 3h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2m13 2h-2.5A3.5 3.5 0 0 0 12 8.5V11h-2v3h2v7h3v-7h3v-3h-3V9a1 1 0 0 1 1-1h2V5z\"\n}), 'Facebook');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M22.46 6c-.77.35-1.6.58-2.46.69.88-.53 1.56-1.37 1.88-2.38-.83.5-1.75.85-2.72 1.05C18.37 4.5 17.26 4 16 4c-2.35 0-4.27 1.92-4.27 4.29 0 .34.04.67.11.98C8.28 9.09 5.11 7.38 3 4.79c-.37.63-.58 1.37-.58 2.15 0 1.49.75 2.81 1.91 3.56-.71 0-1.37-.2-1.95-.5v.03c0 2.08 1.48 3.82 3.44 4.21a4.22 4.22 0 0 1-1.93.07 4.28 4.28 0 0 0 4 2.98 8.521 8.521 0 0 1-5.33 1.84c-.34 0-.68-.02-1.02-.06C3.44 20.29 5.7 21 8.12 21 16 21 20.33 14.46 20.33 8.79c0-.19 0-.37-.01-.56.84-.6 1.56-1.36 2.14-2.23z\"\n}), 'Twitter');\n\nexports.default = _default;","import { useContext } from 'react';\nimport { Context } from './injectIntl';\nimport { invariantIntlContext } from '../utils';\nexport default function useIntl() {\n    const intl = useContext(Context);\n    invariantIntlContext(intl);\n    return intl;\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3\"\n}), 'GitHub');\n\nexports.default = _default;","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Checkbox} from '@material-ui/core';\r\nimport {Form, Formik, useField} from 'formik';\r\nimport * as yup from 'yup';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport {useDispatch} from 'react-redux';\r\nimport {Auth} from 'aws-amplify';\r\nimport InfoView from '@crema/core/InfoView';\r\nimport {onSignInCognitoUser} from '../../../redux/actions';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\nimport IntlMessages from '../../../@crema/utility/IntlMessages';\r\nimport {useIntl} from 'react-intl';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\n\r\nconst MyTextField = props => {\r\n  const [field, meta] = useField(props);\r\n  const errorText = meta.error && meta.touched ? meta.error : '';\r\n  return (\r\n    <TextField\r\n      {...props}\r\n      {...field}\r\n      helperText={errorText}\r\n      error={!!errorText}\r\n    />\r\n  );\r\n};\r\n\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string()\r\n    .email(<IntlMessages id='validation.emailFormat' />)\r\n    .required(<IntlMessages id='validation.emailRequired' />),\r\n  password: yup\r\n    .string()\r\n    .required(<IntlMessages id='validation.passwordRequired' />),\r\n});\r\n\r\nconst SigninAwsCognito = props => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const onGoToForgetPassword = () => {\r\n    history.push('/forget-password', {tab: 'awsCognito'});\r\n  };\r\n\r\n  const {messages} = useIntl();\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    formRoot: {\r\n      textAlign: 'left',\r\n      [theme.breakpoints.up('xl')]: {\r\n        marginBottom: 24,\r\n      },\r\n    },\r\n    myTextFieldRoot: {\r\n      width: '100%',\r\n    },\r\n    checkboxRoot: {\r\n      marginLeft: -12,\r\n    },\r\n    pointer: {\r\n      cursor: 'pointer',\r\n    },\r\n    btnRoot: {\r\n      borderRadius: 30,\r\n      width: '10rem',\r\n      fontFamily: Fonts.BOLD,\r\n      fontSize: 16,\r\n      textTransform: 'capitalize',\r\n      [theme.breakpoints.up('sm')]: {\r\n        fontSize: 18,\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        fontSize: 20,\r\n      },\r\n    },\r\n    dividerRoot: {\r\n      marginBottom: 16,\r\n      marginLeft: -48,\r\n      marginRight: -48,\r\n      [theme.breakpoints.up('xl')]: {\r\n        marginBottom: 32,\r\n      },\r\n    },\r\n    iconButtonRoot: {\r\n      marginLeft: 8,\r\n      marginRight: 8,\r\n    },\r\n    textLg: {\r\n      fontSize: 18,\r\n    },\r\n    textPrimary: {\r\n      color: theme.palette.text.primary,\r\n    },\r\n    colorTextPrimary: {\r\n      color: theme.palette.primary.main,\r\n    },\r\n    underlineNone: {\r\n      textDecoration: 'none',\r\n    },\r\n  }));\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <Box\r\n      px={{xs: 0, sm: 4, xl: 8}}\r\n      pt={{xs: 8, xl: 12}}\r\n      flex={1}\r\n      display='flex'\r\n      flexDirection='column'>\r\n      <Formik\r\n        validateOnChange={true}\r\n        initialValues={{\r\n          email: 'crema.demo@gmail.com',\r\n          password: 'Pass@1!@all',\r\n        }}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(data, {setSubmitting}) => {\r\n          setSubmitting(true);\r\n          dispatch(\r\n            onSignInCognitoUser({email: data.email, password: data.password}),\r\n            history,\r\n          );\r\n          setSubmitting(false);\r\n        }}>\r\n        {({isSubmitting}) => (\r\n          <Form className={classes.formRoot} noValidate autoComplete='off'>\r\n            <Box mb={{xs: 5, xl: 8}}>\r\n              <MyTextField\r\n                placeholder={messages['common.email']}\r\n                label={<IntlMessages id='common.email' />}\r\n                name='email'\r\n                variant='outlined'\r\n                className={classes.myTextFieldRoot}\r\n              />\r\n            </Box>\r\n\r\n            <Box mb={{xs: 5, lg: 6}}>\r\n              <MyTextField\r\n                type='password'\r\n                placeholder={messages['common.password']}\r\n                label={<IntlMessages id='common.password' />}\r\n                name='password'\r\n                variant='outlined'\r\n                className={classes.myTextFieldRoot}\r\n              />\r\n            </Box>\r\n\r\n            <Box\r\n              mb={{xs: 4, xl: 6}}\r\n              display='flex'\r\n              flexDirection={{xs: 'column', sm: 'row'}}\r\n              alignItems={{sm: 'center'}}\r\n              justifyContent={{sm: 'space-between'}}\r\n              fontSize={18}>\r\n              <Box display='flex' alignItems='center'>\r\n                <Checkbox className={classes.checkboxRoot} />\r\n                <Box component='span'>\r\n                  <IntlMessages id='common.rememberMe' />\r\n                </Box>\r\n              </Box>\r\n              <Box\r\n                color='primary.main'\r\n                component='span'\r\n                ml={{sm: 4}}\r\n                className={classes.pointer}\r\n                onClick={onGoToForgetPassword}>\r\n                <IntlMessages id='common.forgetPassword' />\r\n              </Box>\r\n            </Box>\r\n\r\n            <Box\r\n              mb={6}\r\n              display='flex'\r\n              flexDirection={{xs: 'column', sm: 'row'}}\r\n              alignItems={{sm: 'center'}}\r\n              justifyContent={{sm: 'space-between'}}>\r\n              <Button\r\n                variant='contained'\r\n                color='primary'\r\n                type='submit'\r\n                disabled={isSubmitting}\r\n                className={classes.btnRoot}>\r\n                <IntlMessages id='common.login' />\r\n              </Button>\r\n\r\n              <Box\r\n                ml={{sm: 4}}\r\n                mt={{xs: 3, sm: 0}}\r\n                color='text.secondary'\r\n                fontSize={18}>\r\n                <Box component='span' mr={2}>\r\n                  <IntlMessages id='common.dontHaveAccount' />\r\n                </Box>\r\n                <Box component='span'>\r\n                  <Link\r\n                    to='/signup'\r\n                    className={clsx(\r\n                      classes.underlineNone,\r\n                      classes.colorTextPrimary,\r\n                    )}>\r\n                    <IntlMessages id='common.signup' />\r\n                  </Link>\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n\r\n      <Divider className={classes.dividerRoot} />\r\n\r\n      <Box\r\n        display='flex'\r\n        flexDirection={{xs: 'column', sm: 'row'}}\r\n        justifyContent='center'\r\n        alignItems='center'>\r\n        <Box component='span' color='text.secondary' mr={4} fontSize={18}>\r\n          <IntlMessages id='common.orLoginWith' />\r\n        </Box>\r\n        <Box display='flex' alignItems='center'>\r\n          <IconButton\r\n            className={classes.iconButtonRoot}\r\n            onClick={() => Auth.federatedSignIn({provider: 'Google'})}>\r\n            <i\r\n              className={clsx(\r\n                classes.textLg,\r\n                classes.textPrimary,\r\n                'zmdi zmdi-google',\r\n              )}\r\n            />\r\n          </IconButton>\r\n          <IconButton\r\n            className={classes.iconButtonRoot}\r\n            onClick={() => Auth.federatedSignIn({provider: 'Facebook'})}>\r\n            <FacebookIcon className={classes.textPrimary} />\r\n          </IconButton>\r\n        </Box>\r\n      </Box>\r\n\r\n      <InfoView />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SigninAwsCognito;\r\n","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Checkbox} from '@material-ui/core';\r\nimport {Form, Formik, useField} from 'formik';\r\nimport * as yup from 'yup';\r\nimport {useDispatch} from 'react-redux';\r\n\r\nimport InfoView from '@crema/core/InfoView';\r\nimport {onJwtSignIn, onSignInAuth0User} from '../../../redux/actions';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\nimport IntlMessages from '../../../@crema/utility/IntlMessages';\r\nimport {useIntl} from 'react-intl';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\n\r\nconst MyTextField = props => {\r\n  const [field, meta] = useField(props);\r\n  const errorText = meta.error && meta.touched ? meta.error : '';\r\n  return (\r\n    <TextField\r\n      {...props}\r\n      {...field}\r\n      helperText={errorText}\r\n      error={!!errorText}\r\n    />\r\n  );\r\n};\r\n\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string()\r\n    .email(<IntlMessages id='validation.emailFormat' />)\r\n    .required(<IntlMessages id='validation.emailRequired' />),\r\n  password: yup\r\n    .string()\r\n    .required(<IntlMessages id='validation.passwordRequired' />),\r\n});\r\n\r\nconst SigninJwtAuth = props => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const onGoToForgetPassword = () => {\r\n    history.push('/forget-password', {tab: 'jwtAuth'});\r\n  };\r\n\r\n  const {messages} = useIntl();\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    formRoot: {\r\n      textAlign: 'left',\r\n      [theme.breakpoints.up('xl')]: {\r\n        marginBottom: 24,\r\n      },\r\n    },\r\n    myTextFieldRoot: {\r\n      width: '100%',\r\n    },\r\n    checkboxRoot: {\r\n      marginLeft: -12,\r\n    },\r\n    pointer: {\r\n      cursor: 'pointer',\r\n    },\r\n    btnRoot: {\r\n      borderRadius: 30,\r\n      width: '10rem',\r\n      fontFamily: Fonts.BOLD,\r\n      fontSize: 16,\r\n      textTransform: 'capitalize',\r\n      [theme.breakpoints.up('sm')]: {\r\n        fontSize: 18,\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        fontSize: 20,\r\n      },\r\n    },\r\n    btnRootFull: {\r\n      width: '100%',\r\n    },\r\n    dividerRoot: {\r\n      marginBottom: 16,\r\n      marginLeft: -48,\r\n      marginRight: -48,\r\n      [theme.breakpoints.up('xl')]: {\r\n        marginBottom: 32,\r\n      },\r\n    },\r\n    textPrimary: {\r\n      color: theme.palette.text.primary,\r\n    },\r\n    colorTextPrimary: {\r\n      color: theme.palette.primary.main,\r\n    },\r\n    underlineNone: {\r\n      textDecoration: 'none',\r\n    },\r\n  }));\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <Box\r\n      px={{xs: 0, sm: 4, xl: 8}}\r\n      pt={{xs: 8, xl: 12}}\r\n      flex={1}\r\n      display='flex'\r\n      flexDirection='column'>\r\n      <Formik\r\n        validateOnChange={true}\r\n        initialValues={{\r\n          email: 'crema.demo@gmail.com',\r\n          password: 'P!@355',\r\n        }}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(data, {setSubmitting}) => {\r\n          setSubmitting(true);\r\n          dispatch(\r\n            onJwtSignIn({email: data.email, password: data.password}),\r\n            history,\r\n          );\r\n          setSubmitting(false);\r\n        }}>\r\n        {({isSubmitting}) => (\r\n          <Form className={classes.formRoot} noValidate autoComplete='off'>\r\n            <Box mb={{xs: 5, xl: 8}}>\r\n              <MyTextField\r\n                placeholder={messages['common.email']}\r\n                name='email'\r\n                label={<IntlMessages id='common.email' />}\r\n                variant='outlined'\r\n                className={classes.myTextFieldRoot}\r\n              />\r\n            </Box>\r\n\r\n            <Box mb={{xs: 5, xl: 6}}>\r\n              <MyTextField\r\n                type='password'\r\n                placeholder={messages['common.password']}\r\n                label={<IntlMessages id='common.password' />}\r\n                name='password'\r\n                variant='outlined'\r\n                className={classes.myTextFieldRoot}\r\n              />\r\n            </Box>\r\n\r\n            <Box\r\n              mb={{xs: 4, xl: 6}}\r\n              display='flex'\r\n              flexDirection={{xs: 'column', sm: 'row'}}\r\n              alignItems={{sm: 'center'}}\r\n              justifyContent={{sm: 'space-between'}}\r\n              fontSize={18}>\r\n              <Box display='flex' alignItems='center'>\r\n                <Checkbox className={classes.checkboxRoot} />\r\n                <Box component='span'>\r\n                  <IntlMessages id='common.rememberMe' />\r\n                </Box>\r\n              </Box>\r\n              <Box\r\n                color='primary.main'\r\n                component='span'\r\n                ml={{sm: 4}}\r\n                className={classes.pointer}\r\n                onClick={onGoToForgetPassword}>\r\n                <IntlMessages id='common.forgetPassword' />\r\n              </Box>\r\n            </Box>\r\n\r\n            <Box\r\n              mb={6}\r\n              display='flex'\r\n              flexDirection={{xs: 'column', sm: 'row'}}\r\n              alignItems={{sm: 'center'}}\r\n              justifyContent={{sm: 'space-between'}}>\r\n              <Button\r\n                variant='contained'\r\n                color='primary'\r\n                type='submit'\r\n                disabled={isSubmitting}\r\n                className={classes.btnRoot}>\r\n                <IntlMessages id='common.login' />\r\n              </Button>\r\n\r\n              <Box\r\n                ml={{sm: 4}}\r\n                mt={{xs: 3, sm: 0}}\r\n                color='text.secondary'\r\n                fontSize={18}>\r\n                <Box component='span' mr={2}>\r\n                  <IntlMessages id='common.dontHaveAccount' />\r\n                </Box>\r\n                <Box component='span'>\r\n                  <Link\r\n                    to='/signup'\r\n                    className={clsx(\r\n                      classes.underlineNone,\r\n                      classes.colorTextPrimary,\r\n                    )}>\r\n                    <IntlMessages id='common.signup' />\r\n                  </Link>\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n\r\n      <Divider className={classes.dividerRoot} />\r\n\r\n      <Box display='flex' justifyContent='center' alignItems='center'>\r\n        <Button\r\n          variant='contained'\r\n          color='secondary'\r\n          className={clsx(classes.btnRoot, classes.btnRootFull)}\r\n          onClick={() => dispatch(onSignInAuth0User())}>\r\n          <IntlMessages id='auth.loginWithAuth0' />\r\n        </Button>\r\n      </Box>\r\n\r\n      <InfoView />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SigninJwtAuth;\r\n","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Checkbox} from '@material-ui/core';\r\nimport {Form, Formik, useField} from 'formik';\r\nimport * as yup from 'yup';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport {useDispatch} from 'react-redux';\r\nimport InfoView from '@crema/core/InfoView';\r\nimport {\r\n  onSignInFirebaseUser,\r\n  signInUserWithFacebook,\r\n  signInUserWithGithub,\r\n  signInUserWithGoogle,\r\n  signInUserWithTwitter,\r\n} from '../../../redux/actions';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\nimport IntlMessages from '../../../@crema/utility/IntlMessages';\r\nimport {useIntl} from 'react-intl';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\n\r\nconst MyTextField = props => {\r\n  const [field, meta] = useField(props);\r\n  const errorText = meta.error && meta.touched ? meta.error : '';\r\n  return (\r\n    <TextField\r\n      {...props}\r\n      {...field}\r\n      helperText={errorText}\r\n      error={!!errorText}\r\n    />\r\n  );\r\n};\r\n\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string()\r\n    .email(<IntlMessages id='validation.emailFormat' />)\r\n    .required(<IntlMessages id='validation.emailRequired' />),\r\n  password: yup\r\n    .string()\r\n    .required(<IntlMessages id='validation.passwordRequired' />),\r\n});\r\n\r\nconst SigninFirebase = props => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const onGoToForgetPassword = () => {\r\n    history.push('/forget-password', {tab: 'firebase'});\r\n  };\r\n\r\n  const {messages} = useIntl();\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    formRoot: {\r\n      textAlign: 'left',\r\n      [theme.breakpoints.up('xl')]: {\r\n        marginBottom: 24,\r\n      },\r\n    },\r\n    myTextFieldRoot: {\r\n      width: '100%',\r\n    },\r\n    checkboxRoot: {\r\n      marginLeft: -12,\r\n    },\r\n    pointer: {\r\n      cursor: 'pointer',\r\n    },\r\n    btnRoot: {\r\n      borderRadius: 30,\r\n      width: '10rem',\r\n      fontFamily: Fonts.BOLD,\r\n      fontSize: 16,\r\n      textTransform: 'capitalize',\r\n      [theme.breakpoints.up('sm')]: {\r\n        fontSize: 18,\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        fontSize: 20,\r\n      },\r\n    },\r\n    dividerRoot: {\r\n      marginBottom: 16,\r\n      marginLeft: -48,\r\n      marginRight: -48,\r\n      [theme.breakpoints.up('xl')]: {\r\n        marginBottom: 32,\r\n      },\r\n    },\r\n    iconButtonRoot: {\r\n      marginLeft: 4,\r\n      marginRight: 4,\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: 8,\r\n        marginRight: 8,\r\n      },\r\n    },\r\n    textLg: {\r\n      fontSize: 18,\r\n    },\r\n    textPrimary: {\r\n      color: theme.palette.text.primary,\r\n    },\r\n    colorTextPrimary: {\r\n      color: theme.palette.primary.main,\r\n    },\r\n    underlineNone: {\r\n      textDecoration: 'none',\r\n    },\r\n  }));\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <Box\r\n      px={{xs: 0, sm: 4, xl: 8}}\r\n      pt={{xs: 8, xl: 12}}\r\n      flex={1}\r\n      display='flex'\r\n      flexDirection='column'>\r\n      <Formik\r\n        validateOnChange={true}\r\n        initialValues={{\r\n          email: 'crema.demo@gmail.com',\r\n          password: 'Pass@1!@all',\r\n        }}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(data, {setSubmitting}) => {\r\n          setSubmitting(true);\r\n          dispatch(onSignInFirebaseUser(data.email, data.password), history);\r\n          setSubmitting(false);\r\n        }}>\r\n        {({isSubmitting}) => (\r\n          <Form className={classes.formRoot} noValidate autoComplete='off'>\r\n            <Box mb={{xs: 5, xl: 8}}>\r\n              <MyTextField\r\n                placeholder={messages['common.email']}\r\n                name='email'\r\n                label={<IntlMessages id='common.email' />}\r\n                variant='outlined'\r\n                className={classes.myTextFieldRoot}\r\n              />\r\n            </Box>\r\n\r\n            <Box mb={{xs: 5, lg: 6}}>\r\n              <MyTextField\r\n                type='password'\r\n                placeholder={messages['common.password']}\r\n                label={<IntlMessages id='common.password' />}\r\n                name='password'\r\n                variant='outlined'\r\n                className={classes.myTextFieldRoot}\r\n              />\r\n            </Box>\r\n\r\n            <Box\r\n              mb={{xs: 4, xl: 6}}\r\n              display='flex'\r\n              flexDirection={{xs: 'column', sm: 'row'}}\r\n              alignItems={{sm: 'center'}}\r\n              justifyContent={{sm: 'space-between'}}\r\n              fontSize={18}>\r\n              <Box display='flex' alignItems='center'>\r\n                <Checkbox className={classes.checkboxRoot} />\r\n                <Box component='span'>\r\n                  <IntlMessages id='common.rememberMe' />\r\n                </Box>\r\n              </Box>\r\n              <Box\r\n                color='primary.main'\r\n                component='span'\r\n                ml={{sm: 4}}\r\n                className={classes.pointer}\r\n                onClick={onGoToForgetPassword}>\r\n                <IntlMessages id='common.forgetPassword' />\r\n              </Box>\r\n            </Box>\r\n\r\n            <Box\r\n              mb={6}\r\n              display='flex'\r\n              flexDirection={{xs: 'column', sm: 'row'}}\r\n              alignItems={{sm: 'center'}}\r\n              justifyContent={{sm: 'space-between'}}>\r\n              <Button\r\n                variant='contained'\r\n                color='secondary'\r\n                type='submit'\r\n                disabled={isSubmitting}\r\n                className={classes.btnRoot}>\r\n                <IntlMessages id='common.login' />\r\n              </Button>\r\n\r\n              <Box\r\n                ml={{sm: 4}}\r\n                mt={{xs: 3, sm: 0}}\r\n                color='text.secondary'\r\n                fontSize={18}>\r\n                <Box component='span' mr={2}>\r\n                  <IntlMessages id='common.dontHaveAccount' />\r\n                </Box>\r\n                <Box component='span'>\r\n                  <Link\r\n                    to='/signup'\r\n                    className={clsx(\r\n                      classes.underlineNone,\r\n                      classes.colorTextPrimary,\r\n                    )}>\r\n                    <IntlMessages id='common.signup' />\r\n                  </Link>\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n\r\n      <Divider className={classes.dividerRoot} />\r\n\r\n      <Box\r\n        display='flex'\r\n        flexDirection={{xs: 'column', sm: 'row'}}\r\n        justifyContent='center'\r\n        alignItems='center'>\r\n        <Box component='span' color='text.secondary' mr={{sm: 4}} fontSize={18}>\r\n          <IntlMessages id='common.orLoginWith' />\r\n        </Box>\r\n        <Box display='flex' alignItems='center'>\r\n          <IconButton\r\n            className={classes.iconButtonRoot}\r\n            onClick={() => dispatch(signInUserWithGoogle())}>\r\n            <i\r\n              className={clsx(\r\n                classes.textLg,\r\n                classes.textPrimary,\r\n                'zmdi zmdi-google',\r\n              )}\r\n            />\r\n          </IconButton>\r\n          <IconButton\r\n            className={classes.iconButtonRoot}\r\n            onClick={() => dispatch(signInUserWithFacebook())}>\r\n            <FacebookIcon className={classes.textPrimary} />\r\n          </IconButton>\r\n          <IconButton\r\n            className={classes.iconButtonRoot}\r\n            onClick={() => dispatch(signInUserWithGithub())}>\r\n            <GitHubIcon className={classes.textPrimary} />\r\n          </IconButton>\r\n          <IconButton\r\n            className={classes.iconButtonRoot}\r\n            onClick={() => dispatch(signInUserWithTwitter())}>\r\n            <TwitterIcon className={classes.textPrimary} />\r\n          </IconButton>\r\n        </Box>\r\n      </Box>\r\n\r\n      <InfoView />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SigninFirebase;\r\n","import React, {useState} from 'react';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport SigninAwsCognito from './SigninAwsCognito';\r\nimport SigninJwtAuth from './SigninJwtAuth';\r\nimport SigninFirebase from './SigninFirebase';\r\nimport Card from '@material-ui/core/Card';\r\nimport Box from '@material-ui/core/Box';\r\nimport IntlMessages from '../../../@crema/utility/IntlMessages';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\n\r\nconst Signin = props => {\r\n  const [value, setValue] = useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const a11yProps = index => {\r\n    return {\r\n      id: `simple-tab-${index}`,\r\n      'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n  };\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    imgRoot: {\r\n      cursor: 'pointer',\r\n      display: 'inline-block',\r\n    },\r\n    cardRoot: {\r\n      maxWidth: '36rem',\r\n      width: '100%',\r\n      overflow: 'hidden',\r\n      boxShadow: '0 10px 15px -3px rgba(0, 0, 0, 0.1)',\r\n      textAlign: 'center',\r\n      padding: '16px 24px',\r\n      [theme.breakpoints.up('sm')]: {\r\n        paddingLeft: 32,\r\n        paddingRight: 32,\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        paddingtop: 24,\r\n        paddingBottom: 32,\r\n      },\r\n    },\r\n    btnRoot: {\r\n      borderRadius: 30,\r\n      width: '100%',\r\n      fontFamily: Fonts.BOLD,\r\n      fontSize: 16,\r\n      paddingTop: 12,\r\n      paddingBottom: 12,\r\n      textTransform: 'capitalize',\r\n      [theme.breakpoints.up('sm')]: {\r\n        fontSize: 18,\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        fontSize: 20,\r\n      },\r\n    },\r\n    muiTabsFull: {\r\n      marginLeft: 0,\r\n      marginRight: 0,\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: -32,\r\n        marginRight: -32,\r\n      },\r\n      '& .MuiTabs-flexContainer': {\r\n        '& .MuiTab-root': {\r\n          flex: 1,\r\n        },\r\n      },\r\n    },\r\n    muiTab: {\r\n      fontFamily: Fonts.BOLD,\r\n      fontSize: 14,\r\n      paddingBottom: 16,\r\n      paddingTop: 16,\r\n      marginLeft: 8,\r\n      marginRight: 8,\r\n      [theme.breakpoints.up('sm')]: {\r\n        fontSize: 18,\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        fontSize: 20,\r\n      },\r\n    },\r\n    textUppercase: {\r\n      textTransform: 'uppercase',\r\n    },\r\n  }));\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <Box pb={8} px={{md: 6}} flex={1} display='flex' flexDirection='column'>\r\n      <Box mb={4} mt={{xl: 4}} textAlign={{xs: 'center', sm: 'left'}}>\r\n        <img\r\n          className={classes.imgRoot}\r\n          src={require('assets/images/logo-white-with-name.png')}\r\n          alt='crema-logo'\r\n        />\r\n      </Box>\r\n\r\n      <Box\r\n        mt={{lg: -10, xl: -6}}\r\n        flex={1}\r\n        display='flex'\r\n        flexDirection='column'\r\n        justifyContent='center'\r\n        alignItems='center'>\r\n        <Box\r\n          component='h2'\r\n          mb={{xs: 6, xl: 8}}\r\n          color='text.white'\r\n          fontFamily={Fonts.BOLD}\r\n          fontSize={{xs: 24, xl: 30}}\r\n          className={classes.textUppercase}>\r\n          <IntlMessages id='common.login' />\r\n        </Box>\r\n\r\n        <Card className={classes.cardRoot}>\r\n          <Tabs\r\n            value={value}\r\n            onChange={handleChange}\r\n            indicatorColor='primary'\r\n            textColor='primary'\r\n            aria-label='simple tabs example'\r\n            className={classes.muiTabsFull}>\r\n            <Tab\r\n              className={classes.muiTab}\r\n              label='aws cognito'\r\n              {...a11yProps(1)}\r\n            />\r\n            <Tab\r\n              className={classes.muiTab}\r\n              label='jwt auth'\r\n              {...a11yProps(2)}\r\n            />\r\n            <Tab\r\n              className={classes.muiTab}\r\n              label='firebase'\r\n              {...a11yProps(0)}\r\n            />\r\n          </Tabs>\r\n\r\n          <>\r\n            {value === 0 && <SigninFirebase />}\r\n            {value === 1 && <SigninAwsCognito />}\r\n            {value === 2 && <SigninJwtAuth />}\r\n          </>\r\n        </Card>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n"],"sourceRoot":""}