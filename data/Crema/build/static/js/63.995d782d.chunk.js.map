{"version":3,"sources":["../node_modules/@material-ui/icons/Facebook.js","../node_modules/@material-ui/icons/Twitter.js","../node_modules/@material-ui/icons/GitHub.js","modules/auth/Signup/SignupAwsCognito.js","modules/auth/Signup/SignupJwtAuth.js","modules/auth/Signup/SignupFirebase.js","modules/auth/Signup/index.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","MyTextField","props","useField","field","meta","errorText","error","touched","TextField","helperText","validationSchema","yup","name","required","IntlMessages","id","email","password","confirmPassword","SignupAwsCognito","dispatch","useDispatch","history","useHistory","classes","makeStyles","theme","formRoot","textAlign","myTextFieldRoot","width","checkboxRoot","marginLeft","pointer","cursor","btnRoot","borderRadius","fontFamily","Fonts","BOLD","fontSize","textTransform","breakpoints","up","dividerRoot","marginBottom","marginRight","iconButtonRoot","textLg","textPrimary","color","palette","text","primary","colorTextPrimary","main","underlineNone","textDecoration","useStyles","Box","px","xs","sm","xl","pt","flex","display","flexDirection","validateOnChange","initialValues","onSubmit","data","setSubmitting","setErrors","onSignUpCognitoUser","isSubmitting","className","noValidate","autoComplete","mb","label","variant","Grid","item","md","type","alignItems","Checkbox","component","mr","justifyContent","Button","disabled","ml","mt","to","clsx","Divider","IconButton","onClick","Auth","federatedSignIn","provider","InfoView","SignupJwtAuth","btnRootFull","onJwtUserSignUp","my","SignupFirebase","onSignUpFirebaseUser","signInUserWithGoogle","signInUserWithFacebook","signInUserWithGithub","signInUserWithTwitter","Signup","useState","setValue","a11yProps","index","imgRoot","cardRoot","maxWidth","overflow","boxShadow","padding","paddingLeft","paddingRight","paddingtop","paddingBottom","paddingTop","muiTabsFull","muiTab","textUppercase","pb","src","alt","lg","Card","Tabs","onChange","event","newValue","indicatorColor","textColor","aria-label","Tab"],"mappings":"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","file":"static/js/63.995d782d.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M5 3h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2m13 2h-2.5A3.5 3.5 0 0 0 12 8.5V11h-2v3h2v7h3v-7h3v-3h-3V9a1 1 0 0 1 1-1h2V5z\"\n}), 'Facebook');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M22.46 6c-.77.35-1.6.58-2.46.69.88-.53 1.56-1.37 1.88-2.38-.83.5-1.75.85-2.72 1.05C18.37 4.5 17.26 4 16 4c-2.35 0-4.27 1.92-4.27 4.29 0 .34.04.67.11.98C8.28 9.09 5.11 7.38 3 4.79c-.37.63-.58 1.37-.58 2.15 0 1.49.75 2.81 1.91 3.56-.71 0-1.37-.2-1.95-.5v.03c0 2.08 1.48 3.82 3.44 4.21a4.22 4.22 0 0 1-1.93.07 4.28 4.28 0 0 0 4 2.98 8.521 8.521 0 0 1-5.33 1.84c-.34 0-.68-.02-1.02-.06C3.44 20.29 5.7 21 8.12 21 16 21 20.33 14.46 20.33 8.79c0-.19 0-.37-.01-.56.84-.6 1.56-1.36 2.14-2.23z\"\n}), 'Twitter');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3\"\n}), 'GitHub');\n\nexports.default = _default;","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Checkbox} from '@material-ui/core';\r\nimport {Form, Formik, useField} from 'formik';\r\nimport * as yup from 'yup';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport {useDispatch} from 'react-redux';\r\nimport {Auth} from 'aws-amplify';\r\nimport InfoView from '@crema/core/InfoView';\r\nimport {onSignUpCognitoUser} from '../../../redux/actions';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\nimport IntlMessages from '../../../@crema/utility/IntlMessages';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\nimport {GridContainer} from '../../../@crema';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst MyTextField = props => {\r\n  const [field, meta] = useField(props);\r\n  const errorText = meta.error && meta.touched ? meta.error : '';\r\n  return (\r\n    <TextField\r\n      {...props}\r\n      {...field}\r\n      helperText={errorText}\r\n      error={!!errorText}\r\n    />\r\n  );\r\n};\r\n\r\nconst validationSchema = yup.object({\r\n  name: yup.string().required(<IntlMessages id='validation.nameRequired' />),\r\n  email: yup\r\n    .string()\r\n    .email(<IntlMessages id='validation.emailFormat' />)\r\n    .required(<IntlMessages id='validation.emailRequired' />),\r\n  password: yup\r\n    .string()\r\n    .required(<IntlMessages id='validation.passwordRequired' />),\r\n  confirmPassword: yup\r\n    .string()\r\n    .required(<IntlMessages id='validation.reTypePassword' />),\r\n});\r\n\r\nconst SignupAwsCognito = props => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    formRoot: {\r\n      textAlign: 'left',\r\n    },\r\n    myTextFieldRoot: {\r\n      width: '100%',\r\n    },\r\n    checkboxRoot: {\r\n      marginLeft: -12,\r\n    },\r\n    pointer: {\r\n      cursor: 'pointer',\r\n    },\r\n    btnRoot: {\r\n      borderRadius: 30,\r\n      width: '10rem',\r\n      fontFamily: Fonts.BOLD,\r\n      fontSize: 16,\r\n      textTransform: 'capitalize',\r\n      [theme.breakpoints.up('sm')]: {\r\n        fontSize: 18,\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        fontSize: 20,\r\n      },\r\n    },\r\n    dividerRoot: {\r\n      marginBottom: 10,\r\n      marginLeft: -48,\r\n      marginRight: -48,\r\n      [theme.breakpoints.up('xl')]: {\r\n        marginBottom: 20,\r\n      },\r\n    },\r\n    iconButtonRoot: {\r\n      marginLeft: 8,\r\n      marginRight: 8,\r\n    },\r\n    textLg: {\r\n      fontSize: 18,\r\n    },\r\n    textPrimary: {\r\n      color: theme.palette.text.primary,\r\n    },\r\n    colorTextPrimary: {\r\n      color: theme.palette.primary.main,\r\n    },\r\n    underlineNone: {\r\n      textDecoration: 'none',\r\n    },\r\n  }));\r\n  const classes = useStyles(props);\r\n  return (\r\n    <Box\r\n      px={{xs: 0, sm: 4, xl: 8}}\r\n      pt={{xs: 5, xl: 8}}\r\n      flex={1}\r\n      display='flex'\r\n      flexDirection='column'>\r\n      <Formik\r\n        validateOnChange={true}\r\n        initialValues={{\r\n          name: '',\r\n          email: '',\r\n          password: '',\r\n          confirmPassword: '',\r\n        }}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(data, {setSubmitting, setErrors}) => {\r\n          if (data.password !== data.confirmPassword) {\r\n            setErrors({\r\n              confirmPassword: (\r\n                <IntlMessages id='validation.passwordMisMatch' />\r\n              ),\r\n            });\r\n          } else {\r\n            setSubmitting(true);\r\n            dispatch(\r\n              onSignUpCognitoUser(\r\n                {email: data.email, password: data.password, name: data.name},\r\n                history,\r\n              ),\r\n            );\r\n            setSubmitting(false);\r\n          }\r\n        }}>\r\n        {({isSubmitting}) => (\r\n          <Form className={classes.formRoot} noValidate autoComplete='off'>\r\n            <Box mb={{xs: 5, xl: 8}}>\r\n              <MyTextField\r\n                label={<IntlMessages id='common.name' />}\r\n                name='name'\r\n                variant='outlined'\r\n                className={classes.myTextFieldRoot}\r\n              />\r\n            </Box>\r\n\r\n            <Box mb={{xs: 5, xl: 8}}>\r\n              <MyTextField\r\n                label={<IntlMessages id='common.email' />}\r\n                name='email'\r\n                variant='outlined'\r\n                className={classes.myTextFieldRoot}\r\n              />\r\n            </Box>\r\n\r\n            <GridContainer>\r\n              <Grid item xs={12} md={6}>\r\n                <Box mb={{xs: 5, xl: 8}}>\r\n                  <MyTextField\r\n                    label={<IntlMessages id='common.password' />}\r\n                    name='password'\r\n                    type='password'\r\n                    variant='outlined'\r\n                    className={classes.myTextFieldRoot}\r\n                  />\r\n                </Box>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={6}>\r\n                <Box mb={{xs: 4, xl: 8}}>\r\n                  <MyTextField\r\n                    label={<IntlMessages id='common.retypePassword' />}\r\n                    name='confirmPassword'\r\n                    type='password'\r\n                    variant='outlined'\r\n                    className={classes.myTextFieldRoot}\r\n                  />\r\n                </Box>\r\n              </Grid>\r\n            </GridContainer>\r\n\r\n            <Box\r\n              mb={{xs: 4, xl: 6}}\r\n              display='flex'\r\n              alignItems='center'\r\n              fontSize={18}>\r\n              <Box display='flex' alignItems='center'>\r\n                <Checkbox className={classes.checkboxRoot} />\r\n                <Box component='span' mr={2} fontSize={18}>\r\n                  <IntlMessages id='common.iAgreeTo' />\r\n                </Box>\r\n              </Box>\r\n              <Box\r\n                component='span'\r\n                color='primary.main'\r\n                fontSize={18}\r\n                className={classes.pointer}>\r\n                <IntlMessages id='common.termConditions' />\r\n              </Box>\r\n            </Box>\r\n\r\n            <Box\r\n              mb={6}\r\n              display='flex'\r\n              flexDirection={{xs: 'column', sm: 'row'}}\r\n              alignItems={{sm: 'center'}}\r\n              justifyContent={{sm: 'space-between'}}>\r\n              <Button\r\n                variant='contained'\r\n                color='primary'\r\n                disabled={isSubmitting}\r\n                className={classes.btnRoot}\r\n                type='submit'>\r\n                <IntlMessages id='common.signup' />\r\n              </Button>\r\n\r\n              <Box\r\n                color='text.secondary'\r\n                ml={{sm: 4}}\r\n                mt={{xs: 3, sm: 0}}\r\n                fontSize={18}>\r\n                <Box component='span' mr={1}>\r\n                  <IntlMessages id='common.alreadyHaveAccount' />\r\n                </Box>\r\n                <Box component='span'>\r\n                  <Link\r\n                    to='/signIn'\r\n                    className={clsx(\r\n                      classes.underlineNone,\r\n                      classes.colorTextPrimary,\r\n                    )}>\r\n                    <IntlMessages id='common.signIn' />\r\n                  </Link>\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n\r\n      <Divider className={classes.dividerRoot} />\r\n\r\n      <Box\r\n        display='flex'\r\n        flexDirection={{xs: 'column', sm: 'row'}}\r\n        justifyContent='center'\r\n        alignItems='center'>\r\n        <Box component='span' color='text.secondary' mr={4} fontSize={18}>\r\n          <IntlMessages id='auth.orSignupWith' />\r\n        </Box>\r\n        <Box display='flex' alignItems='center'>\r\n          <IconButton\r\n            className={classes.iconButtonRoot}\r\n            onClick={() => Auth.federatedSignIn({provider: 'Google'})}>\r\n            <i\r\n              className={clsx(\r\n                classes.textLg,\r\n                classes.textPrimary,\r\n                'zmdi zmdi-google',\r\n              )}\r\n            />\r\n          </IconButton>\r\n          <IconButton\r\n            className={classes.iconButtonRoot}\r\n            onClick={() => Auth.federatedSignIn({provider: 'Facebook'})}>\r\n            <FacebookIcon className={classes.textPrimary} />\r\n          </IconButton>\r\n        </Box>\r\n      </Box>\r\n\r\n      <InfoView />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SignupAwsCognito;\r\n","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Checkbox} from '@material-ui/core';\r\nimport {Form, Formik, useField} from 'formik';\r\nimport * as yup from 'yup';\r\nimport {useDispatch} from 'react-redux';\r\n\r\nimport InfoView from '@crema/core/InfoView';\r\nimport {onJwtUserSignUp} from '../../../redux/actions';\r\nimport {Link} from 'react-router-dom';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\nimport IntlMessages from '../../../@crema/utility/IntlMessages';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {GridContainer} from '../../../@crema';\r\n\r\nconst MyTextField = props => {\r\n  const [field, meta] = useField(props);\r\n  const errorText = meta.error && meta.touched ? meta.error : '';\r\n  return (\r\n    <TextField\r\n      {...props}\r\n      {...field}\r\n      helperText={errorText}\r\n      error={!!errorText}\r\n    />\r\n  );\r\n};\r\n\r\nconst validationSchema = yup.object({\r\n  name: yup.string().required(<IntlMessages id='validation.nameRequired' />),\r\n  email: yup\r\n    .string()\r\n    .email(<IntlMessages id='validation.emailFormat' />)\r\n    .required(<IntlMessages id='validation.emailRequired' />),\r\n  password: yup\r\n    .string()\r\n    .required(<IntlMessages id='validation.passwordRequired' />),\r\n  confirmPassword: yup\r\n    .string()\r\n    .required(<IntlMessages id='validation.reTypePassword' />),\r\n});\r\n\r\nconst SignupJwtAuth = props => {\r\n  const dispatch = useDispatch();\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    formRoot: {\r\n      textAlign: 'left',\r\n    },\r\n    myTextFieldRoot: {\r\n      width: '100%',\r\n    },\r\n    checkboxRoot: {\r\n      marginLeft: -12,\r\n    },\r\n    pointer: {\r\n      cursor: 'pointer',\r\n    },\r\n    btnRoot: {\r\n      borderRadius: 30,\r\n      width: '10rem',\r\n      fontFamily: Fonts.BOLD,\r\n      fontSize: 16,\r\n      textTransform: 'capitalize',\r\n      [theme.breakpoints.up('sm')]: {\r\n        fontSize: 18,\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        fontSize: 20,\r\n      },\r\n    },\r\n    btnRootFull: {\r\n      width: '100%',\r\n    },\r\n    dividerRoot: {\r\n      marginBottom: 10,\r\n      marginLeft: -48,\r\n      marginRight: -48,\r\n      [theme.breakpoints.up('xl')]: {\r\n        marginBottom: 20,\r\n      },\r\n    },\r\n    textPrimary: {\r\n      color: theme.palette.text.primary,\r\n    },\r\n    colorTextPrimary: {\r\n      color: theme.palette.primary.main,\r\n    },\r\n    underlineNone: {\r\n      textDecoration: 'none',\r\n    },\r\n  }));\r\n  const classes = useStyles(props);\r\n  return (\r\n    <Box\r\n      px={{xs: 0, sm: 4, xl: 8}}\r\n      pt={{xs: 5, xl: 8}}\r\n      flex={1}\r\n      display='flex'\r\n      flexDirection='column'>\r\n      <Formik\r\n        validateOnChange={true}\r\n        initialValues={{\r\n          name: '',\r\n          email: '',\r\n          password: '',\r\n          confirmPassword: '',\r\n        }}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(data, {setErrors, setSubmitting}) => {\r\n          if (data.password !== data.confirmPassword) {\r\n            setErrors({\r\n              confirmPassword: (\r\n                <IntlMessages id='validation.passwordMisMatch' />\r\n              ),\r\n            });\r\n          } else {\r\n            setSubmitting(true);\r\n            dispatch(\r\n              onJwtUserSignUp({\r\n                email: data.email,\r\n                password: data.password,\r\n                name: data.name,\r\n              }),\r\n            );\r\n            setSubmitting(false);\r\n          }\r\n        }}>\r\n        {({isSubmitting}) => (\r\n          <Form className={classes.formRoot} noValidate autoComplete='off'>\r\n            <Box mb={{xs: 5, xl: 8}}>\r\n              <MyTextField\r\n                label={<IntlMessages id='common.name' />}\r\n                name='name'\r\n                variant='outlined'\r\n                className={classes.myTextFieldRoot}\r\n              />\r\n            </Box>\r\n\r\n            <Box mb={{xs: 5, xl: 8}}>\r\n              <MyTextField\r\n                label={<IntlMessages id='common.email' />}\r\n                name='email'\r\n                variant='outlined'\r\n                className={classes.myTextFieldRoot}\r\n              />\r\n            </Box>\r\n\r\n            <GridContainer>\r\n              <Grid item xs={12} md={6}>\r\n                <Box mb={{xs: 5, xl: 8}}>\r\n                  <MyTextField\r\n                    label={<IntlMessages id='common.password' />}\r\n                    name='password'\r\n                    type='password'\r\n                    variant='outlined'\r\n                    className={classes.myTextFieldRoot}\r\n                  />\r\n                </Box>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={6}>\r\n                <Box mb={{xs: 4, xl: 8}}>\r\n                  <MyTextField\r\n                    label={<IntlMessages id='common.retypePassword' />}\r\n                    name='confirmPassword'\r\n                    type='password'\r\n                    variant='outlined'\r\n                    className={classes.myTextFieldRoot}\r\n                  />\r\n                </Box>\r\n              </Grid>\r\n            </GridContainer>\r\n\r\n            <Box\r\n              mb={{xs: 4, xl: 6}}\r\n              display='flex'\r\n              alignItems='center'\r\n              fontSize={18}>\r\n              <Box display='flex' alignItems='center'>\r\n                <Checkbox className={classes.checkboxRoot} />\r\n                <Box component='span' mr={2} fontSize={18}>\r\n                  <IntlMessages id='common.iAgreeTo' />\r\n                </Box>\r\n              </Box>\r\n              <Box\r\n                component='span'\r\n                color='primary.main'\r\n                fontSize={18}\r\n                className={classes.pointer}>\r\n                <IntlMessages id='common.termConditions' />\r\n              </Box>\r\n            </Box>\r\n\r\n            <Box\r\n              mb={6}\r\n              display='flex'\r\n              flexDirection={{xs: 'column', sm: 'row'}}\r\n              alignItems={{sm: 'center'}}\r\n              justifyContent={{sm: 'space-between'}}>\r\n              <Button\r\n                variant='contained'\r\n                color='primary'\r\n                disabled={isSubmitting}\r\n                className={classes.btnRoot}\r\n                type='submit'>\r\n                <IntlMessages id='common.signup' />\r\n              </Button>\r\n\r\n              <Box\r\n                color='text.secondary'\r\n                ml={{sm: 4}}\r\n                mt={{xs: 3, sm: 0}}\r\n                fontSize={18}>\r\n                <Box component='span' mr={1}>\r\n                  <IntlMessages id='common.alreadyHaveAccount' />\r\n                </Box>\r\n                <Box component='span'>\r\n                  <Link\r\n                    to='/signIn'\r\n                    className={clsx(\r\n                      classes.underlineNone,\r\n                      classes.colorTextPrimary,\r\n                    )}>\r\n                    <IntlMessages id='common.signIn' />\r\n                  </Link>\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n\r\n      <Divider className={classes.dividerRoot} />\r\n\r\n      <Box display='flex' justifyContent='center' alignItems='center' my={0.8}>\r\n        <Button\r\n          variant='contained'\r\n          color='secondary'\r\n          type='submit'\r\n          className={clsx(classes.btnRoot, classes.btnRootFull)}>\r\n          <IntlMessages id='auth.signupWithJwt' />\r\n        </Button>\r\n      </Box>\r\n\r\n      <InfoView />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SignupJwtAuth;\r\n","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Checkbox} from '@material-ui/core';\r\nimport {Form, Formik, useField} from 'formik';\r\nimport * as yup from 'yup';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport {useDispatch} from 'react-redux';\r\n\r\nimport InfoView from '@crema/core/InfoView';\r\nimport {\r\n  onSignUpFirebaseUser,\r\n  signInUserWithFacebook,\r\n  signInUserWithGithub,\r\n  signInUserWithGoogle,\r\n  signInUserWithTwitter,\r\n} from '../../../redux/actions';\r\nimport {Link} from 'react-router-dom';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\nimport IntlMessages from '../../../@crema/utility/IntlMessages';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {GridContainer} from '../../../@crema';\r\n\r\nconst MyTextField = props => {\r\n  const [field, meta] = useField(props);\r\n  const errorText = meta.error && meta.touched ? meta.error : '';\r\n  return (\r\n    <TextField\r\n      {...props}\r\n      {...field}\r\n      helperText={errorText}\r\n      error={!!errorText}\r\n    />\r\n  );\r\n};\r\n\r\nconst validationSchema = yup.object({\r\n  name: yup.string().required(<IntlMessages id='validation.nameRequired' />),\r\n  email: yup\r\n    .string()\r\n    .email(<IntlMessages id='validation.emailFormat' />)\r\n    .required(<IntlMessages id='validation.emailRequired' />),\r\n  password: yup\r\n    .string()\r\n    .required(<IntlMessages id='validation.passwordRequired' />),\r\n  confirmPassword: yup\r\n    .string()\r\n    .required(<IntlMessages id='validation.reTypePassword' />),\r\n});\r\n\r\nconst SignupFirebase = props => {\r\n  const dispatch = useDispatch();\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    formRoot: {\r\n      textAlign: 'left',\r\n    },\r\n    myTextFieldRoot: {\r\n      width: '100%',\r\n    },\r\n    checkboxRoot: {\r\n      marginLeft: -12,\r\n    },\r\n    pointer: {\r\n      cursor: 'pointer',\r\n    },\r\n    btnRoot: {\r\n      borderRadius: 30,\r\n      width: '10rem',\r\n      fontFamily: Fonts.BOLD,\r\n      fontSize: 16,\r\n      textTransform: 'capitalize',\r\n      [theme.breakpoints.up('sm')]: {\r\n        fontSize: 18,\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        fontSize: 20,\r\n      },\r\n    },\r\n    dividerRoot: {\r\n      marginBottom: 10,\r\n      marginLeft: -48,\r\n      marginRight: -48,\r\n      [theme.breakpoints.up('xl')]: {\r\n        marginBottom: 20,\r\n      },\r\n    },\r\n    iconButtonRoot: {\r\n      marginLeft: 4,\r\n      marginRight: 4,\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: 8,\r\n        marginRight: 8,\r\n      },\r\n    },\r\n    textLg: {\r\n      fontSize: 18,\r\n    },\r\n    textPrimary: {\r\n      color: theme.palette.text.primary,\r\n    },\r\n    colorTextPrimary: {\r\n      color: theme.palette.primary.main,\r\n    },\r\n    underlineNone: {\r\n      textDecoration: 'none',\r\n    },\r\n  }));\r\n  const classes = useStyles(props);\r\n  return (\r\n    <Box\r\n      px={{xs: 0, sm: 4, xl: 8}}\r\n      pt={{xs: 5, xl: 8}}\r\n      flex={1}\r\n      display='flex'\r\n      flexDirection='column'>\r\n      <Formik\r\n        validateOnChange={true}\r\n        initialValues={{\r\n          name: '',\r\n          email: '',\r\n          password: '',\r\n          confirmPassword: '',\r\n        }}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(data, {setErrors, setSubmitting}) => {\r\n          if (data.password !== data.confirmPassword) {\r\n            setErrors({\r\n              confirmPassword: (\r\n                <IntlMessages id='validation.passwordMisMatch' />\r\n              ),\r\n            });\r\n          } else {\r\n            setSubmitting(true);\r\n            dispatch(\r\n              onSignUpFirebaseUser({\r\n                email: data.email,\r\n                password: data.password,\r\n                name: data.name,\r\n              }),\r\n            );\r\n            setSubmitting(false);\r\n          }\r\n        }}>\r\n        {({isSubmitting}) => (\r\n          <Form className={classes.formRoot} noValidate autoComplete='off'>\r\n            <Box mb={{xs: 5, xl: 8}}>\r\n              <MyTextField\r\n                label={<IntlMessages id='common.name' />}\r\n                name='name'\r\n                variant='outlined'\r\n                className={classes.myTextFieldRoot}\r\n              />\r\n            </Box>\r\n\r\n            <Box mb={{xs: 5, xl: 8}}>\r\n              <MyTextField\r\n                label={<IntlMessages id='common.email' />}\r\n                name='email'\r\n                variant='outlined'\r\n                className={classes.myTextFieldRoot}\r\n              />\r\n            </Box>\r\n\r\n            <GridContainer>\r\n              <Grid item xs={12} md={6}>\r\n                <Box mb={{xs: 5, xl: 8}}>\r\n                  <MyTextField\r\n                    label={<IntlMessages id='common.password' />}\r\n                    name='password'\r\n                    type='password'\r\n                    variant='outlined'\r\n                    className={classes.myTextFieldRoot}\r\n                  />\r\n                </Box>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={6}>\r\n                <Box mb={{xs: 4, xl: 8}}>\r\n                  <MyTextField\r\n                    label={<IntlMessages id='common.retypePassword' />}\r\n                    name='confirmPassword'\r\n                    type='password'\r\n                    variant='outlined'\r\n                    className={classes.myTextFieldRoot}\r\n                  />\r\n                </Box>\r\n              </Grid>\r\n            </GridContainer>\r\n\r\n            <Box\r\n              mb={{xs: 4, xl: 6}}\r\n              display='flex'\r\n              alignItems='center'\r\n              fontSize={18}>\r\n              <Box display='flex' alignItems='center'>\r\n                <Checkbox className={classes.checkboxRoot} />\r\n                <Box component='span' mr={2} fontSize={18}>\r\n                  <IntlMessages id='common.iAgreeTo' />\r\n                </Box>\r\n              </Box>\r\n              <Box\r\n                color='primary.main'\r\n                component='span'\r\n                fontSize={18}\r\n                className={classes.pointer}>\r\n                <IntlMessages id='common.termConditions' />\r\n              </Box>\r\n            </Box>\r\n\r\n            <Box\r\n              mb={6}\r\n              display='flex'\r\n              flexDirection={{xs: 'column', sm: 'row'}}\r\n              alignItems={{sm: 'center'}}\r\n              justifyContent={{sm: 'space-between'}}>\r\n              <Button\r\n                variant='contained'\r\n                color='primary'\r\n                disabled={isSubmitting}\r\n                className={classes.btnRoot}\r\n                type='submit'>\r\n                <IntlMessages id='common.signup' />\r\n              </Button>\r\n\r\n              <Box\r\n                ml={{sm: 4}}\r\n                mt={{xs: 3, sm: 0}}\r\n                color='text.secondary'\r\n                fontSize={18}>\r\n                <Box component='span' mr={1}>\r\n                  <IntlMessages id='common.alreadyHaveAccount' />\r\n                </Box>\r\n                <Box component='span'>\r\n                  <Link\r\n                    to='/signin'\r\n                    className={clsx(\r\n                      classes.underlineNone,\r\n                      classes.colorTextPrimary,\r\n                    )}>\r\n                    <IntlMessages id='common.signIn' />\r\n                  </Link>\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n\r\n      <Divider className={classes.dividerRoot} />\r\n\r\n      <Box\r\n        display='flex'\r\n        flexDirection={{xs: 'column', sm: 'row'}}\r\n        justifyContent='center'\r\n        alignItems='center'>\r\n        <Box component='span' color='text.secondary' mr={{sm: 4}} fontSize={18}>\r\n          <IntlMessages id='auth.orSignupWith' />\r\n        </Box>\r\n        <Box display='inline-block'>\r\n          <IconButton\r\n            className={classes.iconButtonRoot}\r\n            onClick={() => dispatch(signInUserWithGoogle())}>\r\n            <i\r\n              className={clsx(\r\n                classes.textLg,\r\n                classes.textPrimary,\r\n                'zmdi zmdi-google',\r\n              )}\r\n            />\r\n          </IconButton>\r\n          <IconButton\r\n            className={classes.iconButtonRoot}\r\n            onClick={() => dispatch(signInUserWithFacebook())}>\r\n            <FacebookIcon className={classes.textPrimary} />\r\n          </IconButton>\r\n          <IconButton\r\n            className={classes.iconButtonRoot}\r\n            onClick={() => dispatch(signInUserWithGithub())}>\r\n            <GitHubIcon className={classes.textPrimary} />\r\n          </IconButton>\r\n          <IconButton\r\n            className={classes.iconButtonRoot}\r\n            onClick={() => dispatch(signInUserWithTwitter())}>\r\n            <TwitterIcon className={classes.textPrimary} />\r\n          </IconButton>\r\n        </Box>\r\n      </Box>\r\n\r\n      <InfoView />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SignupFirebase;\r\n","import React, {useState} from 'react';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport SignupAwsCognito from './SignupAwsCognito';\r\nimport SignupJwtAuth from './SignupJwtAuth';\r\nimport SignupFirebase from './SignupFirebase';\r\nimport Card from '@material-ui/core/Card';\r\nimport Box from '@material-ui/core/Box';\r\nimport IntlMessages from '../../../@crema/utility/IntlMessages';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\n\r\nconst Signup = props => {\r\n  const [value, setValue] = useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const a11yProps = index => {\r\n    return {\r\n      id: `simple-tab-${index}`,\r\n      'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n  };\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    imgRoot: {\r\n      cursor: 'pointer',\r\n      display: 'inline-block',\r\n    },\r\n    cardRoot: {\r\n      maxWidth: '40rem',\r\n      width: '100%',\r\n      overflow: 'hidden',\r\n      boxShadow: '0 10px 15px -3px rgba(0, 0, 0, 0.1)',\r\n      textAlign: 'center',\r\n      padding: '10px 24px',\r\n      [theme.breakpoints.up('sm')]: {\r\n        paddingLeft: 32,\r\n        paddingRight: 32,\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        paddingtop: 24,\r\n        paddingBottom: 32,\r\n      },\r\n    },\r\n    btnRoot: {\r\n      borderRadius: 30,\r\n      width: '100%',\r\n      fontFamily: Fonts.BOLD,\r\n      fontSize: 16,\r\n      paddingTop: 12,\r\n      paddingBottom: 12,\r\n      textTransform: 'capitalize',\r\n      [theme.breakpoints.up('sm')]: {\r\n        fontSize: 18,\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        fontSize: 20,\r\n      },\r\n    },\r\n    muiTabsFull: {\r\n      marginLeft: 0,\r\n      marginRight: 0,\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: -32,\r\n        marginRight: -32,\r\n      },\r\n      '& .MuiTabs-flexContainer': {\r\n        '& .MuiTab-root': {\r\n          flex: 1,\r\n        },\r\n      },\r\n    },\r\n    muiTab: {\r\n      fontFamily: Fonts.BOLD,\r\n      fontSize: 14,\r\n      paddingBottom: 16,\r\n      paddingTop: 16,\r\n      marginLeft: 8,\r\n      marginRight: 8,\r\n      [theme.breakpoints.up('sm')]: {\r\n        fontSize: 18,\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        fontSize: 20,\r\n      },\r\n    },\r\n    textUppercase: {\r\n      textTransform: 'uppercase',\r\n    },\r\n  }));\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <Box pb={8} px={{md: 6}} flex={1} display='flex' flexDirection='column'>\r\n      <Box mb={4} mt={{xl: 4}} textAlign={{xs: 'center', sm: 'left'}}>\r\n        <img\r\n          className={classes.imgRoot}\r\n          src={require('assets/images/logo-white-with-name.png')}\r\n          alt='crema-logo'\r\n        />\r\n      </Box>\r\n\r\n      <Box\r\n        mt={{lg: -14, xl: -6}}\r\n        flex={1}\r\n        display='flex'\r\n        flexDirection='column'\r\n        justifyContent='center'\r\n        alignItems='center'>\r\n        <Box\r\n          component='h2'\r\n          mb={{xs: 6, xl: 8}}\r\n          color='primary.contrastText'\r\n          fontFamily={Fonts.BOLD}\r\n          fontSize={{xs: 24, xl: 30}}\r\n          className={classes.textUppercase}>\r\n          <IntlMessages id='common.signup' />\r\n        </Box>\r\n\r\n        <Card className={classes.cardRoot}>\r\n          <Tabs\r\n            value={value}\r\n            onChange={handleChange}\r\n            indicatorColor='primary'\r\n            textColor='primary'\r\n            aria-label='simple tabs example'\r\n            className={classes.muiTabsFull}>\r\n            <Tab\r\n              className={classes.muiTab}\r\n              label='aws cognito'\r\n              {...a11yProps(1)}\r\n            />\r\n            <Tab\r\n              className={classes.muiTab}\r\n              label='jwt auth'\r\n              {...a11yProps(2)}\r\n            />\r\n            <Tab\r\n              className={classes.muiTab}\r\n              label='firebase'\r\n              {...a11yProps(0)}\r\n            />\r\n          </Tabs>\r\n\r\n          <>\r\n            {value === 0 && <SignupFirebase />}\r\n            {value === 1 && <SignupAwsCognito />}\r\n            {value === 2 && <SignupJwtAuth />}\r\n          </>\r\n        </Card>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n"],"sourceRoot":""}