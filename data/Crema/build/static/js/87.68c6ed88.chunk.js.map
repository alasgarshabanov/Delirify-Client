{"version":3,"sources":["assets/images/errorPageImages/comingsoon.png","modules/errorPages/ComingSoon/index.js"],"names":["module","exports","MyTextField","props","useField","field","meta","errorText","error","touched","helperText","validationSchema","yup","email","required","ComingSoon","dispatch","useDispatch","classes","makeStyles","theme","form","display","flexDirection","alignItems","marginBottom","textField","width","button","fontFamily","Fonts","BOLD","fontSize","textTransform","padding","useStyles","py","xl","flex","justifyContent","textAlign","component","mb","xs","md","id","color","grey","MEDIUM","mx","maxWidth","validateOnChange","initialValues","onSubmit","data","resetForm","showMessage","className","placeholder","name","label","variant","type","sm","src","require","alt"],"mappings":"qFAAAA,EAAOC,QAAU,IAA0B,wC,uLCerCC,EAAc,SAAAC,GAAU,IAAD,EACLC,YAASD,GADJ,mBACpBE,EADoB,KACbC,EADa,KAErBC,EAAYD,EAAKE,OAASF,EAAKG,QAAUH,EAAKE,MAAQ,GAC5D,OACE,kBAAC,IAAD,iBACML,EACAE,EAFN,CAGEK,WAAYH,EACZC,QAASD,MAKTI,EAAmBC,IAAW,CAClCC,MAAOD,MAEJC,MAAM,gDACNC,SAAS,iCAwGCC,UArGI,WACjB,IAAMC,EAAWC,cAuBXC,EArBYC,aAAW,SAAAC,GAC3B,MAAO,CACLC,KAAM,CACJC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,aAAc,IAEhBC,UAAW,CACTC,MAAO,OACPF,aAAc,IAEhBG,OAAQ,CACNC,WAAYC,IAAMC,KAClBC,SAAU,GACVC,cAAe,aACfC,QAAS,eAKCC,GAEhB,OACE,kBAAC,IAAD,CACEC,GAAI,CAACC,GAAI,GACTC,KAAM,EACNhB,QAAQ,OACRC,cAAc,SACdgB,eAAe,SACff,WAAW,SACXgB,UAAU,UACV,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,UAAU,KACVC,GAAI,CAACC,GAAI,EAAGN,GAAI,IAChBL,SAAU,CAACW,GAAI,GAAIC,GAAI,IACvBf,WAAYC,IAAMC,MAClB,kBAAC,IAAD,CAAcc,GAAG,qBALnB,KAOA,kBAAC,IAAD,CACEH,GAAI,CAACC,GAAI,EAAGN,GAAI,IAChBS,MAAOC,IAAK,KACZlB,WAAYC,IAAMkB,OAClBhB,SAAU,IACV,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAca,GAAG,8BAEnB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAcA,GAAG,+BAGrB,kBAAC,IAAD,CAAKI,GAAG,OAAOP,GAAI,EAAGQ,SAAU,KAC9B,kBAAC,IAAD,CACEC,kBAAkB,EAClBC,cAAe,CACbvC,MAAO,IAETF,iBAAkBA,EAClB0C,SAAU,SAACC,EAAD,GAAwB,IAAhBC,EAAe,EAAfA,UAChBvC,EACEwC,YAAY,kBAAC,IAAD,CAAcX,GAAG,mCAE/BU,OAED,kBACC,kBAAC,IAAD,CAAME,UAAWvC,EAAQG,MACvB,kBAACnB,EAAD,CACEwD,YAAY,QACZC,KAAK,QACLC,MAAO,kBAAC,IAAD,CAAcf,GAAG,wBACxBY,UAAWvC,EAAQQ,UACnBmC,QAAQ,aAGV,kBAAC,IAAD,CACEA,QAAQ,YACRf,MAAM,UACNgB,KAAK,SACLL,UAAWvC,EAAQU,QACnB,kBAAC,IAAD,CAAciB,GAAG,yBAM3B,kBAAC,IAAD,CAAKH,GAAI,EAAGQ,SAAU,CAACP,GAAI,IAAKoB,GAAI,IAAK1B,GAAI,KAAMV,MAAM,QACvD,yBACEqC,IAAKC,EAAQ,MACbC,IAAI,UAIV,kBAAC,IAAD","file":"static/js/87.68c6ed88.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/comingsoon.0bb2addc.png\";","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {useDispatch} from 'react-redux';\r\nimport {Form, Formik, useField} from 'formik';\r\nimport * as yup from 'yup';\r\nimport {showMessage} from '../../../redux/actions/Common';\r\nimport InfoView from '@crema/core/InfoView';\r\nimport IntlMessages from '../../../@crema/utility/IntlMessages';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {grey} from '@material-ui/core/colors';\r\nimport {makeStyles} from '@material-ui/core';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\n\r\nconst MyTextField = props => {\r\n  const [field, meta] = useField(props);\r\n  const errorText = meta.error && meta.touched ? meta.error : '';\r\n  return (\r\n    <TextField\r\n      {...props}\r\n      {...field}\r\n      helperText={errorText}\r\n      error={!!errorText}\r\n    />\r\n  );\r\n};\r\n\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string()\r\n    .email('The Email you entered is not a valid format!')\r\n    .required('Please enter Email Address!'),\r\n});\r\n\r\nconst ComingSoon = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const useStyles = makeStyles(theme => {\r\n    return {\r\n      form: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        marginBottom: 12,\r\n      },\r\n      textField: {\r\n        width: '100%',\r\n        marginBottom: 20,\r\n      },\r\n      button: {\r\n        fontFamily: Fonts.BOLD,\r\n        fontSize: 20,\r\n        textTransform: 'capitalize',\r\n        padding: '8px 32px',\r\n      },\r\n    };\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box\r\n      py={{xl: 8}}\r\n      flex={1}\r\n      display='flex'\r\n      flexDirection='column'\r\n      justifyContent='center'\r\n      alignItems='center'\r\n      textAlign='center'>\r\n      <Box>\r\n        <Box\r\n          component='h3'\r\n          mb={{xs: 4, xl: 10}}\r\n          fontSize={{xs: 24, md: 28}}\r\n          fontFamily={Fonts.BOLD}>\r\n          <IntlMessages id='error.comingSoon' />!\r\n        </Box>\r\n        <Box\r\n          mb={{xs: 5, xl: 12}}\r\n          color={grey[600]}\r\n          fontFamily={Fonts.MEDIUM}\r\n          fontSize={20}>\r\n          <Typography>\r\n            <IntlMessages id='error.comingSoonMessage1' />\r\n          </Typography>\r\n          <Typography>\r\n            <IntlMessages id='error.comingSoonMessage2' />\r\n          </Typography>\r\n        </Box>\r\n        <Box mx='auto' mb={5} maxWidth={384}>\r\n          <Formik\r\n            validateOnChange={true}\r\n            initialValues={{\r\n              email: '',\r\n            }}\r\n            validationSchema={validationSchema}\r\n            onSubmit={(data, {resetForm}) => {\r\n              dispatch(\r\n                showMessage(<IntlMessages id='error.comingSoonNotification' />),\r\n              );\r\n              resetForm();\r\n            }}>\r\n            {() => (\r\n              <Form className={classes.form}>\r\n                <MyTextField\r\n                  placeholder='Email'\r\n                  name='email'\r\n                  label={<IntlMessages id='common.emailAddress' />}\r\n                  className={classes.textField}\r\n                  variant='outlined'\r\n                />\r\n\r\n                <Button\r\n                  variant='contained'\r\n                  color='primary'\r\n                  type='submit'\r\n                  className={classes.button}>\r\n                  <IntlMessages id='error.notifyMe' />\r\n                </Button>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </Box>\r\n        <Box mb={5} maxWidth={{xs: 300, sm: 400, xl: 672}} width='100%'>\r\n          <img\r\n            src={require('assets/images/errorPageImages/comingsoon.png')}\r\n            alt='404'\r\n          />\r\n        </Box>\r\n      </Box>\r\n      <InfoView />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ComingSoon;\r\n"],"sourceRoot":""}