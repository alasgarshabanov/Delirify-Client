{"version":3,"sources":["assets/images/userPageImages/ForgotPassword.png","modules/userPages/StyledUserPages/ForgetPassword.js"],"names":["module","exports","MyTextField","props","useField","field","meta","errorText","error","touched","helperText","validationSchema","yup","email","id","required","ForgetPassword","classes","makeStyles","theme","styledImg","display","width","height","objectFit","textField","card","maxWidth","textAlign","overflow","boxShadow","form","button","useStyles","pb","py","xl","flex","flexDirection","alignItems","justifyContent","className","container","item","xs","lg","src","require","alt","title","p","px","mb","fontFamily","Fonts","BOLD","fontSize","sm","component","validateOnChange","initialValues","onSubmit","data","setSubmitting","resetForm","isSubmitting","name","label","variant","color","disabled","type"],"mappings":"qFAAAA,EAAOC,QAAU,IAA0B,4C,sKCYrCC,EAAc,SAAAC,GAAU,IAAD,EACLC,YAASD,GADJ,mBACpBE,EADoB,KACbC,EADa,KAErBC,EAAYD,EAAKE,OAASF,EAAKG,QAAUH,EAAKE,MAAQ,GAC5D,OACE,kBAAC,IAAD,iBACML,EACAE,EAFN,CAGEK,WAAYH,EACZC,QAASD,MAKTI,EAAmBC,IAAW,CAClCC,MAAOD,MAEJC,MAAM,kBAAC,IAAD,CAAcC,GAAG,4BACvBC,SAAS,kBAAC,IAAD,CAAcD,GAAG,gCA+GhBE,UA5GQ,WACrB,IA0BMC,EA1BYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,UAAW,CACTC,QAAS,eACTC,MAAO,OACPC,OAAQ,OACRC,UAAW,SAEbC,UAAW,CACTH,MAAO,QAETI,KAAM,CACJC,SAAU,KACVL,MAAO,OACPM,UAAW,SACXC,SAAU,SACVC,UACE,2EAEJC,KAAM,CACJH,UAAW,QAEbI,OAAQ,CACNV,MAAO,WAIKW,GAEhB,OACE,kBAAC,IAAD,CACEC,GAAI,EACJC,GAAI,CAACC,GAAI,GACTf,QAAQ,OACRgB,KAAM,EACNC,cAAc,SACdC,WAAW,SACXC,eAAe,UACf,kBAAC,IAAD,CAAMC,UAAWxB,EAAQS,MACvB,kBAAC,IAAD,CAAMgB,WAAS,GACb,kBAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAAC,IAAD,CAAKvB,MAAM,OAAOC,OAAO,QACvB,yBACEkB,UAAWxB,EAAQG,UACnB0B,IAAKC,EAAQ,MACbC,IAAI,QACJC,MAAM,YAKZ,kBAAC,IAAD,CAAMN,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAAC,IAAD,CAAKK,EAAG,CAACN,GAAI,EAAGC,GAAI,IAAKM,GAAI,CAACf,GAAI,IAAKD,GAAI,CAACC,GAAI,KAC9C,kBAAC,IAAD,CACEgB,GAAI,CAACR,GAAI,EAAGR,GAAI,GAChBiB,WAAYC,IAAMC,KAClBC,SAAU,CAACZ,GAAI,GAAIa,GAAI,GAAIrB,GAAI,KAC/B,kBAAC,IAAD,CAActB,GAAG,2BAEnB,kBAAC,IAAD,CAAKsC,GAAI,CAACR,GAAI,EAAGR,GAAI,IAAKoB,SAAU,CAACZ,GAAI,GAAIR,GAAI,KAC/C,kBAAC,IAAD,CAAYsB,UAAU,KACpB,kBAAC,IAAD,CAAc5C,GAAG,kCAEnB,kBAAC,IAAD,CAAY4C,UAAU,KACpB,kBAAC,IAAD,CAAc5C,GAAG,mCAGrB,kBAAC,IAAD,CACE6C,kBAAkB,EAClBC,cAAe,CACb/C,MAAO,IAETF,iBAAkBA,EAClBkD,SAAU,SAACC,EAAD,GAAuC,IAA/BC,EAA8B,EAA9BA,cAAeC,EAAe,EAAfA,UAC/BD,GAAc,GACdA,GAAc,GACdC,OAED,gBAAEC,EAAF,EAAEA,aAAF,OACC,kBAAC,IAAD,CAAMxB,UAAWxB,EAAQc,MACvB,kBAAC,IAAD,CAAKqB,GAAI,CAACR,GAAI,EAAGC,GAAI,EAAGT,GAAI,KAC1B,kBAAClC,EAAD,CACEgE,KAAK,QACLC,MAAO,kBAAC,IAAD,CAAcrD,GAAG,wBACxB2B,UAAWxB,EAAQQ,UACnB2C,QAAQ,cAIZ,kBAAC,IAAD,CACEA,QAAQ,YACRC,MAAM,UACNC,SAAUL,EACVxB,UAAWxB,EAAQe,OACnBuC,KAAK,UALP","file":"static/js/96.c8f7a081.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ForgotPassword.c3729499.png\";","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Form, Formik, useField} from 'formik';\r\nimport * as yup from 'yup';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IntlMessages from '../../../@crema/utility/IntlMessages';\r\nimport Box from '@material-ui/core/Box';\r\nimport {makeStyles, Typography} from '@material-ui/core';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\n\r\nconst MyTextField = props => {\r\n  const [field, meta] = useField(props);\r\n  const errorText = meta.error && meta.touched ? meta.error : '';\r\n  return (\r\n    <TextField\r\n      {...props}\r\n      {...field}\r\n      helperText={errorText}\r\n      error={!!errorText}\r\n    />\r\n  );\r\n};\r\n\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string()\r\n    .email(<IntlMessages id='validation.emailFormat' />)\r\n    .required(<IntlMessages id='validation.emailRequired' />),\r\n});\r\n\r\nconst ForgetPassword = () => {\r\n  const useStyles = makeStyles(theme => ({\r\n    styledImg: {\r\n      display: 'inline-block',\r\n      width: '100%',\r\n      height: '100%',\r\n      objectFit: 'cover',\r\n    },\r\n    textField: {\r\n      width: '100%',\r\n    },\r\n    card: {\r\n      maxWidth: 1024,\r\n      width: '100%',\r\n      textAlign: 'center',\r\n      overflow: 'hidden',\r\n      boxShadow:\r\n        '0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)',\r\n    },\r\n    form: {\r\n      textAlign: 'left',\r\n    },\r\n    button: {\r\n      width: '100%',\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box\r\n      pb={6}\r\n      py={{xl: 8}}\r\n      display='flex'\r\n      flex={1}\r\n      flexDirection='column'\r\n      alignItems='center'\r\n      justifyContent='center'>\r\n      <Card className={classes.card}>\r\n        <Grid container>\r\n          <Grid item xs={12} lg={6}>\r\n            <Box width='100%' height='100%'>\r\n              <img\r\n                className={classes.styledImg}\r\n                src={require('assets/images/userPageImages/ForgotPassword.png')}\r\n                alt='crema'\r\n                title='crema'\r\n              />\r\n            </Box>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} lg={6}>\r\n            <Box p={{xs: 8, lg: 12}} px={{xl: 16}} py={{xl: 12}}>\r\n              <Box\r\n                mb={{xs: 4, xl: 8}}\r\n                fontFamily={Fonts.BOLD}\r\n                fontSize={{xs: 20, sm: 20, xl: 24}}>\r\n                <IntlMessages id='common.forgetPassword' />\r\n              </Box>\r\n              <Box mb={{xs: 6, xl: 10}} fontSize={{xs: 16, xl: 18}}>\r\n                <Typography component='p'>\r\n                  <IntlMessages id='common.forgetPasswordTextOne' />\r\n                </Typography>\r\n                <Typography component='p'>\r\n                  <IntlMessages id='common.forgetPasswordTextTwo' />\r\n                </Typography>\r\n              </Box>\r\n              <Formik\r\n                validateOnChange={true}\r\n                initialValues={{\r\n                  email: '',\r\n                }}\r\n                validationSchema={validationSchema}\r\n                onSubmit={(data, {setSubmitting, resetForm}) => {\r\n                  setSubmitting(true);\r\n                  setSubmitting(false);\r\n                  resetForm();\r\n                }}>\r\n                {({isSubmitting}) => (\r\n                  <Form className={classes.form}>\r\n                    <Box mb={{xs: 5, lg: 8, xl: 12}}>\r\n                      <MyTextField\r\n                        name='email'\r\n                        label={<IntlMessages id='common.emailAddress' />}\r\n                        className={classes.textField}\r\n                        variant='outlined'\r\n                      />\r\n                    </Box>\r\n\r\n                    <Button\r\n                      variant='contained'\r\n                      color='primary'\r\n                      disabled={isSubmitting}\r\n                      className={classes.button}\r\n                      type='submit'>\r\n                      Send password\r\n                    </Button>\r\n                  </Form>\r\n                )}\r\n              </Formik>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ForgetPassword;\r\n"],"sourceRoot":""}