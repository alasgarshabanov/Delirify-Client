{"version":3,"sources":["../node_modules/react-intl/lib/components/useIntl.js","@crema/services/db/extraPages/portFolio/sales.js","@crema/services/db/extraPages/portFolio/installation.js","modules/extraPages/KnowledgeBase/KBItem.js","modules/extraPages/KnowledgeBase/Sales.js","modules/extraPages/KnowledgeBase/Installation.js","modules/extraPages/KnowledgeBase/index.js"],"names":["useIntl","intl","useContext","Context","invariantIntlContext","salesData","id","ques","ans","tags","installationData","KbItem","data","classes","makeStyles","theme","scrollBar","padding","marginBottom","maxHeight","chip","margin","useStyles","Grid","item","xs","sm","md","Box","p","clone","Card","mb","component","fontSize","xl","className","mx","map","tag","index","Chip","label","variant","key","Sales","saleQueries","lg","color","fontFamily","Fonts","BOLD","IntlMessages","GridContainer","sale","KBItem","Installation","installationQueries","KnowledgeBase","messages","useState","filterText","setFilterText","filter","includes","divider","marginTop","breakpoints","up","flex","textAlign","maxWidth","TextField","placeholder","style","width","InputProps","startAdornment","MEDIUM","InputAdornment","position","value","onChange","event","target","Divider"],"mappings":"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","file":"static/js/90.f6bf5cc2.chunk.js","sourcesContent":["import { useContext } from 'react';\nimport { Context } from './injectIntl';\nimport { invariantIntlContext } from '../utils';\nexport default function useIntl() {\n    const intl = useContext(Context);\n    invariantIntlContext(intl);\n    return intl;\n}\n","export const salesData = [\r\n  {\r\n    id: 2001,\r\n    ques: 'How much one could earn using your products?',\r\n    ans:\r\n      \"orem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries.\",\r\n    tags: ['SALES', 'EARNING', 'PRE-SALES'],\r\n  },\r\n  {\r\n    id: 2002,\r\n    ques: 'What are some common taxes applied to these products?',\r\n    ans:\r\n      \"orem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries.\",\r\n    tags: ['SALES', 'EARNING', 'PRE-SALES'],\r\n  },\r\n  {\r\n    id: 2003,\r\n    ques: 'What is the commission structues you are offering to affiliates?',\r\n    ans:\r\n      \"orem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries.\",\r\n    tags: ['SALES', 'EARNING', 'PRE-SALES'],\r\n  },\r\n  {\r\n    id: 2004,\r\n    ques: 'How much incentive do you pay if someone reaches the sale goal?',\r\n    ans:\r\n      \"orem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries.\",\r\n    tags: ['SALES', 'EARNING', 'PRE-SALES'],\r\n  },\r\n  {\r\n    id: 2005,\r\n    ques: 'How much one could earn using your products?',\r\n    ans:\r\n      \"orem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries.\",\r\n    tags: ['SALES', 'EARNING', 'PRE-SALES'],\r\n  },\r\n];\r\n","export const installationData = [\r\n  {\r\n    id: 2001,\r\n    ques: 'Approximately how many people work in your company?',\r\n    ans:\r\n      \"orem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries.\",\r\n    tags: ['SALES', 'EARNING', 'PRE-SALES'],\r\n  },\r\n  {\r\n    id: 2002,\r\n    ques: 'What are some common system requirement to install your software?',\r\n    ans:\r\n      \"orem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries.\",\r\n    tags: ['SALES', 'EARNING', 'PRE-SALES'],\r\n  },\r\n  {\r\n    id: 2003,\r\n    ques: 'What are some pre-requisites before installing your software?',\r\n    ans:\r\n      \"orem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries.\",\r\n    tags: ['SALES', 'EARNING', 'PRE-SALES'],\r\n  },\r\n  {\r\n    id: 2004,\r\n    ques:\r\n      'Is there any document available for instructions regarding to installation of software?',\r\n    ans:\r\n      \"orem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries.\",\r\n    tags: ['SALES', 'EARNING', 'PRE-SALES'],\r\n  },\r\n  {\r\n    id: 2005,\r\n    ques: 'What are some common system requirement to install your software?',\r\n    ans:\r\n      \"orem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries.\",\r\n    tags: ['SALES', 'EARNING', 'PRE-SALES'],\r\n  },\r\n];\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport Box from '@material-ui/core/Box';\r\nimport {makeStyles} from '@material-ui/core';\r\n\r\nconst KbItem = ({data}) => {\r\n  const useStyles = makeStyles(theme => ({\r\n    scrollBar: {\r\n      padding: 0,\r\n      marginBottom: 20,\r\n      maxHeight: 130,\r\n    },\r\n    chip: {\r\n      margin: 8,\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid item xs={12} sm={6} md={4}>\r\n      <Box p={5} clone>\r\n        <Card>\r\n          <Box mb={5} component='h5' fontSize={{xs: 16, xl: 18}}>\r\n            {data.ques}\r\n          </Box>\r\n          <PerfectScrollbar className={classes.scrollBar}>\r\n            <Box component='p'>{data.ans}</Box>\r\n          </PerfectScrollbar>\r\n          <Box mx={-2}>\r\n            {data.tags.map((tag, index) => {\r\n              return (\r\n                <Chip\r\n                  label={tag}\r\n                  variant='outlined'\r\n                  className={classes.chip}\r\n                  key={index}\r\n                />\r\n              );\r\n            })}\r\n          </Box>\r\n        </Card>\r\n      </Box>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default KbItem;\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport IntlMessages from '../../../@crema/utility/IntlMessages';\r\nimport KBItem from './KBItem';\r\nimport GridContainer from '../../../@crema/core/GridContainer';\r\nimport PropTypes from 'prop-types';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\n\r\nconst Sales = ({saleQueries}) => {\r\n  return (\r\n    <Box mb={{xs: 6, lg: 10}}>\r\n      <Box\r\n        component='h3'\r\n        color='text.primary'\r\n        mb={{xs: 4, lg: 6}}\r\n        fontSize={{xs: 18, sm: 20, xl: 24}}\r\n        fontFamily={Fonts.BOLD}>\r\n        <IntlMessages id='knowledge.sales' />\r\n      </Box>\r\n      <GridContainer>\r\n        {saleQueries.map((sale, index) => (\r\n          <KBItem data={sale} key={index} />\r\n        ))}\r\n      </GridContainer>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Sales;\r\n\r\nSales.propTypes = {\r\n  saleQueries: PropTypes.array.isRequired,\r\n};\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport IntlMessages from '../../../@crema/utility/IntlMessages';\r\nimport KBItem from './KBItem';\r\nimport GridContainer from '../../../@crema/core/GridContainer';\r\nimport PropTypes from 'prop-types';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\n\r\nconst Installation = ({installationQueries}) => {\r\n  return (\r\n    <Box mb={2}>\r\n      <Box\r\n        component='h3'\r\n        color='text.primary'\r\n        mb={{xs: 4, lg: 6}}\r\n        fontSize={{xs: 18, sm: 20, xl: 24}}\r\n        fontFamily={Fonts.BOLD}>\r\n        <IntlMessages id='knowledge.installation' />\r\n      </Box>\r\n      <GridContainer>\r\n        {installationQueries.map(data => (\r\n          <KBItem data={data} key={data.id} />\r\n        ))}\r\n      </GridContainer>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Installation;\r\n\r\nInstallation.propTypes = {\r\n  installationQueries: PropTypes.array.isRequired,\r\n};\r\n","import React, {useState} from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport {salesData} from '../../../@crema/services/db/extraPages/portFolio/sales';\r\nimport {installationData} from '../../../@crema/services/db/extraPages/portFolio/installation';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport IntlMessages from '../../../@crema/utility/IntlMessages';\r\nimport {useIntl} from 'react-intl';\r\nimport Box from '@material-ui/core/Box';\r\nimport Sales from './Sales';\r\nimport Installation from './Installation';\r\nimport {makeStyles} from '@material-ui/core';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\n\r\nconst KnowledgeBase = () => {\r\n  const {messages} = useIntl();\r\n\r\n  const [filterText, setFilterText] = useState('');\r\n\r\n  const saleQueries =\r\n    filterText !== ''\r\n      ? salesData.filter(data => data.ques.includes(filterText))\r\n      : salesData;\r\n\r\n  const installationQueries =\r\n    filterText !== ''\r\n      ? installationData.filter(data => data.ques.includes(filterText))\r\n      : installationData;\r\n\r\n  const useStyles = makeStyles(theme => {\r\n    return {\r\n      divider: {\r\n        marginTop: 16,\r\n        marginBottom: 16,\r\n        [theme.breakpoints.up('sm')]: {\r\n          marginTop: 24,\r\n          marginBottom: 24,\r\n        },\r\n        [theme.breakpoints.up('lg')]: {\r\n          marginTop: 32,\r\n          marginBottom: 32,\r\n        },\r\n        [theme.breakpoints.up('xl')]: {\r\n          marginTop: 40,\r\n          marginBottom: 40,\r\n        },\r\n      },\r\n    };\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box flex={1}>\r\n      <Box mx='auto' textAlign='center' maxWidth={768}>\r\n        <Box\r\n          component='h2'\r\n          color='text.primary'\r\n          mb={6}\r\n          fontSize={{xs: 20, lg: 24, xl: 30}}\r\n          fontFamily={Fonts.BOLD}>\r\n          <IntlMessages id='knowledge.howHelp' />\r\n        </Box>\r\n\r\n        <TextField\r\n          id='outlined-with-placeholder'\r\n          placeholder={messages['knowledge.placeholder']}\r\n          style={{width: '100%'}}\r\n          variant='outlined'\r\n          InputProps={{\r\n            startAdornment: (\r\n              <Box fontFamily={Fonts.MEDIUM} clone>\r\n                <InputAdornment position='start'>\r\n                  <SearchIcon />\r\n                </InputAdornment>\r\n              </Box>\r\n            ),\r\n          }}\r\n          value={filterText}\r\n          onChange={event => setFilterText(event.target.value)}\r\n        />\r\n      </Box>\r\n\r\n      <Divider className={classes.divider} />\r\n\r\n      <Sales saleQueries={saleQueries} />\r\n\r\n      <Installation installationQueries={installationQueries} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default KnowledgeBase;\r\n"],"sourceRoot":""}