(this.webpackJsonpcrema=this.webpackJsonpcrema||[]).push([[121],{2835:function(n,e,t){"use strict";t.r(e);var r=t(0),o=t.n(r),a=t(407),i=t(474),s=t(473),c=t(472),l=t(278),p=t(279),u=t(281),m=t(280),d=t(1569),g=t(1674),f=t.n(g),h=t(295),v=t.n(h),E=f.a&&navigator.geolocation?navigator.geolocation:{getCurrentPosition:function(n,e){e("Your browser doesn't support geolocation.")}},M=Object(d.withGoogleMap)((function(n){return o.a.createElement(d.GoogleMap,{defaultZoom:10,center:n.center},n.center&&o.a.createElement(d.InfoWindow,{position:n.center},o.a.createElement("div",null,n.content)),n.center&&o.a.createElement(d.Circle,{center:n.center,radius:n.radius,options:{fillColor:"red",fillOpacity:.2,strokeColor:"red",strokeOpacity:1,strokeWeight:1}}))})),b=function(n){Object(u.a)(t,n);var e=Object(m.a)(t);function t(){var n;Object(l.a)(this,t);for(var r=arguments.length,o=new Array(r),a=0;a<r;a++)o[a]=arguments[a];return(n=e.call.apply(e,[this].concat(o))).state={center:null,content:null,radius:6e3},n.isUnmounted=!1,n}return Object(p.a)(t,[{key:"componentDidMount",value:function(){var n=this,e=function e(){n.isUnmounted||(n.setState({radius:Math.max(n.state.radius-20,0)}),n.state.radius>200&&v()(e))};E.getCurrentPosition((function(t){n.isUnmounted||(n.setState({center:{lat:t.coords.latitude,lng:t.coords.longitude},content:"Location found using HTML5."}),v()(e))}),(function(e){n.isUnmounted||n.setState({center:{lat:60,lng:105},content:"Error: The Geolocation service failed (".concat(e,").")})}))}},{key:"componentWillUnmount",value:function(){this.isUnmounted=!0}},{key:"render",value:function(){return o.a.createElement(M,{containerElement:o.a.createElement("div",{className:"cr-embed-responsive cr-embed-responsive-21by9"}),mapElement:o.a.createElement("div",{className:"cr-embed-responsive-item"}),center:this.state.center,content:this.state.content,radius:this.state.radius})}}]),t}(r.Component);e.default=function(){return o.a.createElement(o.a.Fragment,null,o.a.createElement(s.a,{title:"Google Map",refUrl:"http://google-map-react.github.io/google-map-react/map/balderdash/"}),o.a.createElement(c.a,null,o.a.createElement(a.a,{item:!0,xs:12},o.a.createElement(i.a,{title:"Simple Map",component:b,source:"import React, {Component} from 'react';\r\nimport {Circle, GoogleMap, InfoWindow, withGoogleMap} from 'react-google-maps';\r\nimport canUseDOM from 'can-use-dom';\r\nimport raf from 'raf';\r\n\r\nconst geolocation =\r\n  canUseDOM && navigator.geolocation\r\n    ? navigator.geolocation\r\n    : {\r\n        getCurrentPosition(success, failure) {\r\n          failure(`Your browser doesn't support geolocation.`);\r\n        },\r\n      };\r\n\r\nconst GeolocationExampleGoogleMap = withGoogleMap(props => (\r\n  <GoogleMap defaultZoom={10} center={props.center}>\r\n    {props.center && (\r\n      <InfoWindow position={props.center}>\r\n        <div>{props.content}</div>\r\n      </InfoWindow>\r\n    )}\r\n    {props.center && (\r\n      <Circle\r\n        center={props.center}\r\n        radius={props.radius}\r\n        options={{\r\n          fillColor: 'red',\r\n          fillOpacity: 0.2,\r\n          strokeColor: 'red',\r\n          strokeOpacity: 1,\r\n          strokeWeight: 1,\r\n        }}\r\n      />\r\n    )}\r\n  </GoogleMap>\r\n));\r\n\r\n/*\r\n * https://developers.google.com/maps/documentation/javascript/examples/map-geolocation\r\n *\r\n * Add <script src=\"https://maps.googleapis.com/maps/api/js\"><\/script> to your HTML to provide google.maps reference\r\n */\r\nexport default class GeolocationExample extends Component {\r\n  state = {\r\n    center: null,\r\n    content: null,\r\n    radius: 6000,\r\n  };\r\n\r\n  isUnmounted = false;\r\n\r\n  componentDidMount() {\r\n    const tick = () => {\r\n      if (this.isUnmounted) {\r\n        return;\r\n      }\r\n      this.setState({radius: Math.max(this.state.radius - 20, 0)});\r\n\r\n      if (this.state.radius > 200) {\r\n        raf(tick);\r\n      }\r\n    };\r\n    geolocation.getCurrentPosition(\r\n      position => {\r\n        if (this.isUnmounted) {\r\n          return;\r\n        }\r\n        this.setState({\r\n          center: {\r\n            lat: position.coords.latitude,\r\n            lng: position.coords.longitude,\r\n          },\r\n          content: `Location found using HTML5.`,\r\n        });\r\n\r\n        raf(tick);\r\n      },\r\n      reason => {\r\n        if (this.isUnmounted) {\r\n          return;\r\n        }\r\n        this.setState({\r\n          center: {\r\n            lat: 60,\r\n            lng: 105,\r\n          },\r\n          content: `Error: The Geolocation service failed (${reason}).`,\r\n        });\r\n      },\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.isUnmounted = true;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <GeolocationExampleGoogleMap\r\n        containerElement={\r\n          <div className='cr-embed-responsive cr-embed-responsive-21by9' />\r\n        }\r\n        mapElement={<div className='cr-embed-responsive-item' />}\r\n        center={this.state.center}\r\n        content={this.state.content}\r\n        radius={this.state.radius}\r\n      />\r\n    );\r\n  }\r\n}\r\n"}))))}}}]);
//# sourceMappingURL=121.1a3fd992.chunk.js.map